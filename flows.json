[
    {
        "id": "66dc4606b2245ab2",
        "type": "tab",
        "label": "node-RED Project",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "094bd06b2f6a954a",
        "type": "tab",
        "label": "Opening node-RED flows.json",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e6928b3861ed8f5d",
        "type": "tab",
        "label": "Opening node-RED repo in terminal",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c0f1d6631219e9f1",
        "type": "tab",
        "label": "Manage open windows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2176de2541256f66",
        "type": "tab",
        "label": "Open Sahel project",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d94f6d4812f18812",
        "type": "tab",
        "label": "Sahel | Open in terminal",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d2cbc16db312fbed",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2a81a7a539926088",
        "type": "tab",
        "label": "Sahel",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f47dd7b3b301c58e",
        "type": "tab",
        "label": "Sahel | Logs",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b24567603cf835ad",
        "type": "tab",
        "label": "Gotcha",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ce03002a29422c45",
        "type": "tab",
        "label": "Open Gotcha",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9f851333696e4da5",
        "type": "tab",
        "label": "Workshops",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0c0d2ad2c595d8d7",
        "type": "tab",
        "label": "Search your flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "83fa5debc97eaecb",
        "type": "tab",
        "label": "Main Hierarchy",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "88bd534164ebf0ab",
        "type": "tab",
        "label": "Projects",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "231d43866ed2d184",
        "type": "tab",
        "label": "Workspace",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9aba9cdb650afd6e",
        "type": "tab",
        "label": "Notion",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "25598a4d8875e5af",
        "type": "tab",
        "label": "Zimbabwe | Docker ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5cc51beeda65e265",
        "type": "tab",
        "label": "Launching Utilities",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c0be0a5f88260291",
        "type": "tab",
        "label": "Zimbabwe | Open in ...",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8f747a3fa3549e13",
        "type": "tab",
        "label": "Zimbabwe | Open in | Terminal",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c3da96311434c492",
        "type": "tab",
        "label": "Packages Repos",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "53247e78bebda9f2",
        "type": "tab",
        "label": "Zimbabwe ...",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fa34e35f8c929634",
        "type": "tab",
        "label": "Sahel >> Manage Configuration",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f905afaf85d72616",
        "type": "tab",
        "label": "Open a usual folder",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f85795edaa2feecd",
        "type": "tab",
        "label": "Sahel | Open in Rider",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "52b971736c7cc6dd",
        "type": "tab",
        "label": "Tile windows of a process",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "45e2e642be123d15",
        "type": "tab",
        "label": "Zimbabwe | VSCode",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e835f561f7c858c6",
        "type": "tab",
        "label": "Commit node-RED repo changes",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9f39cede1a22d613",
        "type": "tab",
        "label": "Check current node-RED remote repo",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a4cfc7f3534f1d11",
        "type": "tab",
        "label": "Opening node-RED repo in vscode",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "481fa3312bbf0aa2",
        "type": "tab",
        "label": "Compare Files/Folders",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b2b0299ea00c11d9",
        "type": "tab",
        "label": "Sahel | VSCode",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ba73c7efac8344ce",
        "type": "tab",
        "label": "Zimbabwe | Open in Rider",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d39e06fc3287e0a6",
        "type": "tab",
        "label": "testttttttttttttttttttttttt",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3f411aa3ba670cb2",
        "type": "subflow",
        "name": "Mcq",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "07ca76319910aea3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 710,
                "y": 40,
                "wires": [
                    {
                        "id": "a89795192f231183",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1260,
                "y": 100,
                "wires": [
                    {
                        "id": "20a7673afc6ed2fd",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1060,
                "y": 360,
                "wires": [
                    {
                        "id": "af01eaae99bdbdde",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "question",
                "type": "str",
                "value": "string: Prompting user"
            },
            {
                "name": "options",
                "type": "str",
                "value": "string[]: The options available"
            },
            {
                "name": "out - answer",
                "type": "str",
                "value": "string: The selected item"
            }
        ],
        "meta": {
            "desc": "Start Mcq"
        },
        "color": "#E9967A",
        "inputLabels": [
            "options: [], question: \"\""
        ],
        "outputLabels": [
            "Failed",
            "Cancelled",
            "Option selected"
        ],
        "status": {
            "x": 240,
            "y": 40,
            "wires": [
                {
                    "id": "61db02665363232f",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "4178eda1bbbd7002",
        "type": "subflow",
        "name": "Run in PowerShell",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 260,
                "wires": [
                    {
                        "id": "5ff56cb70dcde71d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 260,
                "wires": [
                    {
                        "id": "40dcda0be3cc1abd",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": "string"
            },
            {
                "name": "workingDir",
                "type": "str",
                "value": "string"
            },
            {
                "name": "detachSpawnedProcess",
                "type": "str",
                "value": "boolean"
            }
        ],
        "meta": {},
        "color": "#777777",
        "icon": "font-awesome/fa-terminal",
        "status": {
            "x": 740,
            "y": 60,
            "wires": [
                {
                    "id": "5bcf68ca5b6d18ea",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "552764fe6e0b1a84",
        "type": "subflow",
        "name": "Speak",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 180,
                "wires": [
                    {
                        "id": "3e67155e11a44ed2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1280,
                "y": 180,
                "wires": [
                    {
                        "id": "d6146d6c9211a484",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "toSpeak",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "icon": "font-awesome/fa-bullhorn",
        "status": {
            "x": 460,
            "y": 80,
            "wires": [
                {
                    "id": "05313ae618fa54ce",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "7725d64c5713a5a0",
        "type": "subflow",
        "name": "Run in terminal",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 220,
                "wires": [
                    {
                        "id": "14288d44e4764134"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 800,
                "y": 440,
                "wires": [
                    {
                        "id": "305cc53362b4c3be",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": "string"
            },
            {
                "name": "workingDirectory",
                "type": "str",
                "value": "string"
            },
            {
                "name": "detachSpawnedProcess",
                "type": "str",
                "value": "boolean"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 620,
            "y": 60,
            "wires": [
                {
                    "id": "d4af49bf82b54730",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "67d0907b3004484d",
        "type": "subflow",
        "name": "Log",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 260,
                "wires": [
                    {
                        "id": "eadac2317ec8988a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 950,
                "y": 260,
                "wires": [
                    {
                        "id": "a37a3ae3665df4f0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "toLog"
        ],
        "outputLabels": [
            "void"
        ],
        "icon": "font-awesome/fa-pencil-square-o",
        "status": {
            "x": 400,
            "y": 160,
            "wires": [
                {
                    "id": "690b50199733f70c",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "0fc4eeeb2f2b1fb9",
        "type": "subflow",
        "name": "PlaySound_MouseClick",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 300,
                "y": 300,
                "wires": [
                    {
                        "id": "42b883da9df0572f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 300,
                "wires": [
                    {
                        "id": "42b883da9df0572f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c4112ffe1214c7db",
        "type": "subflow",
        "name": "Stdout",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 220,
                "wires": [
                    {
                        "id": "f20fefea06b1e5a1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 180,
                "wires": [
                    {
                        "id": "8ca44f6712ee9d41",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1050,
                "y": 260,
                "wires": [
                    {
                        "id": "8ca44f6712ee9d41",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": ""
            },
            {
                "name": "workingDirectory",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "command: \"\", workingDirectory: \"\""
        ],
        "outputLabels": [
            "exitCode <> 0",
            "exitCode = 0"
        ],
        "status": {
            "x": 740,
            "y": 60,
            "wires": [
                {
                    "id": "5d644f19a30478c3",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "630454ba203bdeb2",
        "type": "subflow",
        "name": "🚥Spy",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 220,
                "wires": [
                    {
                        "id": "5290e90df06ee51e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 360,
                "wires": [
                    {
                        "id": "900b20562dc99868",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#362827",
        "icon": "font-awesome/fa-user-secret",
        "status": {
            "x": 320,
            "y": 60,
            "wires": [
                {
                    "id": "f755870245443155",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "c96d6610ba199ebc",
        "type": "subflow",
        "name": "eval(env) => msg",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 240,
                "wires": [
                    {
                        "id": "41aeb3d70d9e1cda"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 300,
                "wires": [
                    {
                        "id": "829fb4a743420640",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 500,
            "y": 80,
            "wires": [
                {
                    "id": "3774797650d0b37b",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "bbea173bec06991e",
        "type": "subflow",
        "name": "Navigate to here",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 360,
                "y": 200,
                "wires": [
                    {
                        "id": "1dcc747d25575675"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 120,
                "wires": [
                    {
                        "id": "d6dd512304b44495",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "79b3adc8f3ea8d41",
        "type": "subflow",
        "name": "Tile windows of a process",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 140,
                "wires": [
                    {
                        "id": "9d6ea776ae79ed65"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 280,
                "wires": [
                    {
                        "id": "8ebf4bac4a7a17d9",
                        "port": 0
                    },
                    {
                        "id": "7722a8762723e51d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "processName",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#86b376",
        "status": {
            "x": 450,
            "y": 40,
            "wires": [
                {
                    "id": "6bee7bbab24ed39a",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "b23fac97ba53404f",
        "type": "subflow",
        "name": "Open in default browser",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 160,
                "wires": [
                    {
                        "id": "70f9550e23a37e06"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 160,
                "wires": [
                    {
                        "id": "51e4df9d73f8b93f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "url",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#C0DEED",
        "icon": "font-awesome/fa-hand-pointer-o",
        "status": {
            "x": 540,
            "y": 40,
            "wires": [
                {
                    "id": "195aab9f448032cc",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "09818a42b905f599",
        "type": "subflow",
        "name": "Done",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 400,
                "y": 180,
                "wires": [
                    {
                        "id": "8e9fb74fcaa51afa"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1300,
                "y": 180,
                "wires": [
                    {
                        "id": "ec9db054a0f3aa2c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#3FADB5",
        "icon": "font-awesome/fa-check",
        "status": {
            "x": 620,
            "y": 60,
            "wires": [
                {
                    "id": "1bee0246217f59ee",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "f6ca9e8aca47dc3c",
        "type": "subflow",
        "name": "Run process by name",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 120,
                "wires": [
                    {
                        "id": "9e9940688950c916"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 720,
                "y": 120,
                "wires": [
                    {
                        "id": "92d0ac6eff83fe27",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "processName",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#AAAA66",
        "icon": "font-awesome/fa-american-sign-language-interpreting"
    },
    {
        "id": "b182be5bcebc47cd",
        "type": "subflow",
        "name": "Open url in the side view",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 160,
                "wires": [
                    {
                        "id": "65decd69c83b667a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 800,
                "y": 240,
                "wires": [
                    {
                        "id": "7697421c94d8de51",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "url",
                "type": "str",
                "value": "\"https://www.google.com\""
            }
        ],
        "meta": {},
        "color": "#4284f5",
        "icon": "node-red/arrow-in.svg",
        "status": {
            "x": 540,
            "y": 80,
            "wires": [
                {
                    "id": "c4ef703851f8813c",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "d147f856086021e2",
        "type": "subflow",
        "name": "Run app directly",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 160,
                "wires": [
                    {
                        "id": "ad186781129baba9"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1540,
                "y": 240,
                "wires": [
                    {
                        "id": "3a921c898467861f",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1510,
                "y": 380,
                "wires": [
                    {
                        "id": "fab771318a09f492",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "processName",
                "type": "str",
                "value": "(required) To be translated by Gotcha to an exe path"
            },
            {
                "name": "args",
                "type": "str",
                "value": ""
            },
            {
                "name": "workingDirectory",
                "type": "str",
                "value": ""
            },
            {
                "name": "waitForExit",
                "type": "str",
                "value": "false"
            }
        ],
        "meta": {},
        "color": "#a832a4",
        "outputLabels": [
            "Error",
            "Success"
        ],
        "icon": "font-awesome/fa-forward",
        "status": {
            "x": 620,
            "y": 40,
            "wires": [
                {
                    "id": "57d05a808c372882",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9b174c4cdae724a4",
        "type": "subflow",
        "name": "MCQ new",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 240,
                "wires": [
                    {
                        "id": "f1e9fa952d8508eb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1120,
                "y": 420,
                "wires": [
                    {
                        "id": "3a80cf2be714752e",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1140,
                "y": 480,
                "wires": [
                    {
                        "id": "55efbf4f22a2788f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "question",
                "type": "str",
                "value": "\"Action?\""
            },
            {
                "name": "options",
                "type": "str",
                "value": "Each as key---content"
            },
            {
                "name": "out - answer",
                "type": "str",
                "value": "The key before '---'"
            }
        ],
        "meta": {},
        "color": "#fa5300",
        "icon": "node-red/debug.svg",
        "status": {
            "x": 460,
            "y": 80,
            "wires": [
                {
                    "id": "a6754e4001f442e5",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "e43525bcfe7306a2",
        "type": "subflow",
        "name": "Any msg.error?",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 200,
                "wires": [
                    {
                        "id": "8d8911818f4e1a30"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 180,
                "wires": [
                    {
                        "id": "16bba6bbeb941c7b",
                        "port": 0
                    }
                ]
            },
            {
                "x": 380,
                "y": 260,
                "wires": [
                    {
                        "id": "8d8911818f4e1a30",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "orange",
        "outputLabels": [
            "Yes",
            "No"
        ],
        "icon": "font-awesome/fa-warning",
        "status": {
            "x": 300,
            "y": 80,
            "wires": [
                {
                    "id": "1438115fd3d12226",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "402c6975a1b21f7b",
        "type": "subflow",
        "name": "test to delete",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 160,
                "y": 30,
                "wires": []
            }
        ],
        "env": [
            {
                "name": "env1",
                "type": "str",
                "value": "\"test\""
            },
            {
                "name": "env2",
                "type": "str",
                "value": ""
            },
            {
                "name": "env3",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "093e123fa639c9e7",
        "type": "subflow",
        "name": "test-parent",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "37665ccbbcc18109"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 80,
                "wires": [
                    {
                        "id": "6c1607c4944e0cda",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "myEnv1",
                "type": "str",
                "value": "staticValue"
            },
            {
                "name": "myEnv2",
                "type": "str",
                "value": ""
            },
            {
                "name": "myEnv3",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "fd9310e15831f976",
        "type": "subflow",
        "name": "test-child",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "80d9edbf88d4518b"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "myEnvVar",
                "type": "str",
                "value": "`soso leve ${test}`"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 560,
            "y": 200,
            "wires": [
                {
                    "id": "6cb85e83a1387e42",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "dca4607fc44f76d8",
        "type": "subflow",
        "name": "Sng_KestrelHandler_ArrangeWindowsOfProcess",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "6a3d9b2d7b49d384"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1200,
                "y": 180,
                "wires": [
                    {
                        "id": "5694bbbee2036eec",
                        "port": 0
                    }
                ]
            },
            {
                "x": 820,
                "y": 240,
                "wires": [
                    {
                        "id": "2300a0e6c786a93e",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "processName",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#4287f5",
        "icon": "node-red/link-call.svg"
    },
    {
        "id": "884f94515d431dae",
        "type": "subflow",
        "name": "🔖Status",
        "info": "Accepts none, some, or all of the three values of:\r\n1. fill\r\n2. shape\r\n3. text\r\nNeeded for setting the status visual clue on the container node.\r\nYou may apply some or all the nodes.\r\n\r\nIf none supplied, it sets the node status as found\r\nin msg.state.status current values. \r\n\r\nif some applied, the missing ones are consumed from\r\nthe current values from msg.state.status",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 120,
                "wires": [
                    {
                        "id": "51e171a6039e7df5"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 120,
                "wires": [
                    {
                        "id": "9e9e679fa9b13c03",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "fill",
                "type": "str",
                "value": ""
            },
            {
                "name": "shape",
                "type": "str",
                "value": ""
            },
            {
                "name": "text",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#C0C0C0",
        "icon": "font-awesome/fa-bookmark-o",
        "status": {
            "x": 540,
            "y": 40,
            "wires": [
                {
                    "id": "972a10135ae7a6cb",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "0f7d49711eadc4d1",
        "type": "subflow",
        "name": "if",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 170,
                "y": 220,
                "wires": [
                    {
                        "id": "7e07887e1c2ce561"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 180,
                "wires": [
                    {
                        "id": "3b96d677d867684b",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1030,
                "y": 260,
                "wires": [
                    {
                        "id": "f5a86293442e633a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#bd395e",
        "outputLabels": [
            "Passed",
            "Didn't pass"
        ],
        "icon": "font-awesome/fa-question",
        "status": {
            "x": 530,
            "y": 140,
            "wires": [
                {
                    "id": "3f159dfeb9fd64b6",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "b1fd681b1d5672dc",
        "type": "subflow",
        "name": "🔴 Breakpoint",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "7a0a5841addb3cba"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1280,
                "y": 200,
                "wires": [
                    {
                        "id": "325378e4a47b93c3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#C0C0C0",
        "icon": "node-red/batch.svg",
        "status": {
            "x": 480,
            "y": 60,
            "wires": [
                {
                    "id": "58eb1585b9d8c6af",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "e71dd36fbebd831d",
        "type": "subflow",
        "name": "Add MCQ option",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 140,
                "wires": [
                    {
                        "id": "89472cb6e2250b9b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 140,
                "wires": [
                    {
                        "id": "67dbddea5290118d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "mcqTitle",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "icon": "font-awesome/fa-circle-o",
        "status": {
            "x": 480,
            "y": 40,
            "wires": [
                {
                    "id": "18516758a72d6dd4",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "e970c018d27254d4",
        "type": "subflow",
        "name": "Dynamic MCQ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "8434fc95de8f8fe7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 420,
                "wires": [
                    {
                        "id": "e141a6f51aeb9832",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#AAAA66",
        "status": {
            "x": 400,
            "y": 20,
            "wires": [
                {
                    "id": "9f9c10db1186e4c1",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "73f46db8070c553e",
        "type": "subflow",
        "name": "MCQ Case",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 140,
                "wires": [
                    {
                        "id": "3c71c372a4961011"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1420,
                "y": 100,
                "wires": [
                    {
                        "id": "a73e78124c246342",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1420,
                "y": 200,
                "wires": [
                    {
                        "id": "efe3dea4dfed7287",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#934eed",
        "icon": "font-awesome/fa-flask",
        "status": {
            "x": 600,
            "y": 40,
            "wires": [
                {
                    "id": "bd599078339a1e9a",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "b46d116f918b2cd8",
        "type": "subflow",
        "name": "Reset MCQ options",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 280,
                "y": 120,
                "wires": [
                    {
                        "id": "176323f09b0d1f22"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 580,
                "y": 120,
                "wires": [
                    {
                        "id": "176323f09b0d1f22",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#666666",
        "icon": "font-awesome/fa-trash"
    },
    {
        "id": "8a100851b2ca9df7",
        "type": "subflow",
        "name": "Dynamic MCQ options setter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 420,
                "y": 140,
                "wires": [
                    {
                        "id": "f44d29a68cc0c480"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 140,
                "wires": [
                    {
                        "id": "f44d29a68cc0c480",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "5859b3292f239f6a",
        "type": "subflow",
        "name": "Required",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 320,
                "wires": [
                    {
                        "id": "b9e3791772c11087"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 320,
                "wires": [
                    {
                        "id": "2a61b80cdde5116b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#d07eff",
        "icon": "font-awesome/fa-asterisk",
        "status": {
            "x": 660,
            "y": 60,
            "wires": [
                {
                    "id": "370ba469ba5e98b2",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "1f18c5c98cde2760",
        "type": "subflow",
        "name": "Run JavaScript line",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 340,
                "wires": [
                    {
                        "id": "75a8c422a04223bf"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 340,
                "wires": [
                    {
                        "id": "a2a9595c14bb2c54",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#ba42ff",
        "icon": "node-red/parser-json.svg",
        "status": {
            "x": 480,
            "y": 80,
            "wires": [
                {
                    "id": "74a5d9f821f3a6fd",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "7dd6aa47fd337fda",
        "type": "subflow",
        "name": "Confirm",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 160,
                "wires": [
                    {
                        "id": "f2b409d7e0140731"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 920,
                "y": 260,
                "wires": [
                    {
                        "id": "6a30369f7ae94369",
                        "port": 0
                    }
                ]
            },
            {
                "x": 930,
                "y": 340,
                "wires": [
                    {
                        "id": "23f0a547cd990d31",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#ff4a4a",
        "outputLabels": [
            "Denied",
            "Confirmed"
        ],
        "icon": "font-awesome/fa-warning",
        "status": {
            "x": 560,
            "y": 40,
            "wires": [
                {
                    "id": "3c0eca4e037f079d",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "a3b8de1e949dac34",
        "type": "group",
        "z": "b24567603cf835ad",
        "name": "Gotcha",
        "style": {
            "label": true,
            "fill": "#3f93cf"
        },
        "nodes": [
            "7cc7d74b3edcb61b",
            "4602c80b271db6a8",
            "eda7de984f2e78fb",
            "b5bcf8847af43421",
            "d945b0b1bb641dfb",
            "88c0d2dc866aa53a",
            "63595ab4bfa6cb80",
            "1b052980d0794cc6",
            "4bf2e6e29040cb97",
            "aa3b1dddf9a4bfdf",
            "c8f94f7bbc7da551",
            "bf7846c7ea4880d3",
            "e759445a64e94b88",
            "5e6749c67fb01a30",
            "c40c6bcdbf1fe7f0",
            "ddf658274125e101",
            "b5318eb192ca5318",
            "4f401ea22ab3b02d",
            "f687369e3b21cbca",
            "619164876d37570b"
        ],
        "x": 14,
        "y": 147,
        "w": 1484,
        "h": 1114
    },
    {
        "id": "8a90e1f4484ae776",
        "type": "group",
        "z": "9f851333696e4da5",
        "name": "Testing NodeJS on the fly script",
        "style": {
            "label": true
        },
        "nodes": [
            "5f495ffd68a2c043",
            "58e42705b26499db",
            "c67f8ff8353a26ce",
            "3b502478dadaa307"
        ],
        "x": 754,
        "y": 59,
        "w": 552,
        "h": 162
    },
    {
        "id": "d4851dcab8bfd682",
        "type": "group",
        "z": "0c0d2ad2c595d8d7",
        "name": "Load endpoint nodes",
        "style": {
            "label": true
        },
        "nodes": [
            "401247fa346deaa1",
            "fbdce406ac18928e"
        ],
        "x": 574,
        "y": 119,
        "w": 452,
        "h": 82
    },
    {
        "id": "d1cb9ae10eaaf7a5",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "Search your flows",
        "style": {
            "label": true
        },
        "nodes": [
            "462f77be0946762f"
        ],
        "x": 634,
        "y": 79,
        "w": 119,
        "h": 82
    },
    {
        "id": "c6d416c97692b61f",
        "type": "group",
        "z": "88bd534164ebf0ab",
        "name": "Pick a project",
        "style": {
            "label": true
        },
        "nodes": [
            "b4395c836a8a31d4",
            "bbd69d6566786bd9",
            "57afd1505bc639d5",
            "d03829623a2a7f73"
        ],
        "x": 474,
        "y": 39,
        "w": 692,
        "h": 149.5
    },
    {
        "id": "be9b248c55b68f73",
        "type": "group",
        "z": "88bd534164ebf0ab",
        "name": "Gotcha",
        "style": {
            "label": true
        },
        "nodes": [
            "1f9abd20675c99df"
        ],
        "x": 864,
        "y": 419,
        "w": 82,
        "h": 82
    },
    {
        "id": "eebee2a51eea17fe",
        "type": "group",
        "z": "88bd534164ebf0ab",
        "name": "Sahel",
        "style": {
            "label": true
        },
        "nodes": [
            "4fa558a20c6022e9"
        ],
        "x": 864,
        "y": 219,
        "w": 82,
        "h": 82
    },
    {
        "id": "cc542cb9a782beb0",
        "type": "group",
        "z": "88bd534164ebf0ab",
        "name": "node-RED",
        "style": {
            "label": true
        },
        "nodes": [
            "25f6bee36d2516b0"
        ],
        "x": 864,
        "y": 519,
        "w": 82,
        "h": 82
    },
    {
        "id": "d7a707b03476512d",
        "type": "group",
        "z": "83fa5debc97eaecb",
        "name": "Workshops",
        "style": {
            "label": true
        },
        "nodes": [
            "937ddc8d124bbfbc"
        ],
        "x": 884,
        "y": 279,
        "w": 82,
        "h": 82
    },
    {
        "id": "876c6331f050aedc",
        "type": "group",
        "z": "83fa5debc97eaecb",
        "name": "Workspace",
        "style": {
            "label": true
        },
        "nodes": [
            "4dfa4a66c194ba2d"
        ],
        "x": 884,
        "y": 179,
        "w": 82,
        "h": 82
    },
    {
        "id": "0939cfee324d32b3",
        "type": "group",
        "z": "83fa5debc97eaecb",
        "name": "Projects",
        "style": {
            "label": true
        },
        "nodes": [
            "9de929cb21c72086"
        ],
        "x": 894,
        "y": 59,
        "w": 82,
        "h": 82
    },
    {
        "id": "7fd3b69301a460a5",
        "type": "group",
        "z": "231d43866ed2d184",
        "name": "Notion ...",
        "style": {
            "label": true
        },
        "nodes": [
            "119eb9845ad10e6f"
        ],
        "x": 844,
        "y": 159,
        "w": 82,
        "h": 82
    },
    {
        "id": "b2d82eb2553e598d",
        "type": "group",
        "z": "231d43866ed2d184",
        "name": "Manage open windows ...",
        "style": {
            "label": true
        },
        "nodes": [
            "e6d09a8a7f8e8bf3"
        ],
        "x": 844,
        "y": 39,
        "w": 167,
        "h": 82
    },
    {
        "id": "413c8e337afa7cb7",
        "type": "group",
        "z": "c0f1d6631219e9f1",
        "name": "Tile",
        "style": {
            "label": true
        },
        "nodes": [
            "c24b2fae596d1233",
            "f0e0206b94c16e0b",
            "9153dba56d59140f",
            "ab460aa5506a2480",
            "0b810641261327d5",
            "1174c09759ee9da1",
            "d8601ad97b7a3fc4",
            "9dd9a6572b9abeb4",
            "c70680b03671d193",
            "5580fc2b5cd501db",
            "ebb01270777c043c",
            "add4e3ab06d4c8c0",
            "239decb8d5bb93f7",
            "d51673bfc31c9012",
            "9a16ef80096466d0",
            "9ba63ce2df296f64",
            "1d6ae06380e8d1e6"
        ],
        "x": 674,
        "y": 473,
        "w": 988,
        "h": 688
    },
    {
        "id": "d5b871b6c3d10e5f",
        "type": "group",
        "z": "83fa5debc97eaecb",
        "name": "Launching Utilities",
        "style": {
            "label": true
        },
        "nodes": [
            "8d168a45978a628d"
        ],
        "x": 874,
        "y": 399,
        "w": 122,
        "h": 82
    },
    {
        "id": "cb7d25359320703a",
        "type": "group",
        "z": "0c0d2ad2c595d8d7",
        "name": "Move to the target flow",
        "style": {
            "label": true
        },
        "nodes": [
            "4a06e4fe196c8287",
            "e99a53bc2e1a2ae2"
        ],
        "x": 914,
        "y": 359,
        "w": 432,
        "h": 82
    },
    {
        "id": "d726de86ecd8c1a2",
        "type": "group",
        "z": "88bd534164ebf0ab",
        "name": "Zimbabwe",
        "style": {
            "label": true
        },
        "nodes": [
            "b04f7c947ff65bf9"
        ],
        "x": 864,
        "y": 319,
        "w": 82,
        "h": 82
    },
    {
        "id": "3a32e7f9469c4dde",
        "type": "group",
        "z": "5cc51beeda65e265",
        "name": "Is down for me only?",
        "style": {
            "label": true
        },
        "nodes": [
            "cfc88a5cd1ce0312",
            "d0cb08cda45b532d",
            "a7f19f37dfd005e0",
            "277eec7a1ed436ba"
        ],
        "x": 854,
        "y": 19,
        "w": 512,
        "h": 142
    },
    {
        "id": "455587afd6b612e2",
        "type": "group",
        "z": "5cc51beeda65e265",
        "name": "Packages Repos",
        "style": {
            "label": true
        },
        "nodes": [
            "af31c565bcf6ccd6"
        ],
        "x": 1104,
        "y": 199,
        "w": 114,
        "h": 82
    },
    {
        "id": "5ec2d4ccd89cd551",
        "type": "group",
        "z": "5cc51beeda65e265",
        "name": "Notion ...",
        "style": {
            "label": true
        },
        "nodes": [
            "b4eed7337acd3d42"
        ],
        "x": 884,
        "y": 439,
        "w": 82,
        "h": 82
    },
    {
        "id": "513e9c1f10775474",
        "type": "group",
        "z": "79b3adc8f3ea8d41",
        "name": "Zero windows found",
        "style": {
            "label": true
        },
        "nodes": [
            "525abef6f57285fb",
            "e38213dd3fcdbe54",
            "8ebf4bac4a7a17d9"
        ],
        "x": 634,
        "y": 359,
        "w": 372,
        "h": 162
    },
    {
        "id": "c7fd783a0f9d3116",
        "type": "group",
        "z": "79b3adc8f3ea8d41",
        "name": "Windows found for the process",
        "style": {
            "label": true
        },
        "nodes": [
            "8b91f279c8b553a0"
        ],
        "x": 634,
        "y": 259,
        "w": 200,
        "h": 82
    },
    {
        "id": "69725cd2aafba14c",
        "type": "group",
        "z": "fa34e35f8c929634",
        "name": "Where is K8s configuration",
        "style": {
            "label": true
        },
        "nodes": [
            "4dd61e82156456f8",
            "5017239a40aa2220",
            "12fc9ea08b94cd1e",
            "64026deb8fe33cdf",
            "eecb4c4b1234f468"
        ],
        "x": 394,
        "y": 279,
        "w": 632,
        "h": 202
    },
    {
        "id": "1b2edbd82ca4f440",
        "type": "group",
        "z": "5cc51beeda65e265",
        "name": "Open a usual folder",
        "style": {
            "label": true
        },
        "nodes": [
            "74d103f3e26e622a"
        ],
        "x": 864,
        "y": 559,
        "w": 130,
        "h": 82
    },
    {
        "id": "abed1dc3aea932af",
        "type": "group",
        "z": "f905afaf85d72616",
        "name": "OneDrive",
        "style": {
            "label": true
        },
        "nodes": [
            "acfe2361f15424b1",
            "62ee4f43189b08aa"
        ],
        "x": 834,
        "y": 299,
        "w": 352,
        "h": 82
    },
    {
        "id": "7eb8336643d9ab88",
        "type": "group",
        "z": "5cc51beeda65e265",
        "name": "Color picker",
        "style": {
            "label": true
        },
        "nodes": [
            "481aa11b6b32eec7"
        ],
        "x": 814,
        "y": 659,
        "w": 272,
        "h": 82
    },
    {
        "id": "e20cc3f88b104a1a",
        "type": "group",
        "z": "5cc51beeda65e265",
        "name": "JSON viewer",
        "style": {
            "label": true
        },
        "nodes": [
            "fcb35326d578b371"
        ],
        "x": 814,
        "y": 759,
        "w": 272,
        "h": 82
    },
    {
        "id": "424de33a52df2a11",
        "type": "group",
        "z": "5cc51beeda65e265",
        "name": "Regex Tester",
        "style": {
            "label": true
        },
        "nodes": [
            "648ce61f46c11f1a"
        ],
        "x": 814,
        "y": 859,
        "w": 272,
        "h": 82
    },
    {
        "id": "26cb2d175144d1a9",
        "type": "group",
        "z": "9b174c4cdae724a4",
        "name": "http call",
        "style": {
            "label": true
        },
        "nodes": [
            "521a107e922bf7da",
            "7e15824573c1252a"
        ],
        "x": 474,
        "y": 199,
        "w": 392,
        "h": 82
    },
    {
        "id": "f98f378474b75e8b",
        "type": "group",
        "z": "83fa5debc97eaecb",
        "name": "",
        "style": {
            "stroke": "#ff3f3f",
            "label": true
        },
        "nodes": [
            "0de2c7df28684cef",
            "25940f2e78833f44"
        ],
        "x": 874,
        "y": 499,
        "w": 372,
        "h": 82
    },
    {
        "id": "f0e020097c0796ed",
        "type": "group",
        "z": "630454ba203bdeb2",
        "name": "Send spinage message",
        "style": {
            "label": true
        },
        "nodes": [
            "6b48a278f99eb602",
            "69f791a222ca020e"
        ],
        "x": 554,
        "y": 179,
        "w": 492,
        "h": 82
    },
    {
        "id": "dafacf647be53d8c",
        "type": "group",
        "z": "f85795edaa2feecd",
        "name": "Rider",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ff3f3f",
            "fill-opacity": "0.13"
        },
        "nodes": [
            "bdba50632825cb88",
            "112030348ecc224f",
            "3efbf3847475e6d7",
            "164f9ab7fdebfec4",
            "305780e8616b520c"
        ],
        "x": 494,
        "y": 253,
        "w": 978,
        "h": 334
    },
    {
        "id": "5bd06472e5acbf9f",
        "type": "group",
        "z": "45e2e642be123d15",
        "name": "VSCode",
        "style": {
            "label": true,
            "fill": "#0070c0"
        },
        "nodes": [
            "f85163b16c01ddee",
            "4b83be363e6063f0"
        ],
        "x": 668,
        "y": 173,
        "w": 604,
        "h": 254
    },
    {
        "id": "5a119a92e3b463b9",
        "type": "group",
        "z": "0f7d49711eadc4d1",
        "name": "Hydrate state",
        "style": {
            "label": true
        },
        "nodes": [
            "7fc3733dc39fc7cc",
            "d3a3aee9ad9746e4"
        ],
        "x": 374,
        "y": 179,
        "w": 312,
        "h": 82
    },
    {
        "id": "a1e5a9fcc337147b",
        "type": "group",
        "z": "c0f1d6631219e9f1",
        "name": "Manage open windows",
        "style": {
            "label": true
        },
        "nodes": [
            "8bb3fa6d38e55690",
            "418d649c74d340b3"
        ],
        "x": 124,
        "y": 39,
        "w": 202,
        "h": 82
    },
    {
        "id": "5ed572ff9a88cdca",
        "type": "group",
        "z": "b1fd681b1d5672dc",
        "name": "/WaitForDebugContinue",
        "style": {
            "label": true
        },
        "nodes": [
            "4cc052582eaf527c"
        ],
        "x": 814,
        "y": 39,
        "w": 192,
        "h": 82
    },
    {
        "id": "7aecf8f8c26a14b4",
        "type": "group",
        "z": "e970c018d27254d4",
        "name": "http call",
        "style": {
            "label": true
        },
        "nodes": [
            "a05c0cc5ca310e30",
            "b1c5788b88f7ffd3"
        ],
        "x": 674,
        "y": 39,
        "w": 432,
        "h": 82
    },
    {
        "id": "e122cc39b0d934b6",
        "type": "group",
        "z": "66dc4606b2245ab2",
        "style": {
            "stroke": "#2e333a",
            "stroke-opacity": "1",
            "fill": "#383c45",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#dddddd"
        },
        "nodes": [
            "e38cba8046a802d2",
            "ddf524162d7f330f",
            "b89538047c1d0f4c",
            "27358c12558d5a01",
            "e7cc286fb9ce9ae5",
            "2ef2b69014d1bb5e",
            "52b126065256692a",
            "33f79f768906d75d",
            "65d55b910b81a871",
            "bad91dda333f174e",
            "ea75067cd542d4a9",
            "3c70f8df29d955bb",
            "2ed49881cfee59dd",
            "d4725a3cb64aba04",
            "76fd9b9553894e0a"
        ],
        "x": 214,
        "y": 239,
        "w": 1012,
        "h": 382
    },
    {
        "id": "4e78c8e730cc5653",
        "type": "group",
        "z": "73f46db8070c553e",
        "name": "Show MCQ dialog",
        "style": {
            "label": true
        },
        "nodes": [
            "4e478432094a1963",
            "115c0fd50ec5fdd3",
            "1855ea0fd8407202",
            "082c6f7b692efc30",
            "36e52ee060ff0830",
            "5a831870b044b0b6",
            "e3d4d476e978cb1f",
            "1174e03aeade541e",
            "64cf0188b5bbcaac",
            "0db1351aa92037d0",
            "5b2390cb4ff4ec6b"
        ],
        "x": 194,
        "y": 199,
        "w": 898,
        "h": 402
    },
    {
        "id": "7ae0292b643346fe",
        "type": "group",
        "z": "e835f561f7c858c6",
        "name": "Commit changes to node-RED repo",
        "style": {
            "stroke": "#3f3d4d",
            "fill": "#262533",
            "label": true,
            "color": "#ececec"
        },
        "nodes": [
            "7eee4ac1d906c487",
            "0c0f7df1ac76673e",
            "533b21645656be02",
            "c7142d4c7fd6cbd9",
            "043c2979a5106d55",
            "b085c303d12d5064"
        ],
        "x": 214,
        "y": 119,
        "w": 992,
        "h": 162
    },
    {
        "id": "b2d4114c04cb6f09",
        "type": "group",
        "z": "9f39cede1a22d613",
        "name": "Check current remote repo",
        "style": {
            "label": true
        },
        "nodes": [
            "3cda33f00a8b50c1",
            "27b575852ed45707",
            "693f3b71b143a290",
            "47f17cbee36a87af"
        ],
        "x": 314,
        "y": 79,
        "w": 492,
        "h": 142
    },
    {
        "id": "2f6f7c287d876256",
        "type": "group",
        "z": "a4cfc7f3534f1d11",
        "name": "Opening node-RED repo in vscode",
        "style": {
            "label": true
        },
        "nodes": [
            "10e13c72fd7c1a8e",
            "b4bfb4be0fc186cc",
            "81770e434c44378b"
        ],
        "x": 514,
        "y": 199,
        "w": 692,
        "h": 82
    },
    {
        "id": "d624c1df12c54d8b",
        "type": "group",
        "z": "e6928b3861ed8f5d",
        "name": "Opening node-RED repo in terminal",
        "style": {
            "label": true
        },
        "nodes": [
            "fe5568010bcdb6c8",
            "835ae7dc26f640f9",
            "94713546ea449250",
            "8ebb93b63415539b",
            "acb68ea86a6e9610"
        ],
        "x": 354,
        "y": 139,
        "w": 492,
        "h": 222
    },
    {
        "id": "ec21ae1ea709e15f",
        "type": "group",
        "z": "094bd06b2f6a954a",
        "name": "Opening node-RED repo in vscode",
        "style": {
            "label": true
        },
        "nodes": [
            "3c8092e5b1b036bb",
            "5bd6e3150ea2486f",
            "39d13d8a12c23ba8",
            "260f70804bb095b6"
        ],
        "x": 354,
        "y": 119,
        "w": 672,
        "h": 162
    },
    {
        "id": "409ac5c02d775892",
        "type": "group",
        "z": "83fa5debc97eaecb",
        "name": "MCQ",
        "style": {
            "label": true
        },
        "nodes": [
            "12076e6a18f49531",
            "44eb5ef56980b7d9",
            "318a7583b2a399af",
            "1a9e166baf6f4fee",
            "fcbd5d99984d0289",
            "c5c2c59bc8600cc8",
            "29b3047e9d6b362b",
            "cd07b7555b35bff8"
        ],
        "x": 374,
        "y": 59,
        "w": 472,
        "h": 322
    },
    {
        "id": "70b710fc662c021c",
        "type": "group",
        "z": "ce03002a29422c45",
        "name": "Open in VSCode",
        "style": {
            "stroke": "#3f3d4d",
            "fill": "#262533",
            "label": true,
            "color": "#ececec"
        },
        "nodes": [
            "7bb7e7163f7efbf9",
            "44c47461c9fe25d7"
        ],
        "x": 754,
        "y": 279,
        "w": 412,
        "h": 142
    },
    {
        "id": "8afb8df0eeea8641",
        "type": "group",
        "z": "ce03002a29422c45",
        "name": "Open the project",
        "style": {
            "label": true
        },
        "nodes": [
            "d089aba26f52fe05",
            "ae8f25dcbf57990e"
        ],
        "x": 314,
        "y": 51.5,
        "w": 302,
        "h": 97
    },
    {
        "id": "cad789a1334eb0a1",
        "type": "group",
        "z": "ce03002a29422c45",
        "name": "Open in terminal",
        "style": {
            "label": true
        },
        "nodes": [
            "34cc94d8b1496bc7",
            "4a12457e360b25fd"
        ],
        "x": 754,
        "y": 119,
        "w": 292,
        "h": 122
    },
    {
        "id": "9e49a1ff1ff51f65",
        "type": "group",
        "z": "ce03002a29422c45",
        "name": "Open in Rider",
        "style": {
            "stroke": "#3f3d4d",
            "fill": "#262533",
            "label": true,
            "color": "#ececec"
        },
        "nodes": [
            "5c48bc25721f3efb",
            "2006cfd9266403ef"
        ],
        "x": 754,
        "y": 19,
        "w": 512,
        "h": 82
    },
    {
        "id": "7c5e24f13a676fee",
        "type": "group",
        "z": "52b971736c7cc6dd",
        "name": "Zero windows found",
        "style": {
            "label": true
        },
        "nodes": [
            "06279ae22cf7c189",
            "020723ddfabe5de1",
            "c49122f35b225b2a"
        ],
        "x": 734,
        "y": 419,
        "w": 372,
        "h": 162
    },
    {
        "id": "b965a4b4dffcba79",
        "type": "group",
        "z": "52b971736c7cc6dd",
        "name": "Windows found for the process",
        "style": {
            "label": true
        },
        "nodes": [
            "b81fc6a2499fd103"
        ],
        "x": 734,
        "y": 319,
        "w": 200,
        "h": 82
    },
    {
        "id": "bcc5de1d48871a1f",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "Manage configuration",
        "style": {
            "label": true,
            "fill": "#3f93cf"
        },
        "nodes": [
            "f463a891cb7d283b"
        ],
        "x": 724,
        "y": 59,
        "w": 143,
        "h": 82
    },
    {
        "id": "55ac162180440a1e",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "Create delta branch",
        "style": {
            "label": true
        },
        "nodes": [
            "4eca86ceefc5f369"
        ],
        "x": 734,
        "y": 259,
        "w": 232,
        "h": 82
    },
    {
        "id": "cfd3d67ddd269f99",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "Open Sahel project",
        "style": {
            "label": true
        },
        "nodes": [
            "7a31d4e211375c1a"
        ],
        "x": 734,
        "y": 159,
        "w": 128,
        "h": 82
    },
    {
        "id": "03ee6685d83631d4",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "MCQ",
        "style": {
            "label": true
        },
        "nodes": [
            "68817fc2ed3af3d3",
            "fda7dec0a17512c0",
            "ba2219a0539fa257",
            "65e83db1ae5b5c0f",
            "c63727c75b268da5",
            "0953895a2d32c906",
            "f14f2416d77dda69",
            "cd5f948a47cb342e",
            "72e8a076d1035a26",
            "b6a04f43456aec1d",
            "08215e49ccaa3736"
        ],
        "x": 194,
        "y": 199,
        "w": 452,
        "h": 382
    },
    {
        "id": "1eaa23a20347d86b",
        "type": "group",
        "z": "fa34e35f8c929634",
        "name": "MCQ",
        "style": {
            "label": true
        },
        "nodes": [
            "632b6c8bb83cf585",
            "f2eab46dfd126d6f",
            "ea7e60fbe3a21064",
            "37a41907a172ef1b"
        ],
        "x": 354,
        "y": 99,
        "w": 662,
        "h": 162
    },
    {
        "id": "391e500da91adf6a",
        "type": "group",
        "z": "fa34e35f8c929634",
        "name": "Manage app configuration",
        "style": {
            "label": true
        },
        "nodes": [
            "2d391a812b70b516",
            "c07028262ac99971",
            "e8c6fce1d3c3ce4f",
            "1ec44a9fff245c82",
            "6295cef24104685b",
            "68a4efa331111cc5"
        ],
        "x": 394,
        "y": 519,
        "w": 772,
        "h": 202
    },
    {
        "id": "c962766f793f04bc",
        "type": "group",
        "z": "c0be0a5f88260291",
        "name": "Open in Rider",
        "style": {
            "label": true
        },
        "nodes": [
            "18ff581c632cc81f"
        ],
        "x": 914,
        "y": 99,
        "w": 94,
        "h": 82
    },
    {
        "id": "d8eb441a94ee2554",
        "type": "group",
        "z": "c0be0a5f88260291",
        "name": "Open in VSCode",
        "style": {
            "label": true
        },
        "nodes": [
            "4ed55830f384289f"
        ],
        "x": 914,
        "y": 199,
        "w": 113,
        "h": 82
    },
    {
        "id": "115f32569b1d706c",
        "type": "group",
        "z": "25598a4d8875e5af",
        "name": "Build ng image",
        "style": {
            "label": true
        },
        "nodes": [
            "d0aebc0bb3266747"
        ],
        "x": 1194,
        "y": 79,
        "w": 232,
        "h": 82
    },
    {
        "id": "432fd54cc1c0db52",
        "type": "group",
        "z": "25598a4d8875e5af",
        "name": "Build full frontend image",
        "style": {
            "label": true
        },
        "nodes": [
            "c13e9c822b8a30ae"
        ],
        "x": 1194,
        "y": 179,
        "w": 232,
        "h": 82
    },
    {
        "id": "f3590c397e8552c3",
        "type": "group",
        "z": "25598a4d8875e5af",
        "name": "Build backend image",
        "style": {
            "label": true
        },
        "nodes": [
            "bf73e47f13a82591"
        ],
        "x": 1194,
        "y": 279,
        "w": 232,
        "h": 82
    },
    {
        "id": "19633795338299bb",
        "type": "group",
        "z": "25598a4d8875e5af",
        "name": "MCQ",
        "style": {
            "label": true
        },
        "nodes": [
            "fc17503bcf89127f",
            "dc5e2f5eb3b08679",
            "c1da3903197fa0d3",
            "113f0d4c97d13d5a",
            "da0e5e72fb804590",
            "8a242115f97dd6ea"
        ],
        "x": 194,
        "y": 59,
        "w": 462,
        "h": 202
    },
    {
        "id": "f766bb86aa962f43",
        "type": "group",
        "z": "8f747a3fa3549e13",
        "name": "Main directory",
        "style": {
            "label": true
        },
        "nodes": [
            "5eff6c2ef6a1ffa6"
        ],
        "x": 914,
        "y": 59,
        "w": 232,
        "h": 82
    },
    {
        "id": "9cfd6272492e2db7",
        "type": "group",
        "z": "8f747a3fa3549e13",
        "name": "Angular Directory",
        "style": {
            "label": true
        },
        "nodes": [
            "c502c955db41e87a"
        ],
        "x": 914,
        "y": 159,
        "w": 232,
        "h": 82
    },
    {
        "id": "f4f60dc3bf36e265",
        "type": "group",
        "z": "8f747a3fa3549e13",
        "name": "Backend Directory",
        "style": {
            "label": true
        },
        "nodes": [
            "256a070f21cb38fa"
        ],
        "x": 914,
        "y": 259,
        "w": 232,
        "h": 82
    },
    {
        "id": "725abd4fdd084f60",
        "type": "group",
        "z": "8f747a3fa3549e13",
        "name": "MCQ",
        "style": {
            "label": true
        },
        "nodes": [
            "5a251516040a1b33",
            "f7cbc9246a82bfd4",
            "7df1c39a6a1059d2",
            "af1e01c2705ea9eb",
            "dbc761f639a6d029",
            "84c3edd3c6ed13ec"
        ],
        "x": 314,
        "y": 39,
        "w": 392,
        "h": 202
    },
    {
        "id": "4b01a5b50f84332a",
        "type": "group",
        "z": "c0be0a5f88260291",
        "name": "Open in terminal",
        "style": {
            "label": true
        },
        "nodes": [
            "ccd34bf55c4727eb"
        ],
        "x": 914,
        "y": 299,
        "w": 111,
        "h": 82
    },
    {
        "id": "d34ebf705e832f24",
        "type": "group",
        "z": "c0be0a5f88260291",
        "name": "MCQ",
        "style": {
            "label": true
        },
        "nodes": [
            "5ac7e9c1a097599c",
            "3a3be07bc386a7f4",
            "7140c1dc5189f5ee",
            "984128c9dc6d5871",
            "bf0a19b5aa441f08",
            "cc2bf5239ca8c5b4"
        ],
        "x": 214,
        "y": 99,
        "w": 492,
        "h": 202
    },
    {
        "id": "603bf4443a81ff24",
        "type": "group",
        "z": "2176de2541256f66",
        "name": "Open in Rider",
        "style": {
            "label": true
        },
        "nodes": [
            "2fd90f3e7509359d"
        ],
        "x": 944,
        "y": 139,
        "w": 94,
        "h": 82
    },
    {
        "id": "6108603af74c62f3",
        "type": "group",
        "z": "2176de2541256f66",
        "name": "Open in VSCode",
        "style": {
            "label": true
        },
        "nodes": [
            "7eb352d0328b58dd"
        ],
        "x": 944,
        "y": 239,
        "w": 113,
        "h": 82
    },
    {
        "id": "e12351763e7ef371",
        "type": "group",
        "z": "2176de2541256f66",
        "name": "Open in terminal",
        "style": {
            "label": true
        },
        "nodes": [
            "5f948da9f845430d"
        ],
        "x": 944,
        "y": 339,
        "w": 111,
        "h": 82
    },
    {
        "id": "417eda36baaf2ea8",
        "type": "group",
        "z": "2176de2541256f66",
        "name": "MCQ",
        "style": {
            "label": true
        },
        "nodes": [
            "255a6b69cdfc6f09",
            "d4105502d1c313f6",
            "9d831aa4c889ed2f",
            "b9ff21178bead7f4",
            "2a999fd38511b423",
            "b242f5760fb66b36"
        ],
        "x": 244,
        "y": 139,
        "w": 412,
        "h": 202
    },
    {
        "id": "4cc86400caa64356",
        "type": "group",
        "z": "ba73c7efac8344ce",
        "name": "Rider",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#ff3f3f",
            "fill-opacity": "0.13"
        },
        "nodes": [
            "497d0536fe4ef0b4",
            "4a9e4012f31deb57",
            "e15ef9caf043cbae",
            "12b7d975d5ca8909",
            "51ca4deb1c86672b"
        ],
        "x": 384,
        "y": 233,
        "w": 978,
        "h": 334
    },
    {
        "id": "cffc745fde46a892",
        "type": "group",
        "z": "b2b0299ea00c11d9",
        "name": "Open Zimbabw's main folder in VSCode",
        "style": {
            "label": true
        },
        "nodes": [
            "eb786945419f3fc5",
            "6a7166179c3fd103"
        ],
        "x": 754,
        "y": 219,
        "w": 552,
        "h": 82
    },
    {
        "id": "5c2fb6a4b7ca7eed",
        "type": "group",
        "z": "b2b0299ea00c11d9",
        "name": "Open Zimbabw's angular folder in VSCode",
        "style": {
            "label": true
        },
        "nodes": [
            "0b0eac85c17eef18",
            "58d321d33646ed78"
        ],
        "x": 754,
        "y": 339,
        "w": 552,
        "h": 82
    },
    {
        "id": "da756e19fcf5b8fb",
        "type": "group",
        "z": "45e2e642be123d15",
        "name": "MCQ",
        "style": {
            "label": true
        },
        "nodes": [
            "9b5c8bcfe350b0dc",
            "2c524c593ec6bdde",
            "7dc2dce52fd7b98b",
            "466e0eb57f9fd098"
        ],
        "x": 274,
        "y": 199,
        "w": 342,
        "h": 142
    },
    {
        "id": "89e6dca4d98d7877",
        "type": "group",
        "z": "d94f6d4812f18812",
        "name": "Main directory",
        "style": {
            "label": true
        },
        "nodes": [
            "4a3debe380f1b9c2"
        ],
        "x": 964,
        "y": 79,
        "w": 232,
        "h": 82
    },
    {
        "id": "a92061a2b6cff654",
        "type": "group",
        "z": "d94f6d4812f18812",
        "name": "Angular Directory",
        "style": {
            "label": true
        },
        "nodes": [
            "f28bb15fd6b05b39"
        ],
        "x": 964,
        "y": 179,
        "w": 232,
        "h": 82
    },
    {
        "id": "5040635f30357d89",
        "type": "group",
        "z": "d94f6d4812f18812",
        "name": "Backend Directory",
        "style": {
            "label": true
        },
        "nodes": [
            "d60c8c4021488964"
        ],
        "x": 964,
        "y": 279,
        "w": 232,
        "h": 82
    },
    {
        "id": "dabbbe29b1ca362a",
        "type": "group",
        "z": "d94f6d4812f18812",
        "name": "MCQ",
        "style": {
            "label": true
        },
        "nodes": [
            "fc27c7c2093ef823",
            "2e3cf2bb1bf52835",
            "454a090134cebbf3",
            "491b1ee2bb870d48",
            "28e6fc9326385097",
            "7292cd9eae1d3d1b"
        ],
        "x": 364,
        "y": 59,
        "w": 392,
        "h": 202
    },
    {
        "id": "5bbf94b17767ea50",
        "type": "group",
        "z": "f47dd7b3b301c58e",
        "name": "MCQ",
        "style": {
            "label": true
        },
        "nodes": [
            "513917cda321be05",
            "e0f794f3b3838202",
            "fd2be9773716188a",
            "fb8b2bd79c37fb62",
            "a20788868d6171b2",
            "cd72c7feeea29ed8"
        ],
        "x": 574,
        "y": 199,
        "w": 292,
        "h": 202
    },
    {
        "id": "7cc7d74b3edcb61b",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "style": {
            "stroke": "#000000",
            "label": true
        },
        "nodes": [
            "61cecc79ecae9c9c",
            "9ada3be8aad7cf16",
            "7b6831fed3eb3583",
            "a6c47b5321157876",
            "35797c5afd5e7dc8",
            "5ced112bd56e0f89"
        ],
        "x": 548,
        "y": 173,
        "w": 924,
        "h": 694
    },
    {
        "id": "3efbf3847475e6d7",
        "type": "group",
        "z": "f85795edaa2feecd",
        "g": "dafacf647be53d8c",
        "name": "Open Zimbabw.sln in Rider",
        "style": {
            "label": true
        },
        "nodes": [
            "1d3c9b89014b4cc5",
            "e40e1db79e887acd"
        ],
        "x": 914,
        "y": 279,
        "w": 532,
        "h": 82
    },
    {
        "id": "164f9ab7fdebfec4",
        "type": "group",
        "z": "f85795edaa2feecd",
        "g": "dafacf647be53d8c",
        "name": "Open Zimbabw's main folder in Rider",
        "style": {
            "label": true
        },
        "nodes": [
            "4b42af3fdbb4b038",
            "3f810d9409410c1b"
        ],
        "x": 914,
        "y": 379,
        "w": 512,
        "h": 82
    },
    {
        "id": "305780e8616b520c",
        "type": "group",
        "z": "f85795edaa2feecd",
        "g": "dafacf647be53d8c",
        "name": "Open Zimbabw's angular folder in Rider",
        "style": {
            "label": true
        },
        "nodes": [
            "d864b0deb9a00c9e",
            "bf3f612f64750d15"
        ],
        "x": 914,
        "y": 479,
        "w": 512,
        "h": 82
    },
    {
        "id": "f85163b16c01ddee",
        "type": "group",
        "z": "45e2e642be123d15",
        "g": "5bd06472e5acbf9f",
        "name": "Open Zimbabw's main folder in VSCode",
        "style": {
            "label": true
        },
        "nodes": [
            "8e954a1f66e0e9f6",
            "ea66f548537b4ece"
        ],
        "x": 694,
        "y": 199,
        "w": 552,
        "h": 82
    },
    {
        "id": "4b83be363e6063f0",
        "type": "group",
        "z": "45e2e642be123d15",
        "g": "5bd06472e5acbf9f",
        "name": "Open Zimbabw's angular folder in VSCode",
        "style": {
            "label": true
        },
        "nodes": [
            "b80206e0c31cd916",
            "62de61f66b1d9cae"
        ],
        "x": 694,
        "y": 319,
        "w": 552,
        "h": 82
    },
    {
        "id": "5b2390cb4ff4ec6b",
        "type": "group",
        "z": "73f46db8070c553e",
        "g": "4e78c8e730cc5653",
        "name": "http call",
        "style": {
            "label": true
        },
        "nodes": [
            "7837d66e60dc894a",
            "c574e1a087db5046"
        ],
        "x": 634,
        "y": 279,
        "w": 432,
        "h": 82
    },
    {
        "id": "ebb01270777c043c",
        "type": "group",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile Rider windows",
        "style": {
            "label": true
        },
        "nodes": [
            "66b52f9bfeaf4ffd",
            "7fbba5c6bfe54ab2"
        ],
        "x": 1224,
        "y": 599,
        "w": 392,
        "h": 82
    },
    {
        "id": "239decb8d5bb93f7",
        "type": "group",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile VSCode windows",
        "style": {
            "label": true
        },
        "nodes": [
            "437c726c0f2e5332",
            "125c940a3d959f6a"
        ],
        "x": 1224,
        "y": 699,
        "w": 412,
        "h": 82
    },
    {
        "id": "9a16ef80096466d0",
        "type": "group",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile Notepad windows",
        "style": {
            "label": true
        },
        "nodes": [
            "32174b5ede698366",
            "a1666dda7cce920b"
        ],
        "x": 1224,
        "y": 799,
        "w": 412,
        "h": 82
    },
    {
        "id": "1d6ae06380e8d1e6",
        "type": "group",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile Teams' windows",
        "style": {
            "label": true
        },
        "nodes": [
            "1a48908e176139f7",
            "b3e7aa3b5352323f"
        ],
        "x": 1224,
        "y": 499,
        "w": 412,
        "h": 82
    },
    {
        "id": "e15ef9caf043cbae",
        "type": "group",
        "z": "ba73c7efac8344ce",
        "g": "4cc86400caa64356",
        "name": "Open Zimbabw.sln in Rider",
        "style": {
            "label": true
        },
        "nodes": [
            "25d18af308f7e829",
            "8847a716b65054b1"
        ],
        "x": 804,
        "y": 259,
        "w": 532,
        "h": 82
    },
    {
        "id": "12b7d975d5ca8909",
        "type": "group",
        "z": "ba73c7efac8344ce",
        "g": "4cc86400caa64356",
        "name": "Open Zimbabw's main folder in Rider",
        "style": {
            "label": true
        },
        "nodes": [
            "c98f1760263e662b",
            "93cc8876d2eba32b"
        ],
        "x": 804,
        "y": 359,
        "w": 512,
        "h": 82
    },
    {
        "id": "51ca4deb1c86672b",
        "type": "group",
        "z": "ba73c7efac8344ce",
        "g": "4cc86400caa64356",
        "name": "Open Zimbabw's angular folder in Rider",
        "style": {
            "label": true
        },
        "nodes": [
            "f6cb1da28b59c4e5",
            "4a70eb18668a57eb"
        ],
        "x": 804,
        "y": 459,
        "w": 512,
        "h": 82
    },
    {
        "id": "61cecc79ecae9c9c",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open settings.js",
        "style": {
            "label": true
        },
        "nodes": [
            "863baa64dcc322dc",
            "28f8e6808b8b46af",
            "32f901e6698ef452"
        ],
        "x": 574,
        "y": 399,
        "w": 732,
        "h": 82
    },
    {
        "id": "9ada3be8aad7cf16",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Restart Nod-RED",
        "style": {
            "label": true
        },
        "nodes": [
            "48286ea2d25319f7",
            "c43686785b6d461b",
            "1d5fadf241c29d25",
            "703b8531de745d1f",
            "06e880163c677239"
        ],
        "x": 574,
        "y": 499,
        "w": 812,
        "h": 142
    },
    {
        "id": "7b6831fed3eb3583",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "node-RED",
        "style": {
            "label": true
        },
        "nodes": [
            "45336ffdcd3bce3e"
        ],
        "x": 574,
        "y": 199,
        "w": 82,
        "h": 82
    },
    {
        "id": "a6c47b5321157876",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open bin folder #deployment #exe",
        "style": {
            "label": true
        },
        "nodes": [
            "a24cb47ed56cd8bf",
            "cb6a76507fee8038",
            "44326c4edff9acbe"
        ],
        "x": 574,
        "y": 659,
        "w": 752,
        "h": 82
    },
    {
        "id": "35797c5afd5e7dc8",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open bin folder #deployment #exe",
        "style": {
            "label": true
        },
        "nodes": [
            "954191b02b5de6c4",
            "a6fcf7c604a3e702",
            "40a1c6584d222e1e"
        ],
        "x": 574,
        "y": 759,
        "w": 872,
        "h": 82
    },
    {
        "id": "5ced112bd56e0f89",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open Gotcha",
        "style": {
            "label": true
        },
        "nodes": [
            "7f3176b47cbd8524"
        ],
        "x": 574,
        "y": 299,
        "w": 91,
        "h": 82
    },
    {
        "id": "1268fceffd8c3450",
        "type": "group",
        "z": "f47dd7b3b301c58e",
        "name": "Blob Storage",
        "style": {
            "label": true
        },
        "nodes": [
            "937a39e7d79e9b2b",
            "820d6d88af8d4846"
        ],
        "x": 994,
        "y": 299,
        "w": 392,
        "h": 122
    },
    {
        "id": "42ace5a90cc185bf",
        "type": "group",
        "z": "f47dd7b3b301c58e",
        "name": "Insights",
        "style": {
            "label": true
        },
        "nodes": [
            "b5b3d5db0b3d4ad0",
            "622a5005c2958ac2",
            "bfc3b86d03a7de9b",
            "a31715bf23200495",
            "1e5fbd6933c346b4",
            "4c887ea45460a3fa"
        ],
        "x": 994,
        "y": 79,
        "w": 882,
        "h": 182
    },
    {
        "id": "83bd0629823474c5",
        "type": "group",
        "z": "f47dd7b3b301c58e",
        "name": "Auditing in Database",
        "style": {
            "label": true
        },
        "nodes": [
            "ded2b6b949a9d154"
        ],
        "x": 974,
        "y": 539,
        "w": 472,
        "h": 82
    },
    {
        "id": "6735912a12f55886",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "Pull Requests ",
        "style": {
            "label": true
        },
        "nodes": [
            "91082c1033623590",
            "1459b6c7ded0031c",
            "569a68849ae0c11d"
        ],
        "x": 874,
        "y": 519,
        "w": 472,
        "h": 142
    },
    {
        "id": "7cff182178556f7d",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "Task Board",
        "style": {
            "label": true
        },
        "nodes": [
            "193a4d7acbb848db",
            "43135f3cf8ecde82",
            "14d0599e4ab61f28"
        ],
        "x": 814,
        "y": 359,
        "w": 652,
        "h": 142
    },
    {
        "id": "012b4d097ace46ff",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "Logs",
        "style": {
            "label": true
        },
        "nodes": [
            "c5c1c695fb7ef761"
        ],
        "x": 704,
        "y": 559,
        "w": 82,
        "h": 82
    },
    {
        "id": "875d0ab789465b80",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "Deployment",
        "style": {
            "label": true
        },
        "nodes": [
            "31bdad7a4f27d944",
            "bf64d31b09f6864b",
            "c8a7bebc8234909a",
            "be4a8f8d94ff487b",
            "e88b5b622530cf9b",
            "f7cdb8c23ae2dc47"
        ],
        "x": 474,
        "y": 679,
        "w": 852,
        "h": 162
    },
    {
        "id": "8f78465a582321b2",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "Blob Storage",
        "style": {
            "label": true
        },
        "nodes": [
            "6cea5c292c089317",
            "c8d252ca7b491882",
            "3afe7a2be828daf2",
            "1b0fd493fe26e310"
        ],
        "x": 414,
        "y": 879,
        "w": 752,
        "h": 142
    },
    {
        "id": "65d55b910b81a871",
        "type": "junction",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "x": 300,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6fe07fb19f962a8b",
        "type": "junction",
        "z": "d2cbc16db312fbed",
        "x": 540,
        "y": 120,
        "wires": [
            [
                "462f77be0946762f"
            ]
        ]
    },
    {
        "id": "64026deb8fe33cdf",
        "type": "junction",
        "z": "fa34e35f8c929634",
        "g": "69725cd2aafba14c",
        "x": 600,
        "y": 340,
        "wires": [
            [
                "4dd61e82156456f8",
                "5017239a40aa2220"
            ]
        ]
    },
    {
        "id": "68a4efa331111cc5",
        "type": "junction",
        "z": "fa34e35f8c929634",
        "g": "391e500da91adf6a",
        "x": 840,
        "y": 600,
        "wires": [
            [
                "2d391a812b70b516",
                "1ec44a9fff245c82"
            ]
        ]
    },
    {
        "id": "17e00c51a2cdcfce",
        "type": "junction",
        "z": "f905afaf85d72616",
        "x": 800,
        "y": 340,
        "wires": [
            [
                "acfe2361f15424b1"
            ]
        ]
    },
    {
        "id": "816a5c7d9657deaf",
        "type": "junction",
        "z": "f905afaf85d72616",
        "x": 400,
        "y": 160,
        "wires": [
            [
                "de2616f66b074603",
                "12d06e28bc65afaf"
            ]
        ]
    },
    {
        "id": "277eec7a1ed436ba",
        "type": "junction",
        "z": "5cc51beeda65e265",
        "g": "3a32e7f9469c4dde",
        "x": 940,
        "y": 120,
        "wires": [
            [
                "a7f19f37dfd005e0"
            ]
        ]
    },
    {
        "id": "325378e4a47b93c3",
        "type": "junction",
        "z": "b1fd681b1d5672dc",
        "x": 1180,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "47f17cbee36a87af",
        "type": "junction",
        "z": "9f39cede1a22d613",
        "g": "b2d4114c04cb6f09",
        "x": 340,
        "y": 180,
        "wires": [
            [
                "3cda33f00a8b50c1",
                "27b575852ed45707"
            ]
        ]
    },
    {
        "id": "8ebb93b63415539b",
        "type": "junction",
        "z": "e6928b3861ed8f5d",
        "g": "d624c1df12c54d8b",
        "x": 520,
        "y": 220,
        "wires": [
            [
                "fe5568010bcdb6c8",
                "835ae7dc26f640f9"
            ]
        ]
    },
    {
        "id": "cf9fcc9ad77ffa83",
        "type": "junction",
        "z": "9f851333696e4da5",
        "x": 700,
        "y": 140,
        "wires": [
            [
                "3b502478dadaa307"
            ]
        ]
    },
    {
        "id": "410bd0b8f7321fd9",
        "type": "junction",
        "z": "66dc4606b2245ab2",
        "x": 700,
        "y": 700,
        "wires": [
            [
                "76fd9b9553894e0a"
            ]
        ]
    },
    {
        "id": "5580fc2b5cd501db",
        "type": "junction",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "x": 1200,
        "y": 640,
        "wires": [
            [
                "7fbba5c6bfe54ab2"
            ]
        ]
    },
    {
        "id": "add4e3ab06d4c8c0",
        "type": "junction",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "x": 1200,
        "y": 740,
        "wires": [
            [
                "125c940a3d959f6a"
            ]
        ]
    },
    {
        "id": "d51673bfc31c9012",
        "type": "junction",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "x": 1200,
        "y": 840,
        "wires": [
            [
                "a1666dda7cce920b"
            ]
        ]
    },
    {
        "id": "9ba63ce2df296f64",
        "type": "junction",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "x": 1200,
        "y": 540,
        "wires": [
            [
                "b3e7aa3b5352323f"
            ]
        ]
    },
    {
        "id": "4c887ea45460a3fa",
        "type": "junction",
        "z": "f47dd7b3b301c58e",
        "g": "42ace5a90cc185bf",
        "x": 1140,
        "y": 180,
        "wires": [
            [
                "bfc3b86d03a7de9b",
                "622a5005c2958ac2",
                "b5b3d5db0b3d4ad0"
            ]
        ]
    },
    {
        "id": "ccc07f140935b625",
        "type": "http request",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/mcq",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 100,
        "wires": [
            [
                "ebd18d02fd177378"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "af01eaae99bdbdde",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.warn(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\");\nnode.warn(msg.payload);\nconst strAnswer = msg.payload.answer + \": \" + msg.payload.options[msg.payload.answer];\nnode.status({ fill: \"green\", shape: \"ring\", text: strAnswer});\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "61db02665363232f",
        "type": "status",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "scope": [
            "af01eaae99bdbdde",
            "b63a4243c7b24f67",
            "0f395ccfbe66a499",
            "174468b69c4a6a85",
            "a89795192f231183"
        ],
        "x": 100,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ebd18d02fd177378",
        "type": "switch",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "-2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 770,
        "y": 100,
        "wires": [
            [
                "174468b69c4a6a85"
            ],
            [
                "b63a4243c7b24f67"
            ],
            [
                "7c3f059babc9fca1"
            ]
        ]
    },
    {
        "id": "20a7673afc6ed2fd",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3f411aa3ba670cb2",
        "name": "Declined",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 1100,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b63a4243c7b24f67",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"gray\", shape: \"ring\", text: \"declined\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 100,
        "wires": [
            [
                "20a7673afc6ed2fd"
            ]
        ]
    },
    {
        "id": "f3c8be8f663abd91",
        "type": "catch",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 380,
        "y": 40,
        "wires": [
            [
                "a89795192f231183"
            ]
        ]
    },
    {
        "id": "be7c7c04d2da7d2a",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "resolve input",
        "func": "// if(!msg.payload) msg.payload = {}\n\nmsg.payload = {\n    options : msg.state.options, // eval(env.get('options')),\n    question: eval(env.get('question'))\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 100,
        "wires": [
            [
                "ccc07f140935b625"
            ]
        ]
    },
    {
        "id": "0f395ccfbe66a499",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"blue\", shape: \"dot\", text: \"active\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 100,
        "wires": [
            [
                "be7c7c04d2da7d2a"
            ]
        ]
    },
    {
        "id": "7c3f059babc9fca1",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "update state",
        "func": "\nmsg.state = {\n    ... msg.state,\n    answer: msg.payload.answer\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 260,
        "wires": [
            [
                "af01eaae99bdbdde"
            ]
        ]
    },
    {
        "id": "a89795192f231183",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"red\", shape: \"dot\", text: \"Error\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "174468b69c4a6a85",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"gray\", shape: \"ring\", text: \"Inapplicable\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 40,
        "wires": [
            [
                "d541aa36901894f7"
            ]
        ]
    },
    {
        "id": "d541aa36901894f7",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3f411aa3ba670cb2",
        "d": true,
        "name": "Inapplicable",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Inapplicable\"",
                "type": "str"
            }
        ],
        "x": 1110,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "07ca76319910aea3",
        "type": "subflow:630454ba203bdeb2",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "0f395ccfbe66a499"
            ]
        ]
    },
    {
        "id": "bf8b03d7e2a96eea",
        "type": "http request",
        "z": "4178eda1bbbd7002",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/execBase64",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 260,
        "wires": [
            [
                "40dcda0be3cc1abd"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "a7ecc12d750180de",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set payload",
        "func": "const plainCommand = eval(env.get(\"command\"));\nconst base64Command = Buffer.from(plainCommand, 'utf16le').toString('base64');\n\nnode.warn(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\nnode.warn(base64Command);\n\n\nmsg.payload = {\n    command: base64Command,\n    workingDirectory: eval(env.get(\"workingDir\")),\n    detachSpawnedProcess: eval(env.get('detachSpawnedProcess'))\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 260,
        "wires": [
            [
                "bf8b03d7e2a96eea"
            ]
        ]
    },
    {
        "id": "5bcf68ca5b6d18ea",
        "type": "status",
        "z": "4178eda1bbbd7002",
        "name": "",
        "scope": null,
        "x": 390,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5ff56cb70dcde71d",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set status",
        "func": "node.status({fill:\"blue\",shape:\"dot\",text:\"Executing\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "a7ecc12d750180de"
            ]
        ]
    },
    {
        "id": "40dcda0be3cc1abd",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"Done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "108dd5729302b6a2",
        "type": "catch",
        "z": "4178eda1bbbd7002",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 380,
        "y": 140,
        "wires": [
            [
                "25bfdc21b1a3e63f"
            ]
        ]
    },
    {
        "id": "25bfdc21b1a3e63f",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set status",
        "func": "node.status({fill:\"red\",shape:\"dot\",text:\"Error\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a80540014bb4644d",
        "type": "http request",
        "z": "552764fe6e0b1a84",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/speak",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 180,
        "wires": [
            [
                "b105d9e752acd7bc"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "05313ae618fa54ce",
        "type": "status",
        "z": "552764fe6e0b1a84",
        "name": "",
        "scope": null,
        "x": 320,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3cdf863547072457",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "resolve input",
        "func": "const nodeName = msg.state?.containerNode?.name;\nif (!nodeName) {\n    const error = \"You must have a Spy node in earlier position in the flow/sub-flow, in order to be able to use node's name\";\n    node.status({ fill: \"red\", shape: \"dot\", text: error });\n    node.error(error, msg);\n    //return null;\n}\n\nlet toSpeak;\ntry\n{\n    toSpeak = eval(nodeName);\n}\ncatch\n{\n    const error = `Couldn't evaluate expression ${nodeName} in Speak node`;\n    node.error(error, msg);\n    node.status({fill:\"red\",shape:\"dot\",text: error});\n    return msg; // no need to interrupt the flow because of speaking\n}\n\nmsg.originalPayload = msg.payload;\n\n\nmsg.payload = {\n    toSpeak: toSpeak ?? eval(env.get('toSpeak'))\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 180,
        "wires": [
            [
                "a80540014bb4644d"
            ]
        ]
    },
    {
        "id": "d6146d6c9211a484",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "set status",
        "func": "const nodeName = msg.state?.containerNode?.name;\nif (!nodeName) {\n    const error = \"You must have a Spy node in earlier position in the flow/sub-flow, in order to be able to use node's name\";\n    node.status({ fill: \"red\", shape: \"dot\", text: error });\n    node.error(error, msg);\n    return msg;\n}\n\nnode.status({ fill: \"green\", shape: \"ring\", text: \"Spoken\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8f02016211bd7db1",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "set status",
        "func": "node.status({ fill: \"yellow\", shape: \"ring\", text: \"Speaking\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "3cdf863547072457"
            ]
        ]
    },
    {
        "id": "b105d9e752acd7bc",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "restore original payload",
        "func": "msg.payload = msg.originalPayload;\nmsg.originalPayload = undefined;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 180,
        "wires": [
            [
                "d6146d6c9211a484"
            ]
        ]
    },
    {
        "id": "3e67155e11a44ed2",
        "type": "subflow:630454ba203bdeb2",
        "z": "552764fe6e0b1a84",
        "name": "",
        "x": 230,
        "y": 180,
        "wires": [
            [
                "8f02016211bd7db1"
            ]
        ]
    },
    {
        "id": "fa81138c3d4a4454",
        "type": "http request",
        "z": "7725d64c5713a5a0",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/exec",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 440,
        "wires": [
            [
                "305cc53362b4c3be"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "7691eb48d8550e58",
        "type": "function",
        "z": "7725d64c5713a5a0",
        "name": "set payload",
        "func": "const expCommand = env.get('command');\nconst expWorkingDirectory = env.get('workingDirectory');\nconst detachSpawnedProcess = env.get('detachSpawnedProcess')\n\nmsg.payload = {\n    command: eval(expCommand),\n    workingDirectory: eval(expWorkingDirectory),\n    detachSpawnedProcess: eval(detachSpawnedProcess)\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 220,
        "wires": [
            [
                "fa81138c3d4a4454"
            ]
        ]
    },
    {
        "id": "14288d44e4764134",
        "type": "function",
        "z": "7725d64c5713a5a0",
        "name": "set status",
        "func": "node.status({fill: \"blue\", shape: \"dot\", text:\"running\"})\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 220,
        "wires": [
            [
                "7691eb48d8550e58"
            ]
        ]
    },
    {
        "id": "305cc53362b4c3be",
        "type": "function",
        "z": "7725d64c5713a5a0",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"Done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d4af49bf82b54730",
        "type": "status",
        "z": "7725d64c5713a5a0",
        "name": "",
        "scope": null,
        "x": 310,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "eadac2317ec8988a",
        "type": "function",
        "z": "67d0907b3004484d",
        "name": "set status \"logging\"",
        "func": "node.status({fill:\"yellow\",shape:\"dot\",text:\"logging\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 260,
        "wires": [
            [
                "fa0f59c319d74ca7"
            ]
        ]
    },
    {
        "id": "fa0f59c319d74ca7",
        "type": "http request",
        "z": "67d0907b3004484d",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/log",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 260,
        "wires": [
            [
                "a37a3ae3665df4f0"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "690b50199733f70c",
        "type": "status",
        "z": "67d0907b3004484d",
        "name": "",
        "scope": null,
        "x": 260,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a37a3ae3665df4f0",
        "type": "function",
        "z": "67d0907b3004484d",
        "name": "set status \"logged\"",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"logged\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "42b883da9df0572f",
        "type": "http request",
        "z": "0fc4eeeb2f2b1fb9",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/playClick",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 300,
        "wires": [
            []
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "0492d8c92761fae3",
        "type": "http in",
        "z": "0fc4eeeb2f2b1fb9",
        "name": "",
        "url": "/playClick",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 440,
        "wires": [
            [
                "42b883da9df0572f"
            ]
        ]
    },
    {
        "id": "f20fefea06b1e5a1",
        "type": "function",
        "z": "c4112ffe1214c7db",
        "name": "resolve input",
        "func": "node.status({ fill: \"yellow\", shape: \"dot\", text: \"running ...\" });\n\nmsg.payload.command = eval(env.get('command'));\nmsg.payload.workingDirectory = eval(env.get('workingDirectory'));\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "65159ca6a253de16"
            ]
        ]
    },
    {
        "id": "65159ca6a253de16",
        "type": "http request",
        "z": "c4112ffe1214c7db",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/stdout",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 220,
        "wires": [
            [
                "8ca44f6712ee9d41"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "5d644f19a30478c3",
        "type": "status",
        "z": "c4112ffe1214c7db",
        "name": "",
        "scope": null,
        "x": 510,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8ca44f6712ee9d41",
        "type": "switch",
        "z": "c4112ffe1214c7db",
        "name": "",
        "property": "payload.exitCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6b48a278f99eb602",
        "type": "function",
        "z": "630454ba203bdeb2",
        "g": "f0e020097c0796ed",
        "name": "set payload",
        "func": "msg.payload = {\n    ... msg.payload,\n    spyNodeId: node.id,\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 220,
        "wires": [
            [
                "69f791a222ca020e"
            ]
        ]
    },
    {
        "id": "69f791a222ca020e",
        "type": "http request",
        "z": "630454ba203bdeb2",
        "g": "f0e020097c0796ed",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:5101/onSpyNode",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 220,
        "wires": [
            [
                "1ec26f3f48720039"
            ]
        ]
    },
    {
        "id": "900b20562dc99868",
        "type": "function",
        "z": "630454ba203bdeb2",
        "name": "Set status",
        "func": "node.status({ fill: \"green\", shape: \"ring\", text: \"\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3421b92837959e7f",
        "type": "function",
        "z": "630454ba203bdeb2",
        "name": "Set status",
        "func": "\nnode.status({ fill: \"blue\", shape: \"dot\", text: \"reporting\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 220,
        "wires": [
            [
                "6b48a278f99eb602"
            ]
        ]
    },
    {
        "id": "f755870245443155",
        "type": "status",
        "z": "630454ba203bdeb2",
        "name": "",
        "scope": null,
        "x": 200,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1ec26f3f48720039",
        "type": "function",
        "z": "630454ba203bdeb2",
        "name": "read results",
        "func": "var envVars = msg.payload.env;\nmsg.state = { ...msg.state, containerNode: msg.payload.containerNode };\n\ntry\n{\n    if (envVars) {\n        for (let v of envVars) {\n            try {\n                msg.state[v.name] = eval(v.value);\n            }\n            catch (ex) {\n                const error = `Couldn't evaluate env var expression:\\n   ${v.value}   to hyderate ${v.name}`;\n                fetch('http://127.0.0.1:5101/speak', {\n                    method: 'POST',\n                    body: JSON.stringify({ toSpeak: error }),\n                    headers: { 'Content-Type': 'application/json' }\n                });\n                fetch('http://127.0.0.1:5101/error', {\n                    method: 'POST',\n                    body: JSON.stringify({ error: error }),\n                    headers: { 'Content-Type': 'application/json' }\n                });\n                node.error(error, msg);\n                node.status({ fill: \"red\", shape: \"ring\", text: error });\n            }\n        }\n    }\n    return msg;\n}\ncatch(ex)\n{\n    node.error(ex, msg);\n    return null;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 470,
        "y": 360,
        "wires": [
            [
                "900b20562dc99868"
            ]
        ]
    },
    {
        "id": "5290e90df06ee51e",
        "type": "function",
        "z": "630454ba203bdeb2",
        "name": "ensure state object",
        "func": "msg.state = {\n    ...msg.state\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 220,
        "wires": [
            [
                "3421b92837959e7f"
            ]
        ]
    },
    {
        "id": "41aeb3d70d9e1cda",
        "type": "function",
        "z": "c96d6610ba199ebc",
        "name": "populate",
        "func": "const keysStr = env.get('argNames');\nconst keys = keysStr.split(',');\n\n\nfor(let key of keys)\n{\n    key = key.trim();\n    const valueExpr = env.get(key)\n    if(!valueExpr) continue;\n\n\n    const value = eval(valueExpr);\n    msg.payload[key] = value;\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 240,
        "wires": [
            [
                "829fb4a743420640"
            ]
        ]
    },
    {
        "id": "3774797650d0b37b",
        "type": "status",
        "z": "c96d6610ba199ebc",
        "name": "",
        "scope": null,
        "x": 260,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "829fb4a743420640",
        "type": "switch",
        "z": "c96d6610ba199ebc",
        "name": "",
        "property": "exit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "6dbcaee77b64b5ac"
            ],
            []
        ]
    },
    {
        "id": "01acfafb58984259",
        "type": "subflow:552764fe6e0b1a84",
        "z": "c96d6610ba199ebc",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"arg names were not provided to eval env to message var\"",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6dbcaee77b64b5ac",
        "type": "function",
        "z": "c96d6610ba199ebc",
        "name": "set error status",
        "func": "node.status({fill:\"red\",shape:\"dot\",text:\"No envVars provided\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 160,
        "wires": [
            [
                "01acfafb58984259"
            ]
        ]
    },
    {
        "id": "1dcc747d25575675",
        "type": "function",
        "z": "bbea173bec06991e",
        "name": "function 12",
        "func": "throw \"fake exception\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d6dd512304b44495",
        "type": "catch",
        "z": "bbea173bec06991e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d666b9177808847a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "bbea173bec06991e",
        "name": "\"Caught\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Caught\"",
                "type": "str"
            }
        ],
        "x": 690,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9d6ea776ae79ed65",
        "type": "subflow:630454ba203bdeb2",
        "z": "79b3adc8f3ea8d41",
        "name": "",
        "x": 230,
        "y": 140,
        "wires": [
            [
                "97f715f89de139d1",
                "ab3a931f7de7ab85"
            ]
        ]
    },
    {
        "id": "97f715f89de139d1",
        "type": "subflow:552764fe6e0b1a84",
        "z": "79b3adc8f3ea8d41",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Tile \" + eval(env.get('processName')) + \"windows\"",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b4ae9ccd13c72f01",
        "type": "function",
        "z": "79b3adc8f3ea8d41",
        "name": "consume response",
        "func": "msg.state = {\n    ...msg.state,\n    windowCount: msg.payload.windowCount\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 140,
        "wires": [
            [
                "1a1ebb320546ce90"
            ]
        ]
    },
    {
        "id": "1a1ebb320546ce90",
        "type": "switch",
        "z": "79b3adc8f3ea8d41",
        "name": "",
        "property": "state.windowCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "8b91f279c8b553a0"
            ],
            [
                "525abef6f57285fb",
                "e38213dd3fcdbe54"
            ]
        ]
    },
    {
        "id": "8b91f279c8b553a0",
        "type": "subflow:09818a42b905f599",
        "z": "79b3adc8f3ea8d41",
        "g": "c7fd783a0f9d3116",
        "name": "",
        "x": 710,
        "y": 300,
        "wires": [
            [
                "7722a8762723e51d"
            ]
        ]
    },
    {
        "id": "6bee7bbab24ed39a",
        "type": "status",
        "z": "79b3adc8f3ea8d41",
        "name": "",
        "scope": [
            "3910bb538d7bf580",
            "b4ae9ccd13c72f01",
            "8ebf4bac4a7a17d9",
            "7722a8762723e51d"
        ],
        "x": 300,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "525abef6f57285fb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "79b3adc8f3ea8d41",
        "g": "513e9c1f10775474",
        "name": "\"Launching new instance\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Launching new instance\"",
                "type": "str"
            }
        ],
        "x": 770,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "8ebf4bac4a7a17d9",
        "type": "function",
        "z": "79b3adc8f3ea8d41",
        "g": "513e9c1f10775474",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"New instance launched\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "7722a8762723e51d",
        "type": "function",
        "z": "79b3adc8f3ea8d41",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"Existing window activated!\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "e38213dd3fcdbe54",
        "type": "subflow:d147f856086021e2",
        "z": "79b3adc8f3ea8d41",
        "g": "513e9c1f10775474",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "msg.state.processName",
                "type": "str"
            }
        ],
        "x": 740,
        "y": 400,
        "wires": [
            [],
            [
                "8ebf4bac4a7a17d9"
            ]
        ]
    },
    {
        "id": "ab3a931f7de7ab85",
        "type": "subflow:dca4607fc44f76d8",
        "z": "79b3adc8f3ea8d41",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "msg.state.processName",
                "type": "str"
            }
        ],
        "x": 630,
        "y": 140,
        "wires": [
            [],
            [
                "b4ae9ccd13c72f01"
            ]
        ],
        "icon": "font-awesome/fa-compress"
    },
    {
        "id": "d1c840caf363daf3",
        "type": "http request",
        "z": "b23fac97ba53404f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:5101/openInDefaultBrowser",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 160,
        "wires": [
            [
                "51e4df9d73f8b93f"
            ]
        ]
    },
    {
        "id": "e1b695d731502be4",
        "type": "function",
        "z": "b23fac97ba53404f",
        "name": "set payload",
        "func": "msg.payload = {\n    url: msg.state.url\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 160,
        "wires": [
            [
                "e8e287cecc8b72fe"
            ]
        ]
    },
    {
        "id": "195aab9f448032cc",
        "type": "status",
        "z": "b23fac97ba53404f",
        "name": "",
        "scope": null,
        "x": 390,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e8e287cecc8b72fe",
        "type": "function",
        "z": "b23fac97ba53404f",
        "name": "set status",
        "func": "node.status({fill:\"blue\",shape:\"dot\",text:\"Requesting\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 160,
        "wires": [
            [
                "d1c840caf363daf3"
            ]
        ]
    },
    {
        "id": "51e4df9d73f8b93f",
        "type": "function",
        "z": "b23fac97ba53404f",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "70f9550e23a37e06",
        "type": "subflow:630454ba203bdeb2",
        "z": "b23fac97ba53404f",
        "name": "",
        "x": 240,
        "y": 160,
        "wires": [
            [
                "e1b695d731502be4"
            ]
        ]
    },
    {
        "id": "310b65c2c8ae522c",
        "type": "http request",
        "z": "09818a42b905f599",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5101/ReportFlowCompleted",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 180,
        "wires": [
            [
                "ec9db054a0f3aa2c"
            ]
        ]
    },
    {
        "id": "4e6b35b461181319",
        "type": "function",
        "z": "09818a42b905f599",
        "name": "update state",
        "func": "msg.payload = {\n    flowId: msg.flowId\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 180,
        "wires": [
            [
                "0bec1f011933a7b4",
                "310b65c2c8ae522c"
            ]
        ]
    },
    {
        "id": "8e9fb74fcaa51afa",
        "type": "function",
        "z": "09818a42b905f599",
        "name": "set status",
        "func": "node.status({fill: \"blue\", shape: \"dot\", text:\"executing\"})\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 180,
        "wires": [
            [
                "4e6b35b461181319"
            ]
        ]
    },
    {
        "id": "ec9db054a0f3aa2c",
        "type": "function",
        "z": "09818a42b905f599",
        "name": "set status",
        "func": "node.status({fill: \"green\", shape: \"ring\", text:\"done\"})\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "0bec1f011933a7b4",
        "type": "subflow:552764fe6e0b1a84",
        "z": "09818a42b905f599",
        "d": true,
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Done\"",
                "type": "str"
            }
        ],
        "x": 830,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1bee0246217f59ee",
        "type": "status",
        "z": "09818a42b905f599",
        "name": "",
        "scope": null,
        "x": 430,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "9e9940688950c916",
        "type": "function",
        "z": "f6ca9e8aca47dc3c",
        "name": "update state",
        "func": "msg.state = {\n    ...msg.state,\n    processName: eval(env.get('processName'))\n}\n\nmsg.payload = msg.state;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 120,
        "wires": [
            [
                "746a894c01b57997",
                "92d0ac6eff83fe27"
            ]
        ]
    },
    {
        "id": "746a894c01b57997",
        "type": "debug",
        "z": "f6ca9e8aca47dc3c",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 60,
        "wires": []
    },
    {
        "id": "92d0ac6eff83fe27",
        "type": "subflow:d147f856086021e2",
        "z": "f6ca9e8aca47dc3c",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"lens\"",
                "type": "str"
            }
        ],
        "x": 540,
        "y": 120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "58fbf8fee0543ceb",
        "type": "http request",
        "z": "b182be5bcebc47cd",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://127.0.0.1:5101/OpenUrlInSideWebView",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 160,
        "wires": [
            [
                "e16ff65c5117ae03",
                "7697421c94d8de51"
            ]
        ]
    },
    {
        "id": "65decd69c83b667a",
        "type": "function",
        "z": "b182be5bcebc47cd",
        "name": "set payload",
        "func": "msg.payload = {\n    url: eval(env.get(\"url\"))\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 160,
        "wires": [
            [
                "58fbf8fee0543ceb"
            ]
        ]
    },
    {
        "id": "e16ff65c5117ae03",
        "type": "http response",
        "z": "b182be5bcebc47cd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 160,
        "wires": []
    },
    {
        "id": "c4ef703851f8813c",
        "type": "status",
        "z": "b182be5bcebc47cd",
        "name": "",
        "scope": null,
        "x": 380,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7697421c94d8de51",
        "type": "subflow:884f94515d431dae",
        "z": "b182be5bcebc47cd",
        "name": "",
        "env": [
            {
                "name": "fill",
                "value": "\"green\"",
                "type": "str"
            },
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\" \"",
                "type": "str"
            }
        ],
        "x": 680,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e19fdbfd47b75592",
        "type": "function",
        "z": "d147f856086021e2",
        "name": "set payload",
        "func": "msg.payload = {\n    processName: eval(env.get('processName')),\n    args: eval(env.get('args')), //\"D:/ignore.txt\",\n    workingDirectory: eval(env.get('workingDirectory')), //\"D:/\",\n    waitForExit: eval(env.get('waitForExit')), //false\n}  \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 160,
        "wires": [
            [
                "9a905754c2c49869",
                "d4afbe5a46fd205b"
            ]
        ]
    },
    {
        "id": "9a905754c2c49869",
        "type": "http request",
        "z": "d147f856086021e2",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5101/RunAppDirectly",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "baf36a7988ca0de8"
            ]
        ]
    },
    {
        "id": "99087cbc9c790961",
        "type": "function",
        "z": "d147f856086021e2",
        "name": "set status",
        "func": "node.status({fill:\"blue\",shape:\"dot\",text:\"Running\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 160,
        "wires": [
            [
                "e19fdbfd47b75592"
            ]
        ]
    },
    {
        "id": "fab771318a09f492",
        "type": "function",
        "z": "d147f856086021e2",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"Done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d4afbe5a46fd205b",
        "type": "debug",
        "z": "d147f856086021e2",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 80,
        "wires": []
    },
    {
        "id": "baf36a7988ca0de8",
        "type": "switch",
        "z": "d147f856086021e2",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1180,
        "y": 260,
        "wires": [
            [
                "3a921c898467861f"
            ],
            [
                "fab771318a09f492"
            ]
        ]
    },
    {
        "id": "3a921c898467861f",
        "type": "function",
        "z": "d147f856086021e2",
        "name": "set status",
        "func": "node.status({fill:\"red\",shape:\"ring\",text:\"Error\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ad186781129baba9",
        "type": "subflow:b1fd681b1d5672dc",
        "z": "d147f856086021e2",
        "name": "",
        "x": 460,
        "y": 160,
        "wires": [
            [
                "99087cbc9c790961"
            ]
        ]
    },
    {
        "id": "505922b532e00229",
        "type": "subflow:884f94515d431dae",
        "z": "d147f856086021e2",
        "name": "",
        "env": [
            {
                "name": "fill",
                "value": "\"yellow\"",
                "type": "str"
            },
            {
                "name": "shape",
                "value": "\"dot\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"Breakpoint\"",
                "type": "str"
            }
        ],
        "x": 520,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "57d05a808c372882",
        "type": "status",
        "z": "d147f856086021e2",
        "name": "",
        "scope": [
            "ad186781129baba9",
            "3a921c898467861f",
            "fab771318a09f492",
            "99087cbc9c790961",
            "505922b532e00229"
        ],
        "x": 410,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "521a107e922bf7da",
        "type": "http request",
        "z": "9b174c4cdae724a4",
        "g": "26cb2d175144d1a9",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/mcq",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 770,
        "y": 240,
        "wires": [
            [
                "336eab5837c54f51"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "a6754e4001f442e5",
        "type": "status",
        "z": "9b174c4cdae724a4",
        "name": "",
        "scope": [
            "e64cd15346823c7a",
            "c556e7768bcf9406",
            "521a107e922bf7da"
        ],
        "x": 320,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "336eab5837c54f51",
        "type": "switch",
        "z": "9b174c4cdae724a4",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "-2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "5b5d26b5fd99802f"
            ],
            [
                "e64cd15346823c7a"
            ],
            [
                "c556e7768bcf9406"
            ]
        ]
    },
    {
        "id": "3a80cf2be714752e",
        "type": "subflow:552764fe6e0b1a84",
        "z": "9b174c4cdae724a4",
        "name": "Declined",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 1000,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "55efbf4f22a2788f",
        "type": "function",
        "z": "9b174c4cdae724a4",
        "name": "set output payload",
        "func": "const selectedIndex = msg.payload.answer;\nconst selectedItem = msg.state.options[selectedIndex];\nconst selectedKey = selectedItem.split('---')[0];\n\nmsg.payload = selectedKey;\nmsg.state.answer = msg.state.options[selectedIndex];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f4ceeb164e98270c",
        "type": "subflow:552764fe6e0b1a84",
        "z": "9b174c4cdae724a4",
        "d": true,
        "name": "Inapplicable",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Inapplicable\"",
                "type": "str"
            }
        ],
        "x": 1010,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "7e15824573c1252a",
        "type": "function",
        "z": "9b174c4cdae724a4",
        "g": "26cb2d175144d1a9",
        "name": "set http payload",
        "func": "\nconst uiOptions = msg.state.options.map(o => o.split(\"---\")[1]);\nconst question = msg.state.question;\n\nmsg.payload = {\n    options: uiOptions,\n    question: question,\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 240,
        "wires": [
            [
                "521a107e922bf7da"
            ]
        ]
    },
    {
        "id": "01bac4be1298d36e",
        "type": "subflow:e43525bcfe7306a2",
        "z": "9b174c4cdae724a4",
        "name": "",
        "x": 360,
        "y": 240,
        "wires": [
            [],
            [
                "7e15824573c1252a"
            ]
        ]
    },
    {
        "id": "f1e9fa952d8508eb",
        "type": "subflow:630454ba203bdeb2",
        "z": "9b174c4cdae724a4",
        "name": "",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "01bac4be1298d36e"
            ]
        ]
    },
    {
        "id": "c556e7768bcf9406",
        "type": "subflow:884f94515d431dae",
        "z": "9b174c4cdae724a4",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "msg.state.options[msg.payload.answer]",
                "type": "str"
            }
        ],
        "x": 800,
        "y": 480,
        "wires": [
            [
                "55efbf4f22a2788f"
            ]
        ]
    },
    {
        "id": "e64cd15346823c7a",
        "type": "subflow:884f94515d431dae",
        "z": "9b174c4cdae724a4",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 800,
        "y": 420,
        "wires": [
            [
                "3a80cf2be714752e"
            ]
        ]
    },
    {
        "id": "5b5d26b5fd99802f",
        "type": "subflow:884f94515d431dae",
        "z": "9b174c4cdae724a4",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"Inapplicable\"",
                "type": "str"
            }
        ],
        "x": 800,
        "y": 360,
        "wires": [
            [
                "f4ceeb164e98270c"
            ]
        ]
    },
    {
        "id": "8d8911818f4e1a30",
        "type": "switch",
        "z": "e43525bcfe7306a2",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 200,
        "wires": [
            [
                "e3d812bd1ae892a3"
            ],
            []
        ]
    },
    {
        "id": "e3d812bd1ae892a3",
        "type": "function",
        "z": "e43525bcfe7306a2",
        "name": "invoke http://127.0.0.1:5101/error if any",
        "func": "if(msg.error)\n{\n    fetch('http://127.0.0.1:5101/error', {\n        method: 'POST',\n        body: JSON.stringify({ error: msg.error }),\n        headers: { 'Content-Type': 'application/json' }\n    });\n    node.error(msg.error, msg);\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 500,
        "y": 180,
        "wires": [
            [
                "16bba6bbeb941c7b"
            ]
        ]
    },
    {
        "id": "16bba6bbeb941c7b",
        "type": "function",
        "z": "e43525bcfe7306a2",
        "name": "function 6",
        "func": "node.status({fill:\"red\",shape:\"ring\",text:msg.error});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1438115fd3d12226",
        "type": "status",
        "z": "e43525bcfe7306a2",
        "name": "",
        "scope": null,
        "x": 160,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "37665ccbbcc18109",
        "type": "subflow:630454ba203bdeb2",
        "z": "093e123fa639c9e7",
        "name": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "6c1607c4944e0cda"
            ]
        ]
    },
    {
        "id": "6c1607c4944e0cda",
        "type": "subflow:552764fe6e0b1a84",
        "z": "093e123fa639c9e7",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "msg.a.myEnv2",
                "type": "str"
            }
        ],
        "x": 370,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "80d9edbf88d4518b",
        "type": "subflow:630454ba203bdeb2",
        "z": "fd9310e15831f976",
        "name": "",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "664a0297c42a3b07"
            ]
        ]
    },
    {
        "id": "664a0297c42a3b07",
        "type": "subflow:884f94515d431dae",
        "z": "fd9310e15831f976",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"dot\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"test status\"",
                "type": "str"
            }
        ],
        "x": 540,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6cb85e83a1387e42",
        "type": "status",
        "z": "fd9310e15831f976",
        "name": "",
        "scope": null,
        "x": 430,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c92d07862ad62fea",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fd9310e15831f976",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "`my var = ${msg.a.myEnvVar}`",
                "type": "str"
            }
        ],
        "x": 270,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "114724c173b580ba",
        "type": "http request",
        "z": "dca4607fc44f76d8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/arrangeWindowsOfProcess",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 80,
        "wires": [
            [
                "eab6c44bcf7ec403",
                "2300a0e6c786a93e"
            ]
        ]
    },
    {
        "id": "aeabe43d56f5e140",
        "type": "function",
        "z": "dca4607fc44f76d8",
        "name": "set payload",
        "func": "msg.payload = {\n    processName: msg.state.processName\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 80,
        "wires": [
            [
                "114724c173b580ba"
            ]
        ]
    },
    {
        "id": "6a3d9b2d7b49d384",
        "type": "subflow:630454ba203bdeb2",
        "z": "dca4607fc44f76d8",
        "name": "",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "aeabe43d56f5e140"
            ]
        ]
    },
    {
        "id": "eab6c44bcf7ec403",
        "type": "http response",
        "z": "dca4607fc44f76d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "2300a0e6c786a93e",
        "type": "switch",
        "z": "dca4607fc44f76d8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 200,
        "wires": [
            [
                "174e7c19a34de3d1"
            ],
            []
        ]
    },
    {
        "id": "174e7c19a34de3d1",
        "type": "function",
        "z": "dca4607fc44f76d8",
        "name": "set error",
        "func": "msg.error = msg.payload.error\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 180,
        "wires": [
            [
                "5694bbbee2036eec"
            ]
        ]
    },
    {
        "id": "5694bbbee2036eec",
        "type": "subflow:e43525bcfe7306a2",
        "z": "dca4607fc44f76d8",
        "name": "",
        "x": 1020,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "972a10135ae7a6cb",
        "type": "status",
        "z": "884f94515d431dae",
        "name": "",
        "scope": [
            "9e9e679fa9b13c03"
        ],
        "x": 400,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "51e171a6039e7df5",
        "type": "subflow:630454ba203bdeb2",
        "z": "884f94515d431dae",
        "name": "",
        "x": 340,
        "y": 120,
        "wires": [
            [
                "9e9e679fa9b13c03"
            ]
        ]
    },
    {
        "id": "9e9e679fa9b13c03",
        "type": "function",
        "z": "884f94515d431dae",
        "name": "set status ",
        "func": "msg.state = {\n    ...msg.state,\n    status: {\n        ... (msg.state.status ?? {fill: 'none-real-value', shape: 'ring', text: 'no-explicit-status-set'})\n    }\n};\n\nnode.warn(`8888888888888888888888888 ${JSON.stringify(msg.state.status)}`);\n\nfunction evalEnv(envName)\n{\n    let value;\n    const expr = env.get(envName);\n    if(!expr) return undefined;\n\n    try\n    {\n        value = eval(expr);\n        return value;\n\n    }\n    catch(ex)\n    {\n        const error = `Couldn't evaluate expression ${expr}`;\n        msg.state.error = error;\n        node.status({fill:\"red\",shape:\"dot\",text:error});\n    }\n}\n\n\n\nconst envStatusFill = evalEnv('fill');\nif(envStatusFill && ['red', 'blue', 'yellow', 'green', 'gray'].indexOf(envStatusFill) < 0)\n{\n    const error = `Available fill color for Status node are ['red', 'blue', 'yellow', 'green', 'gray']. ${envStatusFill} is not recognized`;\n    msg.state.error = error;\n    node.status({ fill: \"red\", shape: \"dot\", text: error });\n    return null;\n}\nif(msg.state.error) return null;\nif(envStatusFill)\n{\n    msg.state.status.fill = envStatusFill;\n}\n\n\n\nconst envStatusShape = evalEnv('shape');\nif (envStatusShape && ['dot', 'ring'].indexOf(envStatusShape) < 0) \n{\n    const error = `Available shape for Status node are ['dot', 'ring']. ${envStatusShape} is not recognized`;\n    msg.state.error = error;\n    node.status({ fill: \"red\", shape: \"dot\", text: error });\n    return null;\n}\nif (msg.state.error) return null;\nif (envStatusShape) {\n    msg.state.status.shape = envStatusShape;\n}\n\nconst envStatusText = evalEnv('text');\nif (msg.state.error) return null;\nif (envStatusText) {\n    msg.state.status.text = envStatusText;\n}\n\nnode.warn(msg.state.status);\nnode.status(msg.state.status);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 520,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "89521151e61b9867",
        "type": "subflow:552764fe6e0b1a84",
        "z": "884f94515d431dae",
        "name": "\"got here\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"got here\"",
                "type": "str"
            }
        ],
        "x": 700,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "3f159dfeb9fd64b6",
        "type": "status",
        "z": "0f7d49711eadc4d1",
        "name": "",
        "scope": [
            "d3a3aee9ad9746e4",
            "3b96d677d867684b",
            "f5a86293442e633a"
        ],
        "x": 380,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "1b8a39db67c8ab89",
        "type": "catch",
        "z": "0f7d49711eadc4d1",
        "name": "",
        "scope": null,
        "uncaught": true,
        "x": 400,
        "y": 40,
        "wires": [
            [
                "5253f9583ccc7a5b"
            ]
        ]
    },
    {
        "id": "5253f9583ccc7a5b",
        "type": "subflow:552764fe6e0b1a84",
        "z": "0f7d49711eadc4d1",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "msg.error.message",
                "type": "str"
            }
        ],
        "x": 590,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "7fc3733dc39fc7cc",
        "type": "switch",
        "z": "0f7d49711eadc4d1",
        "g": "5a119a92e3b463b9",
        "name": "",
        "property": "state.passed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 220,
        "wires": [
            [
                "5736a36ec3b31cb8",
                "3b96d677d867684b"
            ],
            [
                "fb70174061fadbc9",
                "f5a86293442e633a"
            ]
        ]
    },
    {
        "id": "d3a3aee9ad9746e4",
        "type": "function",
        "z": "0f7d49711eadc4d1",
        "g": "5a119a92e3b463b9",
        "name": "validate",
        "func": "function throwEx(msg)\n{\n    node.status({fill:\"red\",shape:\"dot\",text:msg});\n    throw new Error(msg);\n}\n\nmsg.state = {\n    ...msg.state,\n    status: {...msg.state.status}\n}\n\n\nconst nodeName = msg.state?.containerNode?.name; \nif(!nodeName)\n{\n    throwEx(`To use a 'Value Get' node, a Spy node must be placed at the start of the flow/sub-flow`);\n}\n\nconst varExp = nodeName;\nlet value;\ntry\n{\n    value = eval(varExp);\n}\ncatch(ex)\n{\n    const error = `Couldn't evaluate: ${varExp}`;\n    node.status({ fill: \"red\", shape: \"dot\", text: error});\n    node.error(error, msg);\n    return null;\n}\n\n\n// fetch('http://127.0.0.1:5101/speak', {\n//     method: 'POST',\n//     body: JSON.stringify({ toSpeak: `msg.payload = ${msg.payload}` }),\n//     headers: { 'Content-Type': 'application/json' }\n// });\nnode.warn(msg.payload);\nmsg.state.passed = !!value;\n\n// fetch('http://127.0.0.1:5101/speak', {\n//     method: 'POST',\n//     body: JSON.stringify({ toSpeak: `msg.state.passed = ${msg.state.passed}` }),\n//     headers: { 'Content-Type': 'application/json' }\n// });\n\n\nif (value)\n{\n    msg.state.status = {fill:\"green\",shape:\"ring\",text:value}; \n}\nelse\n{\n    msg.state.status = { fill: \"gray\", shape: \"ring\", text: value ?? \"null\" };\n}\nnode.status(msg.state.status);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 460,
        "y": 220,
        "wires": [
            [
                "7fc3733dc39fc7cc"
            ]
        ]
    },
    {
        "id": "5736a36ec3b31cb8",
        "type": "subflow:552764fe6e0b1a84",
        "z": "0f7d49711eadc4d1",
        "d": true,
        "name": "\"paused\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"paused\"",
                "type": "str"
            }
        ],
        "x": 860,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "fb70174061fadbc9",
        "type": "subflow:552764fe6e0b1a84",
        "z": "0f7d49711eadc4d1",
        "d": true,
        "name": "\"paused\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"paused\"",
                "type": "str"
            }
        ],
        "x": 840,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3b96d677d867684b",
        "type": "subflow:b1fd681b1d5672dc",
        "z": "0f7d49711eadc4d1",
        "name": "",
        "x": 840,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7e07887e1c2ce561",
        "type": "subflow:630454ba203bdeb2",
        "z": "0f7d49711eadc4d1",
        "name": "",
        "x": 290,
        "y": 220,
        "wires": [
            [
                "d3a3aee9ad9746e4"
            ]
        ]
    },
    {
        "id": "f5a86293442e633a",
        "type": "subflow:b1fd681b1d5672dc",
        "z": "0f7d49711eadc4d1",
        "name": "",
        "x": 840,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "7bb9fd72e57ab91c",
        "type": "function",
        "z": "b1fd681b1d5672dc",
        "name": "🐞🪲🐛 Paused here",
        "func": "node.status({ fill: \"yellow\", shape: \"dot\", text: \"🐞🪲🐛 Paused here\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 80,
        "wires": [
            [
                "4cc052582eaf527c"
            ]
        ]
    },
    {
        "id": "9c853c496ef367f3",
        "type": "function",
        "z": "b1fd681b1d5672dc",
        "name": "✅",
        "func": "node.status({ fill:\"green\", shape:\"ring\", text: \"✅\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 80,
        "wires": [
            [
                "325378e4a47b93c3"
            ]
        ]
    },
    {
        "id": "58eb1585b9d8c6af",
        "type": "status",
        "z": "b1fd681b1d5672dc",
        "name": "",
        "scope": [
            "7bb9fd72e57ab91c",
            "9c853c496ef367f3"
        ],
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7a0a5841addb3cba",
        "type": "http request",
        "z": "b1fd681b1d5672dc",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5101/IsDebugging",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 410,
        "y": 180,
        "wires": [
            [
                "125bc315fa861516"
            ]
        ]
    },
    {
        "id": "125bc315fa861516",
        "type": "switch",
        "z": "b1fd681b1d5672dc",
        "name": "",
        "property": "payload.isDebugging",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "7bb9fd72e57ab91c"
            ],
            [
                "325378e4a47b93c3"
            ]
        ]
    },
    {
        "id": "4cc052582eaf527c",
        "type": "http request",
        "z": "b1fd681b1d5672dc",
        "g": "5ed572ff9a88cdca",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5101/WaitForDebugContinue",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 910,
        "y": 80,
        "wires": [
            [
                "9c853c496ef367f3"
            ]
        ]
    },
    {
        "id": "89472cb6e2250b9b",
        "type": "subflow:630454ba203bdeb2",
        "z": "e71dd36fbebd831d",
        "name": "",
        "x": 250,
        "y": 140,
        "wires": [
            [
                "72183e35d7304bd9"
            ]
        ]
    },
    {
        "id": "52317a9673c2edd3",
        "type": "function",
        "z": "e71dd36fbebd831d",
        "name": "add the option",
        "func": "\n// find node name\nconst nodeName = msg.state?.containerNode?.name;\nif (!nodeName) {\n    const error = `To use a 'Add option' node, a Spy node must be placed at the start of the flow/sub-flow`;\n    node.status({ fill: \"red\", shape: \"dot\", text: error });\n    return null;\n}\n// ensure non-null msg.state\nmsg.state = {\n    ...msg.state,\n}\n\n// no mcq attempted before || last mcq consumed, then start a new one.\nif (!msg.state.mcq || msg.state.mcq.isFrozen)\n{\n    msg.state.mcq = {};\n}\n\n\n// parse node name\nconst varExp = nodeName;\nlet value;\ntry {\n    value = eval(varExp);\n}\ncatch (ex) {\n    const error = `Couldn't evaluate: ${varExp}`;\n    node.status({ fill: \"red\", shape: \"dot\", text: error });\n    return null;\n}\n\n\nconst mcq = msg.state.mcq;\nmcq.options = mcq.options ?? [];\n\n// fetch('http://127.0.0.1:5101/speak', {\n//     method: 'POST',\n//     body: JSON.stringify({ toSpeak: !!mcq }),\n//     headers: { 'Content-Type': 'application/json' }\n// });\n\n// add the option\nmcq.options.push(value)\n\nnode.status({fill: \"green\", shape: \"ring\", text: value});\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 640,
        "y": 140,
        "wires": [
            [
                "67dbddea5290118d"
            ]
        ]
    },
    {
        "id": "18516758a72d6dd4",
        "type": "status",
        "z": "e71dd36fbebd831d",
        "name": "",
        "scope": [
            "52317a9673c2edd3",
            "72183e35d7304bd9"
        ],
        "x": 340,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "72183e35d7304bd9",
        "type": "function",
        "z": "e71dd36fbebd831d",
        "name": "Set MCQ question",
        "func": "const titleExpr = env.get('mcqTitle');\n\nif (msg.state?.mcq?.isUiShown)\n{\n    msg.state.mcq = { options: [] }\n}\n\n\nif (!titleExpr) return msg;\nlet question;\ntry\n{\n    question = eval(titleExpr);\n}\ncatch(ex)\n{\n    const error = `Couldn't parse expression ${titleExpr}`;\n    node.error(error, msg);\n    node.status({ fill: \"red\", shape: \"dot\", text: error });\n    return null;\n}\n\nmsg.state = {\n    ... msg.state,\n    mcq: {\n        ... msg.state.mcq,\n        question: question\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 140,
        "wires": [
            [
                "52317a9673c2edd3"
            ]
        ]
    },
    {
        "id": "67dbddea5290118d",
        "type": "subflow:b1fd681b1d5672dc",
        "z": "e71dd36fbebd831d",
        "name": "",
        "x": 840,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9f9c10db1186e4c1",
        "type": "status",
        "z": "e970c018d27254d4",
        "name": "",
        "scope": [
            "2aa177258b81556f",
            "55f3a452b3ee942a",
            "b01342844a5876f4",
            "db0b3ee987efea2b"
        ],
        "x": 260,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "21357ae11571746a",
        "type": "switch",
        "z": "e970c018d27254d4",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "-2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 300,
        "wires": [
            [
                "b01342844a5876f4"
            ],
            [
                "55f3a452b3ee942a"
            ],
            [
                "2aa177258b81556f"
            ]
        ]
    },
    {
        "id": "bb0c3808a15410d8",
        "type": "subflow:552764fe6e0b1a84",
        "z": "e970c018d27254d4",
        "name": "Declined",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 940,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "0afb1d15884abb5a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "e970c018d27254d4",
        "d": true,
        "name": "Inapplicable",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Inapplicable\"",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "8434fc95de8f8fe7",
        "type": "subflow:630454ba203bdeb2",
        "z": "e970c018d27254d4",
        "name": "",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "42b049d9906e85fb"
            ]
        ]
    },
    {
        "id": "2aa177258b81556f",
        "type": "subflow:884f94515d431dae",
        "z": "e970c018d27254d4",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "msg.state.mcq.options[msg.payload.answer]",
                "type": "str"
            }
        ],
        "x": 740,
        "y": 420,
        "wires": [
            [
                "e141a6f51aeb9832"
            ]
        ]
    },
    {
        "id": "55f3a452b3ee942a",
        "type": "subflow:884f94515d431dae",
        "z": "e970c018d27254d4",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 740,
        "y": 360,
        "wires": [
            [
                "bb0c3808a15410d8"
            ]
        ]
    },
    {
        "id": "b01342844a5876f4",
        "type": "subflow:884f94515d431dae",
        "z": "e970c018d27254d4",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"Inapplicable\"",
                "type": "str"
            }
        ],
        "x": 740,
        "y": 300,
        "wires": [
            [
                "0afb1d15884abb5a"
            ]
        ]
    },
    {
        "id": "a05c0cc5ca310e30",
        "type": "http request",
        "z": "e970c018d27254d4",
        "g": "7aecf8f8c26a14b4",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/mcq",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 80,
        "wires": [
            [
                "21357ae11571746a"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "b1c5788b88f7ffd3",
        "type": "function",
        "z": "e970c018d27254d4",
        "g": "7aecf8f8c26a14b4",
        "name": "set http payload",
        "func": "if(!msg.state?.mcq)\n{\n    node.status({fill:\"red\",shape:\"dot\",text:\"Invalid state msg.state?.mcq is null\"});\n    return null;\n}\n\nmsg.payload = {\n    options: msg.state.mcq.options,\n    question: msg.state.mcq.question,\n}\nnode.warn(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 80,
        "wires": [
            [
                "a05c0cc5ca310e30"
            ]
        ]
    },
    {
        "id": "db0b3ee987efea2b",
        "type": "subflow:884f94515d431dae",
        "z": "e970c018d27254d4",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"dot\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "`Input ${msg.state.mcq.options.length} options`",
                "type": "str"
            }
        ],
        "x": 580,
        "y": 80,
        "wires": [
            [
                "b1c5788b88f7ffd3"
            ]
        ]
    },
    {
        "id": "42b049d9906e85fb",
        "type": "function",
        "z": "e970c018d27254d4",
        "name": "reset selected index",
        "func": "if(!msg.state?.mcq)\n{\n    node.status({ fill: \"red\", shape: \"dot\", text: \"Invalid state msg.state?.mcq is null\"});\n    return null\n}\n\nmsg.state.mcq.isFrozen = true;\nmsg.state.mcq.beingCheckedIndex = -1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 80,
        "wires": [
            [
                "db0b3ee987efea2b"
            ]
        ]
    },
    {
        "id": "e141a6f51aeb9832",
        "type": "function",
        "z": "e970c018d27254d4",
        "name": "set output payload",
        "func": "if(!msg.state?.mcq)\n{\n    node.status({fill: \"red\", shape: \"dot\", text:\"Invalid state msg.state?.mcq is null\"});\n    return null;\n}\n\nconst mcq = msg.state.mcq;\nmcq.selectedIndex = msg.payload.answer;\nmcq.selectedItem = mcq.options[mcq.selectedIndex];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 930,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "92829cbaa627d68b",
        "type": "subflow:0f7d49711eadc4d1",
        "z": "73f46db8070c553e",
        "name": "msg.state.mcq.matched",
        "x": 1110,
        "y": 140,
        "wires": [
            [
                "a73e78124c246342"
            ],
            [
                "efe3dea4dfed7287"
            ]
        ]
    },
    {
        "id": "72577f9a9b1f9426",
        "type": "function",
        "z": "73f46db8070c553e",
        "name": "compare value to selection",
        "func": "if(!msg.state?.mcq)\n{\n    node.status({fill:\"red\",shape:\"dot\",text:\"Invalid state: msg.state?.mcq is null\"});\n    return null;\n}\nconst mcq = msg.state.mcq;\n\nmcq.beingCheckedIndex ++;\n\nconst beingCheckedItem = mcq.options[mcq.beingCheckedIndex];\nif (mcq.beingCheckedIndex != mcq.selectedIndex)\n{\n    node.status({ fill: \"gray\", shape: \"ring\", text: beingCheckedItem });\n    return msg;\n}\n\nmcq.matched = true;\nnode.status({ fill: \"green\", shape: \"ring\", text: beingCheckedItem });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 800,
        "y": 140,
        "wires": [
            [
                "92829cbaa627d68b"
            ]
        ]
    },
    {
        "id": "bd599078339a1e9a",
        "type": "status",
        "z": "73f46db8070c553e",
        "name": "",
        "scope": [
            "72577f9a9b1f9426"
        ],
        "x": 470,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "3c71c372a4961011",
        "type": "subflow:630454ba203bdeb2",
        "z": "73f46db8070c553e",
        "name": "",
        "x": 230,
        "y": 140,
        "wires": [
            [
                "2f465fc9b65d7f2f"
            ]
        ]
    },
    {
        "id": "a73e78124c246342",
        "type": "subflow:884f94515d431dae",
        "z": "73f46db8070c553e",
        "name": "",
        "env": [
            {
                "name": "fill",
                "value": "\"green\"",
                "type": "str"
            }
        ],
        "x": 1300,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "efe3dea4dfed7287",
        "type": "subflow:884f94515d431dae",
        "z": "73f46db8070c553e",
        "name": "",
        "env": [
            {
                "name": "fill",
                "value": "\"gray\"",
                "type": "str"
            }
        ],
        "x": 1300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "4e478432094a1963",
        "type": "switch",
        "z": "73f46db8070c553e",
        "g": "4e78c8e730cc5653",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "-2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 390,
        "y": 440,
        "wires": [
            [
                "5a831870b044b0b6"
            ],
            [
                "36e52ee060ff0830"
            ],
            [
                "082c6f7b692efc30"
            ]
        ]
    },
    {
        "id": "115c0fd50ec5fdd3",
        "type": "subflow:552764fe6e0b1a84",
        "z": "73f46db8070c553e",
        "g": "4e78c8e730cc5653",
        "name": "Declined",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 840,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "1855ea0fd8407202",
        "type": "subflow:552764fe6e0b1a84",
        "z": "73f46db8070c553e",
        "d": true,
        "g": "4e78c8e730cc5653",
        "name": "Inapplicable",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Inapplicable\"",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "082c6f7b692efc30",
        "type": "subflow:884f94515d431dae",
        "z": "73f46db8070c553e",
        "g": "4e78c8e730cc5653",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "msg.state.mcq.options[msg.payload.answer]",
                "type": "str"
            }
        ],
        "x": 640,
        "y": 560,
        "wires": [
            [
                "64cf0188b5bbcaac"
            ]
        ]
    },
    {
        "id": "36e52ee060ff0830",
        "type": "subflow:884f94515d431dae",
        "z": "73f46db8070c553e",
        "g": "4e78c8e730cc5653",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 640,
        "y": 500,
        "wires": [
            [
                "115c0fd50ec5fdd3"
            ]
        ]
    },
    {
        "id": "5a831870b044b0b6",
        "type": "subflow:884f94515d431dae",
        "z": "73f46db8070c553e",
        "g": "4e78c8e730cc5653",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"Inapplicable\"",
                "type": "str"
            }
        ],
        "x": 640,
        "y": 440,
        "wires": [
            [
                "1855ea0fd8407202"
            ]
        ]
    },
    {
        "id": "e3d4d476e978cb1f",
        "type": "subflow:884f94515d431dae",
        "z": "73f46db8070c553e",
        "g": "4e78c8e730cc5653",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"dot\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "`Input ${msg.state.mcq.options.length} options`",
                "type": "str"
            }
        ],
        "x": 540,
        "y": 320,
        "wires": [
            [
                "c574e1a087db5046"
            ]
        ]
    },
    {
        "id": "1174e03aeade541e",
        "type": "function",
        "z": "73f46db8070c553e",
        "g": "4e78c8e730cc5653",
        "name": "reset selected index",
        "func": "if(!msg.state?.mcq)\n{\n    node.status({ fill: \"red\", shape: \"dot\", text: \"Invalid state msg.state?.mcq is null\"});\n    return null\n}\n\nmsg.state.mcq.isFronzen = true;\nmsg.state.mcq.beingCheckedIndex = -1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 320,
        "wires": [
            [
                "e3d4d476e978cb1f"
            ]
        ]
    },
    {
        "id": "64cf0188b5bbcaac",
        "type": "function",
        "z": "73f46db8070c553e",
        "g": "4e78c8e730cc5653",
        "name": "set output payload",
        "func": "if(!msg.state?.mcq)\n{\n    node.status({fill: \"red\", shape: \"dot\", text:\"Invalid state msg.state?.mcq is null\"});\n    return null;\n}\n\nconst mcq = msg.state.mcq;\nmcq.selectedIndex = msg.payload.answer;\nmcq.selectedItem = mcq.options[mcq.selectedIndex];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 830,
        "y": 560,
        "wires": [
            [
                "72577f9a9b1f9426"
            ]
        ]
    },
    {
        "id": "7837d66e60dc894a",
        "type": "http request",
        "z": "73f46db8070c553e",
        "g": "5b2390cb4ff4ec6b",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/mcq",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 970,
        "y": 320,
        "wires": [
            [
                "4e478432094a1963"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "c574e1a087db5046",
        "type": "function",
        "z": "73f46db8070c553e",
        "g": "5b2390cb4ff4ec6b",
        "name": "set http payload",
        "func": "if(!msg.state?.mcq)\n{\n    node.status({fill:\"red\",shape:\"dot\",text:\"Invalid state msg.state?.mcq is null\"});\n    return null;\n}\n\nmsg.payload = {\n    options: msg.state.mcq.options,\n    question: msg.state.mcq.question ?? \"Pick an option:\",\n}\nnode.warn(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 320,
        "wires": [
            [
                "7837d66e60dc894a"
            ]
        ]
    },
    {
        "id": "0db1351aa92037d0",
        "type": "function",
        "z": "73f46db8070c553e",
        "g": "4e78c8e730cc5653",
        "name": "msg.state.mcq.isUiShown = true",
        "func": "msg.state.mcq.isUiShown = true;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 240,
        "wires": [
            [
                "1174e03aeade541e"
            ]
        ]
    },
    {
        "id": "2f465fc9b65d7f2f",
        "type": "switch",
        "z": "73f46db8070c553e",
        "name": "",
        "property": "state.mcq.isUiShown",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "72577f9a9b1f9426"
            ],
            [
                "0db1351aa92037d0"
            ]
        ]
    },
    {
        "id": "176323f09b0d1f22",
        "type": "function",
        "z": "b46d116f918b2cd8",
        "name": "function 4",
        "func": "msg.state = {\n    ...msg.state,\n    options: []\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "f44d29a68cc0c480",
        "type": "function",
        "z": "8a100851b2ca9df7",
        "name": "function 5",
        "func": "function throwEx(msg) {\n    node.status({ fill: \"red\", shape: \"dot\", text: msg });\n    throw new Error(msg);\n}\n\nmsg.state = {\n    ...msg.state,\n    status: { ...msg.state.status }\n}\n\n\nconst nodeName = msg.state?.containerNode?.name;\nif (!nodeName) {\n    throwEx(`To use a 'Value Get' node, a Spy node must be placed at the start of the flow/sub-flow`);\n}\n\nconst varExp = nodeName;\nlet value;\ntry {\n    value = eval(varExp);\n}\ncatch (ex) {\n    const error = `Couldn't evaluate: ${varExp}`;\n    fetch('http://127.0.0.1:5101/speak', {\n        method: 'POST',\n        body: JSON.stringify({ toSpeak: error }),\n        headers: { 'Content-Type': 'application/json' }\n    });\n    node.status({ fill: \"red\", shape: \"dot\", text: error });\n    node.error(error, msg);\n    return null;\n}\n\nif(!Array.isArray(value))\n{\n    const error = `Array is expected from: ${varExp}`;\n    node.status({ fill: \"red\", shape: \"dot\", text: error });\n    fetch('http://127.0.0.1:5101/speak', {\n        method: 'POST',\n        body: JSON.stringify({ toSpeak: error }),\n        headers: { 'Content-Type': 'application/json' }\n    });\n    return null;\n}\n\n\n\nmsg.state.options = value;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 540,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "370ba469ba5e98b2",
        "type": "status",
        "z": "5859b3292f239f6a",
        "name": "",
        "scope": [
            "b8ddaa510d9a2705"
        ],
        "x": 440,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f4caec6814474e4c",
        "type": "catch",
        "z": "5859b3292f239f6a",
        "name": "",
        "scope": null,
        "uncaught": true,
        "x": 460,
        "y": 140,
        "wires": [
            [
                "b0238d33abeccb53"
            ]
        ]
    },
    {
        "id": "b0238d33abeccb53",
        "type": "subflow:552764fe6e0b1a84",
        "z": "5859b3292f239f6a",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "msg.error.message",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2a61b80cdde5116b",
        "type": "subflow:b1fd681b1d5672dc",
        "z": "5859b3292f239f6a",
        "name": "",
        "x": 820,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b9e3791772c11087",
        "type": "subflow:630454ba203bdeb2",
        "z": "5859b3292f239f6a",
        "name": "",
        "x": 330,
        "y": 320,
        "wires": [
            [
                "b8ddaa510d9a2705"
            ]
        ]
    },
    {
        "id": "b8ddaa510d9a2705",
        "type": "function",
        "z": "5859b3292f239f6a",
        "name": "validate",
        "func": "const nodeName = msg.state?.containerNode?.name; \nif(!nodeName)\n{\n    const error = \"You must have a Spy node in earlier position in order to be able to use node's name\";\n    node.status({fill: \"red\", shape:\"dot\", text: error});\n    node.error(error, msg);\n    return null;\n}\n\nconst varExp = nodeName;\nlet value;\ntry\n{\n    value = eval(varExp);\n}\ncatch(ex)\n{\n    const error = `Couldn't evaluate: ${varExp}`;\n    node.status({ fill: \"red\", shape: \"dot\", text: error});\n    node.error(error, msg);\n    return null;\n}\n\nif(!value)\n{\n    const error = `${varExp} is required!`;\n    node.status({ fill: \"red\", shape: \"dot\", text: error });\n    return null;\n}\n\nnode.status({ fill: \"green\", shape: \"ring\", text: \"Provided\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 480,
        "y": 320,
        "wires": [
            [
                "2a61b80cdde5116b"
            ]
        ]
    },
    {
        "id": "74a5d9f821f3a6fd",
        "type": "status",
        "z": "1f18c5c98cde2760",
        "name": "",
        "scope": [
            "17d5af4ce4773413"
        ],
        "x": 300,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a2a9595c14bb2c54",
        "type": "subflow:b1fd681b1d5672dc",
        "z": "1f18c5c98cde2760",
        "name": "",
        "x": 680,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "75a8c422a04223bf",
        "type": "subflow:630454ba203bdeb2",
        "z": "1f18c5c98cde2760",
        "name": "",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "17d5af4ce4773413"
            ]
        ]
    },
    {
        "id": "17d5af4ce4773413",
        "type": "function",
        "z": "1f18c5c98cde2760",
        "name": "Run JavaScript line",
        "func": "const nodeName = msg.state?.containerNode?.name; \nif(!nodeName)\n{\n    const error = \"You must have a Spy node in earlier position in order to be able to use node's name\";\n    node.status({fill: \"red\", shape:\"dot\", text: error});\n    node.error(error, msg);\n    return null;\n}\n\n\nlet value;\ntry\n{\n    value = eval(nodeName);\n}\ncatch(ex)\n{\n    const error = `Couldn't evaluate: ${nodeName}`;\n    node.status({ fill: \"red\", shape: \"dot\", text: error});\n    node.error(error, msg);\n    return null;\n}\n\nnode.status({ fill: \"green\", shape: \"ring\", text: \"Executed\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fetch",
                "module": "node-fetch"
            }
        ],
        "x": 410,
        "y": 340,
        "wires": [
            [
                "a2a9595c14bb2c54"
            ]
        ]
    },
    {
        "id": "3cf002fece5064ec",
        "type": "subflow:e71dd36fbebd831d",
        "z": "7dd6aa47fd337fda",
        "name": "\"No, decline please\"",
        "env": [
            {
                "name": "mcqTitle",
                "value": "\"Are you sure you want to proceed?\"",
                "type": "str"
            }
        ],
        "x": 460,
        "y": 280,
        "wires": [
            [
                "c7b52e661059992c"
            ]
        ]
    },
    {
        "id": "f2b409d7e0140731",
        "type": "subflow:630454ba203bdeb2",
        "z": "7dd6aa47fd337fda",
        "name": "",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "09c0638ea50300b8",
                "d4e8440915f14ed9"
            ]
        ]
    },
    {
        "id": "c7b52e661059992c",
        "type": "subflow:e71dd36fbebd831d",
        "z": "7dd6aa47fd337fda",
        "name": "\"Yes, please proceed.\"",
        "x": 460,
        "y": 340,
        "wires": [
            [
                "95c7ac1534f4c0ad"
            ]
        ]
    },
    {
        "id": "95c7ac1534f4c0ad",
        "type": "subflow:73f46db8070c553e",
        "z": "7dd6aa47fd337fda",
        "name": "",
        "x": 665,
        "y": 280,
        "wires": [
            [
                "6a30369f7ae94369"
            ],
            [
                "f62f92a52aaa1284"
            ]
        ],
        "l": false
    },
    {
        "id": "f62f92a52aaa1284",
        "type": "subflow:73f46db8070c553e",
        "z": "7dd6aa47fd337fda",
        "name": "",
        "x": 665,
        "y": 340,
        "wires": [
            [
                "23f0a547cd990d31"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "3c0eca4e037f079d",
        "type": "status",
        "z": "7dd6aa47fd337fda",
        "name": "",
        "scope": [
            "6a30369f7ae94369",
            "23f0a547cd990d31",
            "d4e8440915f14ed9"
        ],
        "x": 420,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "09c0638ea50300b8",
        "type": "subflow:552764fe6e0b1a84",
        "z": "7dd6aa47fd337fda",
        "name": "\"Please confirm\"",
        "x": 440,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "6a30369f7ae94369",
        "type": "subflow:884f94515d431dae",
        "z": "7dd6aa47fd337fda",
        "name": "",
        "env": [
            {
                "name": "fill",
                "value": "\"red\"",
                "type": "str"
            },
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 780,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "23f0a547cd990d31",
        "type": "subflow:884f94515d431dae",
        "z": "7dd6aa47fd337fda",
        "name": "",
        "env": [
            {
                "name": "fill",
                "value": "\"green\"",
                "type": "str"
            },
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"Confirmed\"",
                "type": "str"
            }
        ],
        "x": 780,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "d4e8440915f14ed9",
        "type": "subflow:884f94515d431dae",
        "z": "7dd6aa47fd337fda",
        "name": "",
        "env": [
            {
                "name": "fill",
                "value": "\"blue\"",
                "type": "str"
            },
            {
                "name": "shape",
                "value": "\"dot\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"Need confirmation first\"",
                "type": "str"
            }
        ],
        "x": 460,
        "y": 180,
        "wires": [
            [
                "3cf002fece5064ec"
            ]
        ]
    },
    {
        "id": "dad249fb2d2d0ea7",
        "type": "link in",
        "z": "66dc4606b2245ab2",
        "name": "node-RED",
        "links": [
            "45336ffdcd3bce3e",
            "25f6bee36d2516b0"
        ],
        "x": 345,
        "y": 120,
        "wires": [
            [
                "15e623c8433b1f76"
            ]
        ]
    },
    {
        "id": "15e623c8433b1f76",
        "type": "subflow:630454ba203bdeb2",
        "z": "66dc4606b2245ab2",
        "name": "",
        "x": 590,
        "y": 120,
        "wires": [
            [
                "e38cba8046a802d2"
            ]
        ]
    },
    {
        "id": "118d7db67181ab39",
        "type": "http in",
        "z": "66dc4606b2245ab2",
        "name": "💼 Node-RED ...",
        "url": "/g12i0e",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 340,
        "y": 60,
        "wires": [
            [
                "15e623c8433b1f76"
            ]
        ]
    },
    {
        "id": "e38cba8046a802d2",
        "type": "subflow:e71dd36fbebd831d",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": "\"_> Commit changes to node-RED repo\"",
        "x": 440,
        "y": 280,
        "wires": [
            [
                "ddf524162d7f330f"
            ]
        ]
    },
    {
        "id": "ddf524162d7f330f",
        "type": "subflow:e71dd36fbebd831d",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": "\"ℹ️ Check current remote repo\"",
        "x": 450,
        "y": 340,
        "wires": [
            [
                "b89538047c1d0f4c"
            ]
        ]
    },
    {
        "id": "b89538047c1d0f4c",
        "type": "subflow:e71dd36fbebd831d",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": "\"🪟 Open repo in VSCode\"",
        "x": 440,
        "y": 400,
        "wires": [
            [
                "27358c12558d5a01"
            ]
        ]
    },
    {
        "id": "27358c12558d5a01",
        "type": "subflow:e71dd36fbebd831d",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": "\"⌨️ Open nod-RED repo in a terminal\"",
        "x": 470,
        "y": 460,
        "wires": [
            [
                "bad91dda333f174e"
            ]
        ]
    },
    {
        "id": "e7cc286fb9ce9ae5",
        "type": "subflow:73f46db8070c553e",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": ".",
        "x": 715,
        "y": 280,
        "wires": [
            [
                "62b78e0fb1de6fc0"
            ],
            [
                "2ef2b69014d1bb5e"
            ]
        ],
        "l": false
    },
    {
        "id": "2ef2b69014d1bb5e",
        "type": "subflow:73f46db8070c553e",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": ".",
        "x": 715,
        "y": 340,
        "wires": [
            [
                "7fdac43fc713e966"
            ],
            [
                "52b126065256692a"
            ]
        ],
        "l": false
    },
    {
        "id": "52b126065256692a",
        "type": "subflow:73f46db8070c553e",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": ".",
        "x": 715,
        "y": 400,
        "wires": [
            [
                "9a6c91a52b3f3df3"
            ],
            [
                "33f79f768906d75d"
            ]
        ],
        "l": false
    },
    {
        "id": "33f79f768906d75d",
        "type": "subflow:73f46db8070c553e",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": ".",
        "x": 715,
        "y": 460,
        "wires": [
            [
                "e5265f831ba01ebd"
            ],
            [
                "ea75067cd542d4a9"
            ]
        ],
        "l": false
    },
    {
        "id": "fdaf9a7a54b37c54",
        "type": "inject",
        "z": "66dc4606b2245ab2",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 330,
        "y": 180,
        "wires": [
            [
                "15e623c8433b1f76"
            ]
        ]
    },
    {
        "id": "62b78e0fb1de6fc0",
        "type": "link out",
        "z": "66dc4606b2245ab2",
        "name": "link out 21",
        "mode": "link",
        "links": [
            "9ba512984d21fac9"
        ],
        "x": 785,
        "y": 280,
        "wires": []
    },
    {
        "id": "bad91dda333f174e",
        "type": "subflow:e71dd36fbebd831d",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": "\"🪟Open flows.json\"",
        "x": 420,
        "y": 520,
        "wires": [
            [
                "3c70f8df29d955bb"
            ]
        ]
    },
    {
        "id": "ea75067cd542d4a9",
        "type": "subflow:73f46db8070c553e",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": ".",
        "x": 715,
        "y": 520,
        "wires": [
            [
                "f0d22e5180c2e593"
            ],
            [
                "2ed49881cfee59dd"
            ]
        ],
        "l": false
    },
    {
        "id": "7fdac43fc713e966",
        "type": "link out",
        "z": "66dc4606b2245ab2",
        "name": "link out 20",
        "mode": "link",
        "links": [
            "290604b8301ff7ee"
        ],
        "x": 785,
        "y": 340,
        "wires": []
    },
    {
        "id": "9a6c91a52b3f3df3",
        "type": "link out",
        "z": "66dc4606b2245ab2",
        "name": "link out 23",
        "mode": "link",
        "links": [
            "4ba00e4a8a69d4f8"
        ],
        "x": 785,
        "y": 400,
        "wires": []
    },
    {
        "id": "e5265f831ba01ebd",
        "type": "link out",
        "z": "66dc4606b2245ab2",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "38af77118584b69e"
        ],
        "x": 785,
        "y": 460,
        "wires": []
    },
    {
        "id": "f0d22e5180c2e593",
        "type": "link out",
        "z": "66dc4606b2245ab2",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "d337b2891d1ecdb9"
        ],
        "x": 785,
        "y": 520,
        "wires": []
    },
    {
        "id": "3c70f8df29d955bb",
        "type": "subflow:e71dd36fbebd831d",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": "\"🪟Flow / Sub-flow comparison #subflow #when #use\"",
        "x": 440,
        "y": 580,
        "wires": [
            [
                "e7cc286fb9ce9ae5"
            ]
        ]
    },
    {
        "id": "2ed49881cfee59dd",
        "type": "subflow:73f46db8070c553e",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": ".",
        "x": 715,
        "y": 580,
        "wires": [
            [
                "76fd9b9553894e0a"
            ],
            [
                "6db617a42088a5d9"
            ]
        ],
        "l": false
    },
    {
        "id": "d4725a3cb64aba04",
        "type": "subflow:b182be5bcebc47cd",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.notion.so/Node-RED-Flow-Sub-flow-Comparison-2196ea6ef60880009a63d6e5a7f85e49?source=copy_link#2196ea6ef6088037ad2cf8644de3795e\"",
                "type": "str"
            }
        ],
        "x": 1090,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "284b4ff4ec375140",
        "type": "inject",
        "z": "66dc4606b2245ab2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 580,
        "y": 680,
        "wires": [
            [
                "410bd0b8f7321fd9"
            ]
        ]
    },
    {
        "id": "b9215edffd39115d",
        "type": "http in",
        "z": "66dc4606b2245ab2",
        "name": "node-RED | Compare Flow to Sub-flow #when #use",
        "url": "/c3a0b1u",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 430,
        "y": 720,
        "wires": [
            [
                "410bd0b8f7321fd9"
            ]
        ]
    },
    {
        "id": "6db617a42088a5d9",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66dc4606b2245ab2",
        "name": "\"Declined",
        "x": 1040,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "76fd9b9553894e0a",
        "type": "subflow:630454ba203bdeb2",
        "z": "66dc4606b2245ab2",
        "g": "e122cc39b0d934b6",
        "name": "",
        "x": 890,
        "y": 560,
        "wires": [
            [
                "d4725a3cb64aba04"
            ]
        ]
    },
    {
        "id": "3c8092e5b1b036bb",
        "type": "subflow:630454ba203bdeb2",
        "z": "094bd06b2f6a954a",
        "g": "ec21ae1ea709e15f",
        "name": "",
        "x": 430,
        "y": 160,
        "wires": [
            [
                "5bd6e3150ea2486f"
            ]
        ]
    },
    {
        "id": "5bd6e3150ea2486f",
        "type": "subflow:d147f856086021e2",
        "z": "094bd06b2f6a954a",
        "g": "ec21ae1ea709e15f",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"code\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"flows.json\"",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "\"%userprofile%/.node-red\"",
                "type": "str"
            }
        ],
        "x": 620,
        "y": 160,
        "wires": [
            [],
            [
                "39d13d8a12c23ba8"
            ]
        ]
    },
    {
        "id": "39d13d8a12c23ba8",
        "type": "subflow:552764fe6e0b1a84",
        "z": "094bd06b2f6a954a",
        "g": "ec21ae1ea709e15f",
        "name": "\"Find the active vscode window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Find the active vscode window\"",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "260f70804bb095b6",
        "type": "http in",
        "z": "094bd06b2f6a954a",
        "g": "ec21ae1ea709e15f",
        "name": "🪟 Node-RED | Open flows.json",
        "url": "/s1v8b6p",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 530,
        "y": 240,
        "wires": [
            [
                "3c8092e5b1b036bb"
            ]
        ]
    },
    {
        "id": "d337b2891d1ecdb9",
        "type": "link in",
        "z": "094bd06b2f6a954a",
        "name": "Opening node-RED flows.json",
        "links": [
            "f0d22e5180c2e593"
        ],
        "x": 295,
        "y": 160,
        "wires": [
            [
                "3c8092e5b1b036bb"
            ]
        ]
    },
    {
        "id": "fe5568010bcdb6c8",
        "type": "subflow:552764fe6e0b1a84",
        "z": "e6928b3861ed8f5d",
        "g": "d624c1df12c54d8b",
        "name": "\"Opening repo in PowerShell\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Opening repo in PowerShell\"",
                "type": "str"
            }
        ],
        "x": 690,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "835ae7dc26f640f9",
        "type": "subflow:4178eda1bbbd7002",
        "z": "e6928b3861ed8f5d",
        "g": "d624c1df12c54d8b",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"dir\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"%userprofile%/.node-red\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "94713546ea449250",
        "type": "subflow:630454ba203bdeb2",
        "z": "e6928b3861ed8f5d",
        "g": "d624c1df12c54d8b",
        "name": "",
        "x": 450,
        "y": 220,
        "wires": [
            [
                "8ebb93b63415539b"
            ]
        ]
    },
    {
        "id": "acb68ea86a6e9610",
        "type": "http in",
        "z": "e6928b3861ed8f5d",
        "g": "d624c1df12c54d8b",
        "name": "⌨️ Node-RED | Open in a terminal",
        "url": "/y4d6t3o",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 520,
        "y": 320,
        "wires": [
            [
                "94713546ea449250"
            ]
        ]
    },
    {
        "id": "38af77118584b69e",
        "type": "link in",
        "z": "e6928b3861ed8f5d",
        "name": "Opening node-RED repo in terminal",
        "links": [
            "e5265f831ba01ebd"
        ],
        "x": 275,
        "y": 200,
        "wires": [
            [
                "94713546ea449250"
            ]
        ]
    },
    {
        "id": "8bb3fa6d38e55690",
        "type": "link in",
        "z": "c0f1d6631219e9f1",
        "g": "a1e5a9fcc337147b",
        "name": "Manage open windows",
        "links": [
            "e6d09a8a7f8e8bf3"
        ],
        "x": 165,
        "y": 80,
        "wires": [
            [
                "418d649c74d340b3"
            ]
        ]
    },
    {
        "id": "418d649c74d340b3",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "g": "a1e5a9fcc337147b",
        "name": "",
        "x": 250,
        "y": 80,
        "wires": [
            [
                "4bb1b8d6b55b7b2f"
            ]
        ]
    },
    {
        "id": "4bb1b8d6b55b7b2f",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Action\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['Tile']",
                "type": "str"
            }
        ],
        "x": 210,
        "y": 760,
        "wires": [
            [],
            [],
            [
                "e9b7a7bf633ee7bd"
            ]
        ]
    },
    {
        "id": "e9b7a7bf633ee7bd",
        "type": "switch",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 780,
        "wires": [
            [
                "c24b2fae596d1233"
            ]
        ]
    },
    {
        "id": "c24b2fae596d1233",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"What process?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Teams\", \"Rider\", \"VSCode\", \"Notepad\", \"Vivaldi\", \"Edge\", \"PowerShell\", \"Lens #K8s #Kubernetes #Containers\"]",
                "type": "str"
            }
        ],
        "x": 750,
        "y": 780,
        "wires": [
            [],
            [],
            [
                "f0e0206b94c16e0b"
            ]
        ]
    },
    {
        "id": "f0e0206b94c16e0b",
        "type": "switch",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 890,
        "y": 780,
        "wires": [
            [
                "9ba63ce2df296f64"
            ],
            [
                "5580fc2b5cd501db"
            ],
            [
                "add4e3ab06d4c8c0"
            ],
            [
                "d51673bfc31c9012"
            ],
            [],
            [
                "ab460aa5506a2480"
            ],
            [
                "0b810641261327d5"
            ],
            [
                "1174c09759ee9da1"
            ]
        ]
    },
    {
        "id": "37521eec74d29feb",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "🪟 Tile Microsoft Teams windows #ms-teams",
        "url": "/tile-ms-teams",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 550,
        "y": 60,
        "wires": [
            [
                "8416bb92b4a416c1"
            ]
        ]
    },
    {
        "id": "d90427118a91c65f",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "🪟  Tile Notepad windows",
        "url": "/x1u4q2g",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 590,
        "y": 240,
        "wires": [
            [
                "05ba543da02dd89a"
            ]
        ]
    },
    {
        "id": "c5ebf8de1d15782f",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "🪟 Tile VSCode windows",
        "url": "/tile-vscode",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 590,
        "y": 180,
        "wires": [
            [
                "39dd6cb1684485a7"
            ]
        ]
    },
    {
        "id": "24e9e73f93870b12",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "🪟  Tile Rider windows",
        "url": "/tile-rider",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 600,
        "y": 120,
        "wires": [
            [
                "bc6de0a70bb65602"
            ]
        ]
    },
    {
        "id": "05ba543da02dd89a",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 930,
        "y": 240,
        "wires": [
            [
                "d51673bfc31c9012"
            ]
        ]
    },
    {
        "id": "39dd6cb1684485a7",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 950,
        "y": 180,
        "wires": [
            [
                "add4e3ab06d4c8c0"
            ]
        ]
    },
    {
        "id": "bc6de0a70bb65602",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 990,
        "y": 120,
        "wires": [
            [
                "5580fc2b5cd501db"
            ]
        ]
    },
    {
        "id": "8416bb92b4a416c1",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 1050,
        "y": 60,
        "wires": [
            [
                "9ba63ce2df296f64"
            ]
        ]
    },
    {
        "id": "60c1787c7be646f9",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "🪟 Tile Vivaldi windows",
        "url": "/tile-vivaldi",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 580,
        "y": 300,
        "wires": [
            [
                "f17134672c1e058c"
            ]
        ]
    },
    {
        "id": "f17134672c1e058c",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 910,
        "y": 300,
        "wires": [
            [
                "9153dba56d59140f"
            ]
        ]
    },
    {
        "id": "9153dba56d59140f",
        "type": "subflow:79b3adc8f3ea8d41",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile Vivaldi windows",
        "env": [
            {
                "name": "processName",
                "value": "\"vivaldi\"",
                "type": "str"
            }
        ],
        "x": 1300,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "ece149e3c7ca7c06",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "🪟 Tile Edge windows",
        "url": "/tile-edge",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 580,
        "y": 360,
        "wires": [
            [
                "50eb406810e44aef"
            ]
        ]
    },
    {
        "id": "50eb406810e44aef",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 890,
        "y": 360,
        "wires": [
            [
                "ab460aa5506a2480"
            ]
        ],
        "info": "{\r\n    \"Sahel\": {\r\n        \r\n    }\r\n}"
    },
    {
        "id": "ab460aa5506a2480",
        "type": "subflow:79b3adc8f3ea8d41",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile Edgewindows",
        "env": [
            {
                "name": "processName",
                "value": "\"msedge\"",
                "type": "str"
            }
        ],
        "x": 1270,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "69e32afdd4d13532",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "🪟  Tile PowerShell terminal windows",
        "url": "/tile-powershell",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 630,
        "y": 420,
        "wires": [
            [
                "afa66aa988895f95"
            ]
        ]
    },
    {
        "id": "afa66aa988895f95",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 870,
        "y": 420,
        "wires": [
            [
                "0b810641261327d5"
            ]
        ]
    },
    {
        "id": "0b810641261327d5",
        "type": "subflow:79b3adc8f3ea8d41",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile PowerShell windows",
        "env": [
            {
                "name": "processName",
                "value": "\"WindowsTerminal\"",
                "type": "str"
            }
        ],
        "x": 1270,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "1174c09759ee9da1",
        "type": "subflow:79b3adc8f3ea8d41",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile Lens windows",
        "env": [
            {
                "name": "processName",
                "value": "\"Lens\"",
                "type": "str"
            }
        ],
        "x": 1230,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "359214fe8012d9a1",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 850,
        "y": 480,
        "wires": [
            [
                "1174c09759ee9da1"
            ]
        ]
    },
    {
        "id": "5b82afab26b55208",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "🪟 Tile Lens windows #deployment #containers",
        "url": "/tile-lens",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 520,
        "y": 480,
        "wires": [
            [
                "359214fe8012d9a1"
            ]
        ]
    },
    {
        "id": "d8601ad97b7a3fc4",
        "type": "subflow:79b3adc8f3ea8d41",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile Explorer",
        "env": [
            {
                "name": "processName",
                "value": "\"explorer\"",
                "type": "str"
            }
        ],
        "x": 1190,
        "y": 1120,
        "wires": [
            [
                "9dd9a6572b9abeb4"
            ]
        ]
    },
    {
        "id": "1616a13573e5e520",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 830,
        "y": 540,
        "wires": [
            [
                "d8601ad97b7a3fc4"
            ]
        ]
    },
    {
        "id": "8a7aca3a4741f6ff",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "🪟 Tile windows explorer windows",
        "url": "/tile-explorer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 480,
        "y": 540,
        "wires": [
            [
                "1616a13573e5e520"
            ]
        ]
    },
    {
        "id": "9dd9a6572b9abeb4",
        "type": "switch",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "",
        "property": "state.windowCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1370,
        "y": 1120,
        "wires": [
            [
                "c70680b03671d193"
            ]
        ]
    },
    {
        "id": "c70680b03671d193",
        "type": "subflow:d147f856086021e2",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"explorer\"",
                "type": "str"
            }
        ],
        "x": 1540,
        "y": 1120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "66b52f9bfeaf4ffd",
        "type": "link out",
        "z": "c0f1d6631219e9f1",
        "g": "ebb01270777c043c",
        "name": "link out 27",
        "mode": "link",
        "links": [
            "63857f630a90182c"
        ],
        "x": 1575,
        "y": 640,
        "wires": []
    },
    {
        "id": "437c726c0f2e5332",
        "type": "link out",
        "z": "c0f1d6631219e9f1",
        "g": "239decb8d5bb93f7",
        "name": "link out 28",
        "mode": "link",
        "links": [
            "63857f630a90182c"
        ],
        "x": 1595,
        "y": 740,
        "wires": []
    },
    {
        "id": "125c940a3d959f6a",
        "type": "subflow:1f18c5c98cde2760",
        "z": "c0f1d6631219e9f1",
        "g": "239decb8d5bb93f7",
        "name": "msg.state.processName = \"code\"",
        "x": 1390,
        "y": 740,
        "wires": [
            [
                "437c726c0f2e5332"
            ]
        ]
    },
    {
        "id": "7fbba5c6bfe54ab2",
        "type": "subflow:1f18c5c98cde2760",
        "z": "c0f1d6631219e9f1",
        "g": "ebb01270777c043c",
        "name": "msg.state.processName = \"rider64\"",
        "x": 1390,
        "y": 640,
        "wires": [
            [
                "66b52f9bfeaf4ffd"
            ]
        ]
    },
    {
        "id": "32174b5ede698366",
        "type": "link out",
        "z": "c0f1d6631219e9f1",
        "g": "9a16ef80096466d0",
        "name": "link out 29",
        "mode": "link",
        "links": [
            "63857f630a90182c"
        ],
        "x": 1595,
        "y": 840,
        "wires": []
    },
    {
        "id": "a1666dda7cce920b",
        "type": "subflow:1f18c5c98cde2760",
        "z": "c0f1d6631219e9f1",
        "g": "9a16ef80096466d0",
        "name": "msg.state.processName = \"notepad\"",
        "x": 1400,
        "y": 840,
        "wires": [
            [
                "32174b5ede698366"
            ]
        ]
    },
    {
        "id": "1a48908e176139f7",
        "type": "link out",
        "z": "c0f1d6631219e9f1",
        "g": "1d6ae06380e8d1e6",
        "name": "link out 30",
        "mode": "link",
        "links": [
            "63857f630a90182c"
        ],
        "x": 1595,
        "y": 540,
        "wires": []
    },
    {
        "id": "b3e7aa3b5352323f",
        "type": "subflow:1f18c5c98cde2760",
        "z": "c0f1d6631219e9f1",
        "g": "1d6ae06380e8d1e6",
        "name": "msg.state.processName = \"ms-teams\"",
        "x": 1400,
        "y": 540,
        "wires": [
            [
                "1a48908e176139f7"
            ]
        ]
    },
    {
        "id": "63ec340b78cf1f8c",
        "type": "http in",
        "z": "2176de2541256f66",
        "name": "Sahel | Open in terminal",
        "url": "/q1y2y3b",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 540,
        "y": 380,
        "wires": [
            [
                "971e2cac79c26952"
            ]
        ]
    },
    {
        "id": "971e2cac79c26952",
        "type": "subflow:630454ba203bdeb2",
        "z": "2176de2541256f66",
        "name": "",
        "x": 860,
        "y": 380,
        "wires": [
            [
                "5f948da9f845430d"
            ]
        ]
    },
    {
        "id": "2fd90f3e7509359d",
        "type": "link out",
        "z": "2176de2541256f66",
        "g": "603bf4443a81ff24",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "031f09063010100f"
        ],
        "x": 985,
        "y": 180,
        "wires": []
    },
    {
        "id": "7eb352d0328b58dd",
        "type": "link out",
        "z": "2176de2541256f66",
        "g": "6108603af74c62f3",
        "name": "link out 33",
        "mode": "link",
        "links": [
            "a92ab81a62359409"
        ],
        "x": 985,
        "y": 280,
        "wires": []
    },
    {
        "id": "5f948da9f845430d",
        "type": "link out",
        "z": "2176de2541256f66",
        "g": "e12351763e7ef371",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "20d381d69cc239ca"
        ],
        "x": 985,
        "y": 380,
        "wires": []
    },
    {
        "id": "255a6b69cdfc6f09",
        "type": "subflow:e71dd36fbebd831d",
        "z": "2176de2541256f66",
        "g": "417eda36baaf2ea8",
        "name": "\"Sahel | Open in | Rider\"",
        "env": [
            {
                "name": "mcqTitle",
                "value": "\"Open in what tool?\"",
                "type": "str"
            }
        ],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "9d831aa4c889ed2f"
            ]
        ]
    },
    {
        "id": "d4105502d1c313f6",
        "type": "subflow:e71dd36fbebd831d",
        "z": "2176de2541256f66",
        "g": "417eda36baaf2ea8",
        "name": "\"Sahel | Open in | Terminal\"",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "b9ff21178bead7f4"
            ]
        ]
    },
    {
        "id": "9d831aa4c889ed2f",
        "type": "subflow:e71dd36fbebd831d",
        "z": "2176de2541256f66",
        "g": "417eda36baaf2ea8",
        "name": "\"Sahel | Open in | VSCode\"",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "d4105502d1c313f6"
            ]
        ]
    },
    {
        "id": "b9ff21178bead7f4",
        "type": "subflow:73f46db8070c553e",
        "z": "2176de2541256f66",
        "g": "417eda36baaf2ea8",
        "name": "👈",
        "x": 615,
        "y": 180,
        "wires": [
            [
                "2fd90f3e7509359d"
            ],
            [
                "2a999fd38511b423"
            ]
        ],
        "l": false
    },
    {
        "id": "2a999fd38511b423",
        "type": "subflow:73f46db8070c553e",
        "z": "2176de2541256f66",
        "g": "417eda36baaf2ea8",
        "name": "👈",
        "x": 615,
        "y": 240,
        "wires": [
            [
                "7eb352d0328b58dd"
            ],
            [
                "b242f5760fb66b36"
            ]
        ],
        "l": false
    },
    {
        "id": "b242f5760fb66b36",
        "type": "subflow:73f46db8070c553e",
        "z": "2176de2541256f66",
        "g": "417eda36baaf2ea8",
        "name": "👈",
        "x": 615,
        "y": 300,
        "wires": [
            [
                "971e2cac79c26952"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "ede6ada5afd94bf2",
        "type": "link in",
        "z": "2176de2541256f66",
        "name": "Open Sahel project",
        "links": [
            "7a31d4e211375c1a"
        ],
        "x": 235,
        "y": 80,
        "wires": [
            [
                "255a6b69cdfc6f09"
            ]
        ]
    },
    {
        "id": "283593d43e785d27",
        "type": "http in",
        "z": "d94f6d4812f18812",
        "name": "🪟 Zimbabwe | Terminal| Main Directory #folder",
        "url": "/y3t5y0l",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 450,
        "y": 380,
        "wires": [
            [
                "30d2999be4b02205"
            ]
        ]
    },
    {
        "id": "65bf457e7172eb2b",
        "type": "http in",
        "z": "d94f6d4812f18812",
        "name": "🪟 Zimbabwe | Terminal | Angular Directory #folder #frontend",
        "url": "/t18e6l",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 450,
        "y": 440,
        "wires": [
            [
                "e09c691c56556e0c"
            ]
        ]
    },
    {
        "id": "18a62abd1ccf681d",
        "type": "http in",
        "z": "d94f6d4812f18812",
        "name": "🪟 Zimbabwe | Terminal | .net Solution Directory #backend",
        "url": "/6q9s6s",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 520,
        "y": 500,
        "wires": [
            [
                "496b759e15f2a8df"
            ]
        ]
    },
    {
        "id": "30d2999be4b02205",
        "type": "subflow:630454ba203bdeb2",
        "z": "d94f6d4812f18812",
        "name": "",
        "x": 820,
        "y": 300,
        "wires": [
            [
                "4a3debe380f1b9c2"
            ]
        ]
    },
    {
        "id": "e09c691c56556e0c",
        "type": "subflow:630454ba203bdeb2",
        "z": "d94f6d4812f18812",
        "name": "",
        "x": 820,
        "y": 360,
        "wires": [
            [
                "f28bb15fd6b05b39"
            ]
        ]
    },
    {
        "id": "496b759e15f2a8df",
        "type": "subflow:630454ba203bdeb2",
        "z": "d94f6d4812f18812",
        "name": "",
        "x": 840,
        "y": 420,
        "wires": [
            [
                "d60c8c4021488964"
            ]
        ]
    },
    {
        "id": "4a3debe380f1b9c2",
        "type": "subflow:4178eda1bbbd7002",
        "z": "d94f6d4812f18812",
        "g": "89e6dca4d98d7877",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"dir\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/Sahel/\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1080,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "f28bb15fd6b05b39",
        "type": "subflow:4178eda1bbbd7002",
        "z": "d94f6d4812f18812",
        "g": "a92061a2b6cff654",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"dir\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/Sahel/Frontend/Sahel.Client\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1080,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "d60c8c4021488964",
        "type": "subflow:4178eda1bbbd7002",
        "z": "d94f6d4812f18812",
        "g": "5040635f30357d89",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"dir\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/Sahel/Backend/Sahel\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1080,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "fc27c7c2093ef823",
        "type": "subflow:e71dd36fbebd831d",
        "z": "d94f6d4812f18812",
        "g": "dabbbe29b1ca362a",
        "name": "\"Main Directory\"",
        "env": [
            {
                "name": "mcqTitle",
                "value": "\"What directory?\"",
                "type": "str"
            }
        ],
        "x": 470,
        "y": 100,
        "wires": [
            [
                "2e3cf2bb1bf52835"
            ]
        ]
    },
    {
        "id": "2e3cf2bb1bf52835",
        "type": "subflow:e71dd36fbebd831d",
        "z": "d94f6d4812f18812",
        "g": "dabbbe29b1ca362a",
        "name": "\"Angular Directory\"",
        "x": 480,
        "y": 160,
        "wires": [
            [
                "454a090134cebbf3"
            ]
        ]
    },
    {
        "id": "454a090134cebbf3",
        "type": "subflow:e71dd36fbebd831d",
        "z": "d94f6d4812f18812",
        "g": "dabbbe29b1ca362a",
        "name": "\"Backend Directory\"",
        "x": 490,
        "y": 220,
        "wires": [
            [
                "491b1ee2bb870d48"
            ]
        ]
    },
    {
        "id": "491b1ee2bb870d48",
        "type": "subflow:73f46db8070c553e",
        "z": "d94f6d4812f18812",
        "g": "dabbbe29b1ca362a",
        "name": "👈",
        "x": 680,
        "y": 100,
        "wires": [
            [
                "4a3debe380f1b9c2"
            ],
            [
                "7292cd9eae1d3d1b"
            ]
        ]
    },
    {
        "id": "28e6fc9326385097",
        "type": "subflow:73f46db8070c553e",
        "z": "d94f6d4812f18812",
        "g": "dabbbe29b1ca362a",
        "name": "👈",
        "x": 680,
        "y": 220,
        "wires": [
            [
                "d60c8c4021488964"
            ],
            []
        ]
    },
    {
        "id": "7292cd9eae1d3d1b",
        "type": "subflow:73f46db8070c553e",
        "z": "d94f6d4812f18812",
        "g": "dabbbe29b1ca362a",
        "name": "👈",
        "x": 680,
        "y": 160,
        "wires": [
            [
                "f28bb15fd6b05b39"
            ],
            [
                "28e6fc9326385097"
            ]
        ]
    },
    {
        "id": "20d381d69cc239ca",
        "type": "link in",
        "z": "d94f6d4812f18812",
        "name": "Sahel | Open in terminal",
        "links": [
            "5f948da9f845430d"
        ],
        "x": 265,
        "y": 140,
        "wires": [
            [
                "fc27c7c2093ef823"
            ]
        ]
    },
    {
        "id": "ccc22ff9a5668b2b",
        "type": "http in",
        "z": "d2cbc16db312fbed",
        "name": "",
        "url": "/mainFlow",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "fe4a3025b25f3f40"
            ]
        ]
    },
    {
        "id": "b696e3e8ab7f02f7",
        "type": "inject",
        "z": "d2cbc16db312fbed",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 450,
        "y": 60,
        "wires": [
            [
                "6fe07fb19f962a8b"
            ]
        ]
    },
    {
        "id": "fe4a3025b25f3f40",
        "type": "subflow:630454ba203bdeb2",
        "z": "d2cbc16db312fbed",
        "name": "",
        "env": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "6fe07fb19f962a8b"
            ]
        ]
    },
    {
        "id": "462f77be0946762f",
        "type": "link out",
        "z": "d2cbc16db312fbed",
        "g": "d1cb9ae10eaaf7a5",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "b76634d5bf534d02"
        ],
        "x": 675,
        "y": 120,
        "wires": []
    },
    {
        "id": "8cf15876ba5d8be7",
        "type": "inject",
        "z": "d2cbc16db312fbed",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 360,
        "wires": [
            [
                "43b39f55e5e65cc9"
            ]
        ]
    },
    {
        "id": "3582984a10c2c0e0",
        "type": "subflow:fd9310e15831f976",
        "z": "d2cbc16db312fbed",
        "name": "",
        "env": [
            {
                "name": "myEnvVar",
                "value": "`my new env var value`",
                "type": "str"
            }
        ],
        "x": 660,
        "y": 360,
        "wires": []
    },
    {
        "id": "43b39f55e5e65cc9",
        "type": "subflow:884f94515d431dae",
        "z": "d2cbc16db312fbed",
        "name": "",
        "env": [
            {
                "name": "shape",
                "value": "\"ring\"",
                "type": "str"
            },
            {
                "name": "text",
                "value": "\"test status\"",
                "type": "str"
            }
        ],
        "x": 460,
        "y": 360,
        "wires": [
            [
                "3582984a10c2c0e0"
            ]
        ]
    },
    {
        "id": "3521f71b18b24be5",
        "type": "http in",
        "z": "2a81a7a539926088",
        "name": "💼 Sahel...",
        "url": "/sahel2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 60,
        "wires": [
            [
                "18d0dc827c9a7e16"
            ]
        ],
        "info": "This is a description of the endpoint that should be picked up to search for execution"
    },
    {
        "id": "4eca86ceefc5f369",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "55ac162180440a1e",
        "name": "Create delta branch",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Create delta branch not implemented\"",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7ecc575c5114f21d",
        "type": "link in",
        "z": "2a81a7a539926088",
        "name": "Sahel",
        "links": [
            "4fa558a20c6022e9"
        ],
        "x": 205,
        "y": 120,
        "wires": [
            [
                "18d0dc827c9a7e16"
            ]
        ]
    },
    {
        "id": "18d0dc827c9a7e16",
        "type": "subflow:630454ba203bdeb2",
        "z": "2a81a7a539926088",
        "name": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "9b30128ef2891f92",
                "68817fc2ed3af3d3"
            ]
        ],
        "info": "{\r\n    \"test\": \"7alaweska\"\r\n}"
    },
    {
        "id": "9b30128ef2891f92",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "name": "\"Sahell\"",
        "x": 540,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f463a891cb7d283b",
        "type": "link out",
        "z": "2a81a7a539926088",
        "g": "bcc5de1d48871a1f",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "591ac78ef4c0a1e5"
        ],
        "x": 765,
        "y": 100,
        "wires": []
    },
    {
        "id": "91082c1033623590",
        "type": "http in",
        "z": "2a81a7a539926088",
        "g": "6735912a12f55886",
        "name": "🪟 Sahel | Open Pull Requests #PR #approve",
        "url": "/m4n6r1p",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1070,
        "y": 560,
        "wires": [
            [
                "1459b6c7ded0031c"
            ]
        ]
    },
    {
        "id": "1459b6c7ded0031c",
        "type": "subflow:630454ba203bdeb2",
        "z": "2a81a7a539926088",
        "g": "6735912a12f55886",
        "name": "",
        "x": 1070,
        "y": 620,
        "wires": [
            [
                "569a68849ae0c11d"
            ]
        ]
    },
    {
        "id": "569a68849ae0c11d",
        "type": "subflow:b23fac97ba53404f",
        "z": "2a81a7a539926088",
        "g": "6735912a12f55886",
        "name": "Sahel PRs",
        "env": [
            {
                "name": "url",
                "value": "\"https://dev.azure.com/SoftecMEA/Sahel/_git/Sahel/pullrequests?_a=mine\"",
                "type": "str"
            }
        ],
        "x": 1250,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "68817fc2ed3af3d3",
        "type": "subflow:e71dd36fbebd831d",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": "\"Manage configuration\"",
        "x": 330,
        "y": 240,
        "wires": [
            [
                "fda7dec0a17512c0"
            ]
        ]
    },
    {
        "id": "fda7dec0a17512c0",
        "type": "subflow:e71dd36fbebd831d",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": "\"Open project\"",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "ba2219a0539fa257"
            ]
        ]
    },
    {
        "id": "ba2219a0539fa257",
        "type": "subflow:e71dd36fbebd831d",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": "\"Create delta branch\"",
        "x": 320,
        "y": 360,
        "wires": [
            [
                "65e83db1ae5b5c0f"
            ]
        ]
    },
    {
        "id": "65e83db1ae5b5c0f",
        "type": "subflow:e71dd36fbebd831d",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": "\"Sahell Task Board\"",
        "x": 310,
        "y": 420,
        "wires": [
            [
                "72e8a076d1035a26"
            ]
        ]
    },
    {
        "id": "c63727c75b268da5",
        "type": "subflow:73f46db8070c553e",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": ".",
        "x": 570,
        "y": 240,
        "wires": [
            [
                "f463a891cb7d283b"
            ],
            [
                "0953895a2d32c906"
            ]
        ]
    },
    {
        "id": "0953895a2d32c906",
        "type": "subflow:73f46db8070c553e",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": ".",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "7a31d4e211375c1a"
            ],
            [
                "f14f2416d77dda69"
            ]
        ]
    },
    {
        "id": "f14f2416d77dda69",
        "type": "subflow:73f46db8070c553e",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": ".",
        "x": 570,
        "y": 360,
        "wires": [
            [
                "4eca86ceefc5f369"
            ],
            [
                "cd5f948a47cb342e"
            ]
        ]
    },
    {
        "id": "cd5f948a47cb342e",
        "type": "subflow:73f46db8070c553e",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": ".",
        "x": 570,
        "y": 420,
        "wires": [
            [
                "14d0599e4ab61f28"
            ],
            [
                "cf385aacf7cafa0f"
            ]
        ]
    },
    {
        "id": "7a31d4e211375c1a",
        "type": "link out",
        "z": "2a81a7a539926088",
        "g": "cfd3d67ddd269f99",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "ede6ada5afd94bf2"
        ],
        "x": 775,
        "y": 200,
        "wires": []
    },
    {
        "id": "72e8a076d1035a26",
        "type": "subflow:e71dd36fbebd831d",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": "\"Sahell Pull Requests #PR\"",
        "x": 340,
        "y": 480,
        "wires": [
            [
                "b6a04f43456aec1d"
            ]
        ]
    },
    {
        "id": "cf385aacf7cafa0f",
        "type": "subflow:73f46db8070c553e",
        "z": "2a81a7a539926088",
        "name": ".",
        "x": 570,
        "y": 480,
        "wires": [
            [
                "1459b6c7ded0031c"
            ],
            [
                "08215e49ccaa3736"
            ]
        ]
    },
    {
        "id": "193a4d7acbb848db",
        "type": "subflow:b23fac97ba53404f",
        "z": "2a81a7a539926088",
        "g": "7cff182178556f7d",
        "name": "Sahel Task Board",
        "env": [
            {
                "name": "url",
                "value": "\"https://tfs.softecinternational.com/tfs/Softec-MEA/SoftecMEA-SAFe%20Projects/_queries/query/?tempQueryId=911adf14-7ede-4a15-aa14-ef1c0f3aa1c7\"",
                "type": "str"
            }
        ],
        "x": 1350,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "43135f3cf8ecde82",
        "type": "http in",
        "z": "2a81a7a539926088",
        "g": "7cff182178556f7d",
        "name": "🪟 Sahel | Task Board #PO #Tasks",
        "url": "/a1b5u3g",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 980,
        "y": 400,
        "wires": [
            [
                "14d0599e4ab61f28"
            ]
        ]
    },
    {
        "id": "14d0599e4ab61f28",
        "type": "subflow:630454ba203bdeb2",
        "z": "2a81a7a539926088",
        "g": "7cff182178556f7d",
        "name": "",
        "x": 1150,
        "y": 460,
        "wires": [
            [
                "193a4d7acbb848db"
            ]
        ]
    },
    {
        "id": "31bdad7a4f27d944",
        "type": "http in",
        "z": "2a81a7a539926088",
        "g": "875d0ab789465b80",
        "name": "🪟 Sahel | App | Development | Frontend URL",
        "url": "/f9w6k8s",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 670,
        "y": 720,
        "wires": [
            [
                "bf64d31b09f6864b"
            ]
        ]
    },
    {
        "id": "bf64d31b09f6864b",
        "type": "subflow:630454ba203bdeb2",
        "z": "2a81a7a539926088",
        "g": "875d0ab789465b80",
        "name": "",
        "x": 1010,
        "y": 720,
        "wires": [
            [
                "c8a7bebc8234909a"
            ]
        ]
    },
    {
        "id": "c8a7bebc8234909a",
        "type": "subflow:b23fac97ba53404f",
        "z": "2a81a7a539926088",
        "g": "875d0ab789465b80",
        "name": "Sahell App UI",
        "env": [
            {
                "name": "url",
                "value": "\"https://sahel-dev.20.233.204.79.sslip.io/\"",
                "type": "str"
            }
        ],
        "x": 1200,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "be4a8f8d94ff487b",
        "type": "http in",
        "z": "2a81a7a539926088",
        "g": "875d0ab789465b80",
        "name": "🪟 Sahel | App | Development | Backend URL",
        "url": "/d4b2q5n",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 670,
        "y": 800,
        "wires": [
            [
                "e88b5b622530cf9b"
            ]
        ]
    },
    {
        "id": "e88b5b622530cf9b",
        "type": "subflow:630454ba203bdeb2",
        "z": "2a81a7a539926088",
        "g": "875d0ab789465b80",
        "name": "",
        "x": 1010,
        "y": 800,
        "wires": [
            [
                "f7cdb8c23ae2dc47"
            ]
        ]
    },
    {
        "id": "f7cdb8c23ae2dc47",
        "type": "subflow:b23fac97ba53404f",
        "z": "2a81a7a539926088",
        "g": "875d0ab789465b80",
        "name": "Sahel App Backend",
        "env": [
            {
                "name": "url",
                "value": "\"https://api.sahel-dev.20.233.204.79.sslip.io/api/GovernmentAgency/GetAllGovernmentAgenciesWithServices?ln=ar-EG\"",
                "type": "str"
            }
        ],
        "x": 1210,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "6cea5c292c089317",
        "type": "http in",
        "z": "2a81a7a539926088",
        "g": "8f78465a582321b2",
        "name": "🪟 Sahel | Blob Storage #azure #files",
        "url": "/a7b4x8s",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 590,
        "y": 980,
        "wires": [
            [
                "c8d252ca7b491882"
            ]
        ]
    },
    {
        "id": "c8d252ca7b491882",
        "type": "subflow:630454ba203bdeb2",
        "z": "2a81a7a539926088",
        "g": "8f78465a582321b2",
        "name": "",
        "x": 890,
        "y": 980,
        "wires": [
            [
                "3afe7a2be828daf2"
            ]
        ]
    },
    {
        "id": "3afe7a2be828daf2",
        "type": "subflow:d147f856086021e2",
        "z": "2a81a7a539926088",
        "g": "8f78465a582321b2",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"StorageExplorer\"",
                "type": "str"
            }
        ],
        "x": 1060,
        "y": 980,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1b0fd493fe26e310",
        "type": "inject",
        "z": "2a81a7a539926088",
        "g": "8f78465a582321b2",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 690,
        "y": 920,
        "wires": [
            [
                "c8d252ca7b491882"
            ]
        ]
    },
    {
        "id": "b6a04f43456aec1d",
        "type": "subflow:e71dd36fbebd831d",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": "\"Logs\"",
        "x": 270,
        "y": 540,
        "wires": [
            [
                "c63727c75b268da5"
            ]
        ]
    },
    {
        "id": "08215e49ccaa3736",
        "type": "subflow:73f46db8070c553e",
        "z": "2a81a7a539926088",
        "g": "03ee6685d83631d4",
        "name": ".",
        "x": 570,
        "y": 540,
        "wires": [
            [
                "c5c1c695fb7ef761"
            ],
            []
        ]
    },
    {
        "id": "c5c1c695fb7ef761",
        "type": "link out",
        "z": "2a81a7a539926088",
        "g": "012b4d097ace46ff",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "df2ca27f3fb8a83c"
        ],
        "x": 745,
        "y": 600,
        "wires": []
    },
    {
        "id": "47c3e2a0106c1f74",
        "type": "http in",
        "z": "f47dd7b3b301c58e",
        "name": "Sahel | Logs ... #logging",
        "url": "/r2g7a7l",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 140,
        "wires": [
            [
                "97c3f2115349cb65"
            ]
        ]
    },
    {
        "id": "b5b3d5db0b3d4ad0",
        "type": "subflow:b23fac97ba53404f",
        "z": "f47dd7b3b301c58e",
        "g": "42ace5a90cc185bf",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://portal.azure.com/#@SoftecMEA.onmicrosoft.com/resource/subscriptions/1f01a312-a6f5-4161-993d-4ef40f8ca052/resourceGroups/RG_Saaed_DevOpsTest_Sahel_UAENorth/providers/microsoft.insights/components/aca-dev-env/logs\"",
                "type": "str"
            }
        ],
        "x": 1330,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "622a5005c2958ac2",
        "type": "subflow:b182be5bcebc47cd",
        "z": "f47dd7b3b301c58e",
        "g": "42ace5a90cc185bf",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.notion.so/Insights-Query-Sample-Sahel-Zimbabwe-21b6ea6ef60880b4a1a1eda501049fea?source=copy_link\"",
                "type": "str"
            }
        ],
        "x": 1330,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "bfc3b86d03a7de9b",
        "type": "subflow:552764fe6e0b1a84",
        "z": "f47dd7b3b301c58e",
        "g": "42ace5a90cc185bf",
        "name": "\"Find a sample query on the side view\"",
        "x": 1360,
        "y": 220,
        "wires": [
            [
                "1e5fbd6933c346b4"
            ]
        ]
    },
    {
        "id": "97c3f2115349cb65",
        "type": "subflow:630454ba203bdeb2",
        "z": "f47dd7b3b301c58e",
        "name": "",
        "x": 480,
        "y": 240,
        "wires": [
            [
                "513917cda321be05"
            ]
        ]
    },
    {
        "id": "a31715bf23200495",
        "type": "subflow:630454ba203bdeb2",
        "z": "f47dd7b3b301c58e",
        "g": "42ace5a90cc185bf",
        "name": "",
        "x": 1070,
        "y": 180,
        "wires": [
            [
                "4c887ea45460a3fa"
            ]
        ]
    },
    {
        "id": "ce2b59d242e66f02",
        "type": "inject",
        "z": "f47dd7b3b301c58e",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 790,
        "y": 60,
        "wires": [
            [
                "a31715bf23200495"
            ]
        ]
    },
    {
        "id": "1e5fbd6933c346b4",
        "type": "subflow:552764fe6e0b1a84",
        "z": "f47dd7b3b301c58e",
        "g": "42ace5a90cc185bf",
        "name": "\"And find the Insights page in the main browser\"",
        "x": 1670,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "513917cda321be05",
        "type": "subflow:e71dd36fbebd831d",
        "z": "f47dd7b3b301c58e",
        "g": "5bbf94b17767ea50",
        "name": "\"Insights\"",
        "x": 660,
        "y": 240,
        "wires": [
            [
                "fd2be9773716188a"
            ]
        ]
    },
    {
        "id": "e0f794f3b3838202",
        "type": "subflow:73f46db8070c553e",
        "z": "f47dd7b3b301c58e",
        "g": "5bbf94b17767ea50",
        "name": "",
        "x": 825,
        "y": 240,
        "wires": [
            [
                "a31715bf23200495"
            ],
            [
                "cd72c7feeea29ed8"
            ]
        ],
        "l": false
    },
    {
        "id": "fd2be9773716188a",
        "type": "subflow:e71dd36fbebd831d",
        "z": "f47dd7b3b301c58e",
        "g": "5bbf94b17767ea50",
        "name": "\"Blob storage\"",
        "x": 680,
        "y": 300,
        "wires": [
            [
                "fb8b2bd79c37fb62"
            ]
        ]
    },
    {
        "id": "fb8b2bd79c37fb62",
        "type": "subflow:e71dd36fbebd831d",
        "z": "f47dd7b3b301c58e",
        "g": "5bbf94b17767ea50",
        "name": "\"Database\"",
        "x": 670,
        "y": 360,
        "wires": [
            [
                "e0f794f3b3838202"
            ]
        ]
    },
    {
        "id": "a20788868d6171b2",
        "type": "subflow:73f46db8070c553e",
        "z": "f47dd7b3b301c58e",
        "g": "5bbf94b17767ea50",
        "name": "",
        "x": 825,
        "y": 360,
        "wires": [
            [
                "ded2b6b949a9d154"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "cd72c7feeea29ed8",
        "type": "subflow:73f46db8070c553e",
        "z": "f47dd7b3b301c58e",
        "g": "5bbf94b17767ea50",
        "name": "",
        "x": 825,
        "y": 300,
        "wires": [
            [
                "820d6d88af8d4846",
                "937a39e7d79e9b2b"
            ],
            [
                "a20788868d6171b2"
            ]
        ],
        "l": false
    },
    {
        "id": "df2ca27f3fb8a83c",
        "type": "link in",
        "z": "f47dd7b3b301c58e",
        "name": "Sahel | Logs",
        "links": [
            "c5c1c695fb7ef761"
        ],
        "x": 305,
        "y": 240,
        "wires": [
            [
                "97c3f2115349cb65"
            ]
        ]
    },
    {
        "id": "820d6d88af8d4846",
        "type": "subflow:d147f856086021e2",
        "z": "f47dd7b3b301c58e",
        "g": "1268fceffd8c3450",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"StorageExplorer\"",
                "type": "str"
            }
        ],
        "x": 1100,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "937a39e7d79e9b2b",
        "type": "subflow:552764fe6e0b1a84",
        "z": "f47dd7b3b301c58e",
        "g": "1268fceffd8c3450",
        "name": "\"Find log container on the storage explorer\"",
        "x": 1190,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ded2b6b949a9d154",
        "type": "subflow:552764fe6e0b1a84",
        "z": "f47dd7b3b301c58e",
        "g": "83bd0629823474c5",
        "name": "\"Find a table named as Audit something in the database\"",
        "x": 1210,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "80499d25a7f55572",
        "type": "inject",
        "z": "f47dd7b3b301c58e",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 380,
        "wires": [
            [
                "97c3f2115349cb65"
            ]
        ]
    },
    {
        "id": "2403a67454e8f82b",
        "type": "link in",
        "z": "b24567603cf835ad",
        "name": "Gotcha Project",
        "links": [
            "1f9abd20675c99df"
        ],
        "x": 165,
        "y": 40,
        "wires": [
            [
                "4602c80b271db6a8"
            ]
        ]
    },
    {
        "id": "55217ce81fd9672f",
        "type": "catch",
        "z": "b24567603cf835ad",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 540,
        "y": 60,
        "wires": [
            [
                "cf493a7919cfd261"
            ]
        ]
    },
    {
        "id": "cf493a7919cfd261",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Error encountered\"",
                "type": "str"
            }
        ],
        "x": 710,
        "y": 60,
        "wires": [
            [
                "5e2707c59a34725a"
            ]
        ]
    },
    {
        "id": "4602c80b271db6a8",
        "type": "subflow:630454ba203bdeb2",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "x": 270,
        "y": 240,
        "wires": [
            [
                "eda7de984f2e78fb",
                "aa3b1dddf9a4bfdf"
            ]
        ]
    },
    {
        "id": "004543fe8fe3119f",
        "type": "inject",
        "z": "b24567603cf835ad",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "4602c80b271db6a8"
            ]
        ]
    },
    {
        "id": "5e2707c59a34725a",
        "type": "function",
        "z": "b24567603cf835ad",
        "name": "re-throw",
        "func": "throw msg.error\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "863baa64dcc322dc",
        "type": "function",
        "z": "b24567603cf835ad",
        "g": "61cecc79ecae9c9c",
        "name": "set state",
        "func": "msg.state = {\n    workingDir: `%userprofile%/.node-red/`,\n    command: `code \"settings.js\"`\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 440,
        "wires": [
            [
                "28f8e6808b8b46af"
            ]
        ]
    },
    {
        "id": "28f8e6808b8b46af",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "61cecc79ecae9c9c",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 440,
        "wires": [
            [
                "32f901e6698ef452"
            ]
        ]
    },
    {
        "id": "32f901e6698ef452",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "61cecc79ecae9c9c",
        "name": "\"setting.js is being opened in vscode\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"setting.js is being opened in vscode\"",
                "type": "str"
            }
        ],
        "x": 1130,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "48286ea2d25319f7",
        "type": "function",
        "z": "b24567603cf835ad",
        "g": "9ada3be8aad7cf16",
        "name": "set state",
        "func": "msg.state = {\n  command: `Get-CimInstance Win32_Process -Filter \"name = 'node.exe'\" | Where-Object { $_.CommandLine -like '*node-red*' } | ForEach-Object { Stop-Process -Id $_.ProcessId -Force }; & \"C:/nvm4w/nodejs/node-red.ps1\"`\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 580,
        "wires": [
            [
                "1d5fadf241c29d25"
            ]
        ]
    },
    {
        "id": "c43686785b6d461b",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "9ada3be8aad7cf16",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"C:/\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1270,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "45336ffdcd3bce3e",
        "type": "link out",
        "z": "b24567603cf835ad",
        "g": "7b6831fed3eb3583",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "dad249fb2d2d0ea7"
        ],
        "x": 615,
        "y": 240,
        "wires": []
    },
    {
        "id": "eda7de984f2e78fb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "Gotcha",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Gotcha\"",
                "type": "str"
            }
        ],
        "x": 440,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b5bcf8847af43421",
        "type": "subflow:630454ba203bdeb2",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "48286ea2d25319f7"
            ]
        ]
    },
    {
        "id": "d945b0b1bb641dfb",
        "type": "http in",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "node-RED | Restart node-RED",
        "url": "/k4d0x9k",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "b5bcf8847af43421"
            ]
        ]
    },
    {
        "id": "a24cb47ed56cd8bf",
        "type": "function",
        "z": "b24567603cf835ad",
        "g": "a6c47b5321157876",
        "name": "set state",
        "func": "msg.state = {\n    workingDir: `D:/Projects/gwv.Gotcha/gwv.Gotcha.Wpf/bin/Debug/net8.0-windows`,\n    command: `code .`\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 700,
        "wires": [
            [
                "cb6a76507fee8038"
            ]
        ]
    },
    {
        "id": "cb6a76507fee8038",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "a6c47b5321157876",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 700,
        "wires": [
            [
                "44326c4edff9acbe"
            ]
        ]
    },
    {
        "id": "44326c4edff9acbe",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "a6c47b5321157876",
        "name": "\"bin directory is being opened in vscode\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"bin directory is being opened in vscode\"",
                "type": "str"
            }
        ],
        "x": 1140,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "88c0d2dc866aa53a",
        "type": "subflow:630454ba203bdeb2",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "x": 410,
        "y": 1020,
        "wires": [
            [
                "a24cb47ed56cd8bf"
            ]
        ]
    },
    {
        "id": "63595ab4bfa6cb80",
        "type": "http in",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "🪟 Open gotcha's bin directory in VSCode #deployment #output",
        "url": "/k2r6b8p",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 310,
        "y": 1080,
        "wires": [
            [
                "88c0d2dc866aa53a"
            ]
        ]
    },
    {
        "id": "954191b02b5de6c4",
        "type": "function",
        "z": "b24567603cf835ad",
        "g": "35797c5afd5e7dc8",
        "name": "set state",
        "func": "msg.state = {\n    workingDir: `D:/Projects/gwv.Gotcha/gwv.Gotcha.Wpf/bin/Debug/net8.0-windows/`,\n    command: `code ProcessName_ExePath_Mappings.json`\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 800,
        "wires": [
            [
                "a6fcf7c604a3e702"
            ]
        ]
    },
    {
        "id": "a6fcf7c604a3e702",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "35797c5afd5e7dc8",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 800,
        "wires": [
            [
                "40a1c6584d222e1e"
            ]
        ]
    },
    {
        "id": "40a1c6584d222e1e",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "35797c5afd5e7dc8",
        "name": "\"process - exe path mapping file is being opened in vscode\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"process - exe path mapping file is being opened in vscode\"",
                "type": "str"
            }
        ],
        "x": 1200,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "1b052980d0794cc6",
        "type": "subflow:630454ba203bdeb2",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "x": 410,
        "y": 1160,
        "wires": [
            [
                "954191b02b5de6c4"
            ]
        ]
    },
    {
        "id": "4bf2e6e29040cb97",
        "type": "http in",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "🪟 Open gotcha's process - exe mapping file in vscode",
        "url": "/h9e4v8a",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 1220,
        "wires": [
            [
                "1b052980d0794cc6"
            ]
        ]
    },
    {
        "id": "7f3176b47cbd8524",
        "type": "link out",
        "z": "b24567603cf835ad",
        "g": "5ced112bd56e0f89",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "bf5f0d0d57bf13b5"
        ],
        "x": 615,
        "y": 340,
        "wires": []
    },
    {
        "id": "febecfe9a1afdb60",
        "type": "http in",
        "z": "b24567603cf835ad",
        "name": "💼 Gotcha ...",
        "url": "/k1x5p0x",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "4602c80b271db6a8"
            ]
        ]
    },
    {
        "id": "aa3b1dddf9a4bfdf",
        "type": "subflow:e71dd36fbebd831d",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "'💼 node-RED ...'",
        "env": [
            {
                "name": "mcqTitle",
                "value": "\"Pick an action\"",
                "type": "str"
            }
        ],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "c8f94f7bbc7da551"
            ]
        ]
    },
    {
        "id": "c8f94f7bbc7da551",
        "type": "subflow:e71dd36fbebd831d",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "'Open Project'",
        "x": 160,
        "y": 400,
        "wires": [
            [
                "bf7846c7ea4880d3"
            ]
        ]
    },
    {
        "id": "bf7846c7ea4880d3",
        "type": "subflow:e71dd36fbebd831d",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "'Edit node-RED settings.js'",
        "x": 200,
        "y": 460,
        "wires": [
            [
                "e759445a64e94b88"
            ]
        ]
    },
    {
        "id": "e759445a64e94b88",
        "type": "subflow:e71dd36fbebd831d",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "'Restart Node-RED'",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "4f401ea22ab3b02d"
            ]
        ]
    },
    {
        "id": "5e6749c67fb01a30",
        "type": "subflow:73f46db8070c553e",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": ".",
        "x": 410,
        "y": 340,
        "wires": [
            [
                "45336ffdcd3bce3e"
            ],
            [
                "b5318eb192ca5318"
            ]
        ]
    },
    {
        "id": "b5318eb192ca5318",
        "type": "subflow:73f46db8070c553e",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": ".",
        "x": 410,
        "y": 400,
        "wires": [
            [
                "7f3176b47cbd8524"
            ],
            [
                "ddf658274125e101"
            ]
        ]
    },
    {
        "id": "ddf658274125e101",
        "type": "subflow:73f46db8070c553e",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": ".",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "863baa64dcc322dc"
            ],
            [
                "c40c6bcdbf1fe7f0"
            ]
        ]
    },
    {
        "id": "c40c6bcdbf1fe7f0",
        "type": "subflow:73f46db8070c553e",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": ".",
        "x": 410,
        "y": 520,
        "wires": [
            [
                "48286ea2d25319f7"
            ],
            [
                "f687369e3b21cbca"
            ]
        ]
    },
    {
        "id": "4f401ea22ab3b02d",
        "type": "subflow:e71dd36fbebd831d",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "'Open bin folder'",
        "x": 160,
        "y": 580,
        "wires": [
            [
                "5e6749c67fb01a30"
            ]
        ]
    },
    {
        "id": "f687369e3b21cbca",
        "type": "subflow:73f46db8070c553e",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": ".",
        "x": 410,
        "y": 580,
        "wires": [
            [
                "954191b02b5de6c4"
            ],
            []
        ]
    },
    {
        "id": "1d5fadf241c29d25",
        "type": "subflow:7dd6aa47fd337fda",
        "z": "b24567603cf835ad",
        "g": "9ada3be8aad7cf16",
        "name": "",
        "x": 830,
        "y": 580,
        "wires": [
            [
                "703b8531de745d1f"
            ],
            [
                "06e880163c677239"
            ]
        ]
    },
    {
        "id": "703b8531de745d1f",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "9ada3be8aad7cf16",
        "name": "\"Declined\"",
        "x": 1010,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "06e880163c677239",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "9ada3be8aad7cf16",
        "name": "\"Restarting node-RED\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Restarting node-RED\"",
                "type": "str"
            }
        ],
        "x": 1040,
        "y": 600,
        "wires": [
            [
                "c43686785b6d461b"
            ]
        ]
    },
    {
        "id": "619164876d37570b",
        "type": "inject",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 820,
        "wires": [
            [
                "b5bcf8847af43421"
            ]
        ]
    },
    {
        "id": "bf5f0d0d57bf13b5",
        "type": "link in",
        "z": "ce03002a29422c45",
        "name": "Open Gotcha",
        "links": [
            "7f3176b47cbd8524"
        ],
        "x": 195,
        "y": 100,
        "wires": [
            [
                "d089aba26f52fe05"
            ]
        ]
    },
    {
        "id": "fd68541f51a143eb",
        "type": "subflow:630454ba203bdeb2",
        "z": "ce03002a29422c45",
        "name": "",
        "x": 570,
        "y": 320,
        "wires": [
            [
                "34cc94d8b1496bc7"
            ]
        ]
    },
    {
        "id": "59715c71536c91e0",
        "type": "http in",
        "z": "ce03002a29422c45",
        "name": "⌨️ Open Gotcha in terminal #cmd #powershell",
        "url": "/a6v7x1b",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 320,
        "wires": [
            [
                "fd68541f51a143eb"
            ]
        ]
    },
    {
        "id": "5ef0c4a7546a1a4b",
        "type": "subflow:630454ba203bdeb2",
        "z": "ce03002a29422c45",
        "name": "",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "2006cfd9266403ef"
            ]
        ]
    },
    {
        "id": "365f479a73dc4149",
        "type": "http in",
        "z": "ce03002a29422c45",
        "name": "🪟  Open Gotcha in Rider",
        "url": "/c2k8o4n",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 310,
        "y": 220,
        "wires": [
            [
                "5ef0c4a7546a1a4b"
            ]
        ]
    },
    {
        "id": "0eafb691fb89ff3d",
        "type": "subflow:630454ba203bdeb2",
        "z": "ce03002a29422c45",
        "name": "",
        "x": 570,
        "y": 440,
        "wires": [
            [
                "7bb7e7163f7efbf9"
            ]
        ]
    },
    {
        "id": "906c69d4c17f289e",
        "type": "http in",
        "z": "ce03002a29422c45",
        "name": "🪟  Open Gotcha in VSCode #git #graph",
        "url": "/s61w3c",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 440,
        "wires": [
            [
                "0eafb691fb89ff3d"
            ]
        ]
    },
    {
        "id": "7bb7e7163f7efbf9",
        "type": "subflow:4178eda1bbbd7002",
        "z": "ce03002a29422c45",
        "g": "70b710fc662c021c",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"code .\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/gwv.Gotcha\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 320,
        "wires": [
            [
                "44c47461c9fe25d7"
            ]
        ]
    },
    {
        "id": "44c47461c9fe25d7",
        "type": "subflow:552764fe6e0b1a84",
        "z": "ce03002a29422c45",
        "g": "70b710fc662c021c",
        "name": "\"VSCode window is being activated\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"VSCode window is being activated\"",
                "type": "str"
            }
        ],
        "x": 990,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d089aba26f52fe05",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "ce03002a29422c45",
        "g": "8afb8df0eeea8641",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Open in ...?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['Rider', 'Terminal', \"VSCode\"]",
                "type": "str"
            }
        ],
        "x": 390,
        "y": 100,
        "wires": [
            [],
            [],
            [
                "ae8f25dcbf57990e"
            ]
        ]
    },
    {
        "id": "ae8f25dcbf57990e",
        "type": "switch",
        "z": "ce03002a29422c45",
        "g": "8afb8df0eeea8641",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 540,
        "y": 100,
        "wires": [
            [
                "2006cfd9266403ef"
            ],
            [
                "34cc94d8b1496bc7"
            ],
            [
                "7bb7e7163f7efbf9"
            ]
        ]
    },
    {
        "id": "34cc94d8b1496bc7",
        "type": "subflow:4178eda1bbbd7002",
        "z": "ce03002a29422c45",
        "g": "cad789a1334eb0a1",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"dir\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/gwv.Gotcha\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 160,
        "wires": [
            [
                "4a12457e360b25fd"
            ]
        ]
    },
    {
        "id": "4a12457e360b25fd",
        "type": "subflow:552764fe6e0b1a84",
        "z": "ce03002a29422c45",
        "g": "cad789a1334eb0a1",
        "name": "\"Open in terminal\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Open in terminal\"",
                "type": "str"
            }
        ],
        "x": 930,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "5c48bc25721f3efb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "ce03002a29422c45",
        "g": "9e49a1ff1ff51f65",
        "name": "\"Find in rider's active window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Find in rider's active window\"",
                "type": "str"
            }
        ],
        "x": 1110,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "2006cfd9266403ef",
        "type": "subflow:d147f856086021e2",
        "z": "ce03002a29422c45",
        "g": "9e49a1ff1ff51f65",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"rider64\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/gwv.Gotcha/gwv.Gotcha.sln\"",
                "type": "str"
            }
        ],
        "x": 860,
        "y": 60,
        "wires": [
            [],
            [
                "5c48bc25721f3efb"
            ]
        ]
    },
    {
        "id": "1696b17680f8224a",
        "type": "link in",
        "z": "9f851333696e4da5",
        "name": "Run instant NodeJS test",
        "links": [
            "937ddc8d124bbfbc"
        ],
        "x": 185,
        "y": 100,
        "wires": [
            [
                "1ea3a6fa11b88069"
            ]
        ]
    },
    {
        "id": "5f495ffd68a2c043",
        "type": "function",
        "z": "9f851333696e4da5",
        "g": "8a90e1f4484ae776",
        "name": "ensure dir",
        "func": "try\n{\n    const path = 'D://Workshops/Instant-NodeJS-Tests';\n\n    if (!fs.existsSync(path)) {\n        fs.mkdirSync(path, { recursive: true }); // recursive ensures nested directories\n        node.warn(`Directory created: ${path}`);\n    } else {\n        node.warn(`Directory already exists: ${path}`);\n    }\n\n    msg.state = {\n        workingDir: 'D://Workshops/Instant-NodeJS-Tests',\n        command: 'code .'\n    }\n}\ncatch(e)\n{\n    node.error(e, msg);\n    node.status({fill:\"red\",shape:\"dot\",text:\"error\"});\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 960,
        "y": 140,
        "wires": [
            [
                "58e42705b26499db",
                "c67f8ff8353a26ce"
            ]
        ]
    },
    {
        "id": "1ea3a6fa11b88069",
        "type": "subflow:630454ba203bdeb2",
        "z": "9f851333696e4da5",
        "name": "",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "4146813cd90c1922"
            ]
        ]
    },
    {
        "id": "4146813cd90c1922",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "9f851333696e4da5",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "'Workshop Category?'",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['Testing NodeJS on the fly script']",
                "type": "str"
            }
        ],
        "x": 470,
        "y": 100,
        "wires": [
            [],
            [],
            [
                "16f53d476dac380c"
            ]
        ]
    },
    {
        "id": "16f53d476dac380c",
        "type": "switch",
        "z": "9f851333696e4da5",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 100,
        "wires": [
            [
                "cf9fcc9ad77ffa83"
            ]
        ]
    },
    {
        "id": "58e42705b26499db",
        "type": "subflow:552764fe6e0b1a84",
        "z": "9f851333696e4da5",
        "g": "8a90e1f4484ae776",
        "name": "\"Expect a VSCode window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Expect a VSCode window\"",
                "type": "str"
            }
        ],
        "x": 1160,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "fd8bccefe68cbca4",
        "type": "http in",
        "z": "9f851333696e4da5",
        "name": "Workshops >> Test on the fly JavaScript through NodeJS",
        "url": "/g7p6r6h",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 380,
        "y": 240,
        "wires": [
            [
                "cf9fcc9ad77ffa83"
            ]
        ]
    },
    {
        "id": "c67f8ff8353a26ce",
        "type": "subflow:d147f856086021e2",
        "z": "9f851333696e4da5",
        "g": "8a90e1f4484ae776",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"code\"",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "msg.state.workingDir",
                "type": "str"
            }
        ],
        "x": 1120,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3b502478dadaa307",
        "type": "subflow:630454ba203bdeb2",
        "z": "9f851333696e4da5",
        "g": "8a90e1f4484ae776",
        "name": "",
        "x": 830,
        "y": 140,
        "wires": [
            [
                "5f495ffd68a2c043"
            ]
        ]
    },
    {
        "id": "89b80267a3e39d9d",
        "type": "inject",
        "z": "9f851333696e4da5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 450,
        "y": 360,
        "wires": [
            [
                "3b502478dadaa307"
            ]
        ]
    },
    {
        "id": "9b9294fa048cab58",
        "type": "subflow:630454ba203bdeb2",
        "z": "0c0d2ad2c595d8d7",
        "name": "",
        "x": 480,
        "y": 180,
        "wires": [
            [
                "fbdce406ac18928e"
            ]
        ]
    },
    {
        "id": "401247fa346deaa1",
        "type": "function",
        "z": "0c0d2ad2c595d8d7",
        "g": "d4851dcab8bfd682",
        "name": "parse returned payload",
        "func": "const payload = JSON.parse(msg.payload) \n\nnode.warn(payload.endpoints);\n\nmsg.state = {\n    ... msg.state,\n    endpoints: payload.endpoints,\n    options: payload.endpoints.map(e => e.nodeName)\n}\n\nnode.warn(msg.state);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            },
            {
                "var": "path",
                "module": "path"
            },
            {
                "var": "child_process",
                "module": "child_process"
            }
        ],
        "x": 890,
        "y": 160,
        "wires": [
            [
                "7b835e6d6886d73b"
            ]
        ]
    },
    {
        "id": "b93d785d22ab6d98",
        "type": "inject",
        "z": "0c0d2ad2c595d8d7",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 250,
        "y": 280,
        "wires": [
            [
                "9b9294fa048cab58"
            ]
        ]
    },
    {
        "id": "fbdce406ac18928e",
        "type": "http request",
        "z": "0c0d2ad2c595d8d7",
        "g": "d4851dcab8bfd682",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:5101/getNodeREDendpoints",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 670,
        "y": 160,
        "wires": [
            [
                "401247fa346deaa1"
            ]
        ]
    },
    {
        "id": "7b835e6d6886d73b",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "0c0d2ad2c595d8d7",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Type to search\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "msg.state.options",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 300,
        "wires": [
            [],
            [],
            [
                "3bd426f1ab46ccab"
            ]
        ]
    },
    {
        "id": "4a06e4fe196c8287",
        "type": "http request",
        "z": "0c0d2ad2c595d8d7",
        "g": "cb7d25359320703a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1250,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e99a53bc2e1a2ae2",
        "type": "function",
        "z": "0c0d2ad2c595d8d7",
        "g": "cb7d25359320703a",
        "name": "locate the end point",
        "func": "node.warn('^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^');\nconst endpoints = msg.state.endpoints;\nconst targetEndpoint = endpoints[msg.state.answer];\n\nnode.warn(`targetEndpoint = `);\nnode.warn(targetEndpoint);\n\nmsg.state = {\n    ... msg.state,\n    endpoint: targetEndpoint\n}\n\nnode.warn(`url = ${targetEndpoint.url}`);\nmsg.url = `http://127.0.0.1:7777` + targetEndpoint.url;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 400,
        "wires": [
            [
                "4a06e4fe196c8287"
            ]
        ]
    },
    {
        "id": "3bd426f1ab46ccab",
        "type": "switch",
        "z": "0c0d2ad2c595d8d7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "-2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 300,
        "wires": [
            [
                "59bb5282b55f75d3"
            ],
            [
                "e99a53bc2e1a2ae2"
            ]
        ]
    },
    {
        "id": "59bb5282b55f75d3",
        "type": "subflow:552764fe6e0b1a84",
        "z": "0c0d2ad2c595d8d7",
        "name": "\"Inapplicable\"",
        "x": 1000,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "b76634d5bf534d02",
        "type": "link in",
        "z": "0c0d2ad2c595d8d7",
        "name": "Search your flows",
        "links": [
            "462f77be0946762f"
        ],
        "x": 225,
        "y": 180,
        "wires": [
            [
                "9b9294fa048cab58"
            ]
        ]
    },
    {
        "id": "9de929cb21c72086",
        "type": "link out",
        "z": "83fa5debc97eaecb",
        "g": "0939cfee324d32b3",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "1e809f46f2ce0654"
        ],
        "x": 935,
        "y": 100,
        "wires": []
    },
    {
        "id": "4dfa4a66c194ba2d",
        "type": "link out",
        "z": "83fa5debc97eaecb",
        "g": "876c6331f050aedc",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "0f7a225421a45fe6"
        ],
        "x": 925,
        "y": 220,
        "wires": []
    },
    {
        "id": "087095ed63574368",
        "type": "subflow:630454ba203bdeb2",
        "z": "83fa5debc97eaecb",
        "name": "",
        "x": 270,
        "y": 140,
        "wires": [
            [
                "12076e6a18f49531"
            ]
        ],
        "info": "{\r\n    \"sahel\": {\r\n        \r\n    }\r\n\r\n}"
    },
    {
        "id": "937ddc8d124bbfbc",
        "type": "link out",
        "z": "83fa5debc97eaecb",
        "g": "d7a707b03476512d",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "1696b17680f8224a"
        ],
        "x": 925,
        "y": 320,
        "wires": []
    },
    {
        "id": "ecc5a3e556a1c04e",
        "type": "http in",
        "z": "83fa5debc97eaecb",
        "name": ">>>",
        "url": "/d9u2r4t",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "087095ed63574368"
            ]
        ]
    },
    {
        "id": "8d168a45978a628d",
        "type": "link out",
        "z": "83fa5debc97eaecb",
        "g": "d5b871b6c3d10e5f",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "9c77e9d9ce631aa0"
        ],
        "x": 915,
        "y": 440,
        "wires": []
    },
    {
        "id": "0de2c7df28684cef",
        "type": "subflow:630454ba203bdeb2",
        "z": "83fa5debc97eaecb",
        "g": "f98f378474b75e8b",
        "name": "",
        "x": 1170,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "25940f2e78833f44",
        "type": "subflow:552764fe6e0b1a84",
        "z": "83fa5debc97eaecb",
        "g": "f98f378474b75e8b",
        "name": "\"Wrong exec path\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Wrong exec path\"",
                "type": "str"
            }
        ],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "0de2c7df28684cef"
            ]
        ]
    },
    {
        "id": "75e32a816d908593",
        "type": "inject",
        "z": "83fa5debc97eaecb",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 200,
        "wires": [
            [
                "12076e6a18f49531"
            ]
        ]
    },
    {
        "id": "12076e6a18f49531",
        "type": "subflow:e71dd36fbebd831d",
        "z": "83fa5debc97eaecb",
        "g": "409ac5c02d775892",
        "name": "\"Projects\"",
        "x": 500,
        "y": 100,
        "wires": [
            [
                "318a7583b2a399af"
            ]
        ]
    },
    {
        "id": "44eb5ef56980b7d9",
        "type": "subflow:73f46db8070c553e",
        "z": "83fa5debc97eaecb",
        "g": "409ac5c02d775892",
        "name": "",
        "x": 750,
        "y": 100,
        "wires": [
            [
                "9de929cb21c72086"
            ],
            [
                "1a9e166baf6f4fee"
            ]
        ]
    },
    {
        "id": "318a7583b2a399af",
        "type": "subflow:e71dd36fbebd831d",
        "z": "83fa5debc97eaecb",
        "g": "409ac5c02d775892",
        "name": "\"Workspace\"",
        "x": 510,
        "y": 180,
        "wires": [
            [
                "fcbd5d99984d0289"
            ]
        ]
    },
    {
        "id": "1a9e166baf6f4fee",
        "type": "subflow:73f46db8070c553e",
        "z": "83fa5debc97eaecb",
        "g": "409ac5c02d775892",
        "name": "",
        "x": 750,
        "y": 180,
        "wires": [
            [
                "4dfa4a66c194ba2d"
            ],
            [
                "c5c2c59bc8600cc8"
            ]
        ]
    },
    {
        "id": "fcbd5d99984d0289",
        "type": "subflow:e71dd36fbebd831d",
        "z": "83fa5debc97eaecb",
        "g": "409ac5c02d775892",
        "name": "\"Workshops\"",
        "x": 500,
        "y": 260,
        "wires": [
            [
                "29b3047e9d6b362b"
            ]
        ]
    },
    {
        "id": "c5c2c59bc8600cc8",
        "type": "subflow:73f46db8070c553e",
        "z": "83fa5debc97eaecb",
        "g": "409ac5c02d775892",
        "name": "",
        "x": 750,
        "y": 260,
        "wires": [
            [
                "937ddc8d124bbfbc"
            ],
            [
                "cd07b7555b35bff8"
            ]
        ]
    },
    {
        "id": "29b3047e9d6b362b",
        "type": "subflow:e71dd36fbebd831d",
        "z": "83fa5debc97eaecb",
        "g": "409ac5c02d775892",
        "name": "\"Launching Utilties\"",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "44eb5ef56980b7d9"
            ]
        ]
    },
    {
        "id": "cd07b7555b35bff8",
        "type": "subflow:73f46db8070c553e",
        "z": "83fa5debc97eaecb",
        "g": "409ac5c02d775892",
        "name": "",
        "x": 750,
        "y": 340,
        "wires": [
            [
                "8d168a45978a628d"
            ],
            [
                "25940f2e78833f44"
            ]
        ]
    },
    {
        "id": "1e809f46f2ce0654",
        "type": "link in",
        "z": "88bd534164ebf0ab",
        "name": "Projects",
        "links": [
            "9de929cb21c72086"
        ],
        "x": 215,
        "y": 140,
        "wires": [
            [
                "fc97755ea46a6439"
            ]
        ]
    },
    {
        "id": "0e8c3376ab20800e",
        "type": "switch",
        "z": "88bd534164ebf0ab",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 670,
        "y": 280,
        "wires": [
            [
                "4fa558a20c6022e9"
            ],
            [
                "b04f7c947ff65bf9"
            ],
            [
                "1f9abd20675c99df"
            ],
            [
                "25f6bee36d2516b0"
            ],
            [
                "2dc8b852015fa8a2"
            ]
        ]
    },
    {
        "id": "b4395c836a8a31d4",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "88bd534164ebf0ab",
        "g": "c6d416c97692b61f",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"What project?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Sahell\",\"Zimbabwe\", \"Gotcha\", \"node-RED\", \"Legacy AutoHotKey #AHK\"]",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 140,
        "wires": [
            [
                "57afd1505bc639d5"
            ],
            [
                "bbd69d6566786bd9"
            ],
            [
                "0e8c3376ab20800e"
            ]
        ]
    },
    {
        "id": "bbd69d6566786bd9",
        "type": "subflow:552764fe6e0b1a84",
        "z": "88bd534164ebf0ab",
        "g": "c6d416c97692b61f",
        "name": "\"Cancelled\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Cancelled\"",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "57afd1505bc639d5",
        "type": "subflow:552764fe6e0b1a84",
        "z": "88bd534164ebf0ab",
        "g": "c6d416c97692b61f",
        "name": "\"Failed to pick a project\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Failed to pick a project\"",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 80,
        "wires": [
            [
                "d03829623a2a7f73"
            ]
        ]
    },
    {
        "id": "d03829623a2a7f73",
        "type": "function",
        "z": "88bd534164ebf0ab",
        "g": "c6d416c97692b61f",
        "name": "set node.error",
        "func": "node.error(msg.error)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "1f9abd20675c99df",
        "type": "link out",
        "z": "88bd534164ebf0ab",
        "g": "be9b248c55b68f73",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "2403a67454e8f82b"
        ],
        "x": 905,
        "y": 460,
        "wires": []
    },
    {
        "id": "4fa558a20c6022e9",
        "type": "link out",
        "z": "88bd534164ebf0ab",
        "g": "eebee2a51eea17fe",
        "name": "Sahel",
        "mode": "link",
        "links": [
            "7ecc575c5114f21d"
        ],
        "x": 905,
        "y": 260,
        "wires": []
    },
    {
        "id": "25f6bee36d2516b0",
        "type": "link out",
        "z": "88bd534164ebf0ab",
        "g": "cc542cb9a782beb0",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "dad249fb2d2d0ea7"
        ],
        "x": 905,
        "y": 560,
        "wires": []
    },
    {
        "id": "fc97755ea46a6439",
        "type": "subflow:630454ba203bdeb2",
        "z": "88bd534164ebf0ab",
        "name": "",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "b4395c836a8a31d4"
            ]
        ]
    },
    {
        "id": "b04f7c947ff65bf9",
        "type": "link out",
        "z": "88bd534164ebf0ab",
        "g": "d726de86ecd8c1a2",
        "name": "link out 13",
        "mode": "link",
        "links": [],
        "x": 905,
        "y": 360,
        "wires": []
    },
    {
        "id": "3e6929db33d2574c",
        "type": "subflow:4178eda1bbbd7002",
        "z": "88bd534164ebf0ab",
        "name": "Open AutoHotKey in VSCode",
        "env": [
            {
                "name": "command",
                "value": "\"code .\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"%onedrive%/_Explicit_/Automation/AutoHotkey\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 980,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "2dc8b852015fa8a2",
        "type": "subflow:d147f856086021e2",
        "z": "88bd534164ebf0ab",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"code\"",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "\"%onedrive%/_Explicit_/Automation/AutoHotkey\"",
                "type": "str"
            }
        ],
        "x": 940,
        "y": 640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ad478984c972df7e",
        "type": "http in",
        "z": "88bd534164ebf0ab",
        "name": "Open AHK (Auto Hot Key) Project",
        "url": "/w9y9b7m",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 610,
        "y": 640,
        "wires": [
            [
                "2dc8b852015fa8a2"
            ]
        ]
    },
    {
        "id": "0f7a225421a45fe6",
        "type": "link in",
        "z": "231d43866ed2d184",
        "name": "Workspace",
        "links": [
            "4dfa4a66c194ba2d"
        ],
        "x": 265,
        "y": 80,
        "wires": [
            [
                "7d2cf3f56cf23923"
            ]
        ]
    },
    {
        "id": "7d2cf3f56cf23923",
        "type": "subflow:630454ba203bdeb2",
        "z": "231d43866ed2d184",
        "name": "",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "76a1b356ae257368"
            ]
        ]
    },
    {
        "id": "76a1b356ae257368",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "231d43866ed2d184",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Action?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Mange open window(s)\", \"Notion ...\"]",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 80,
        "wires": [
            [],
            [],
            [
                "5c02ee6ae42a28f0"
            ]
        ]
    },
    {
        "id": "5c02ee6ae42a28f0",
        "type": "switch",
        "z": "231d43866ed2d184",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 80,
        "wires": [
            [
                "e6d09a8a7f8e8bf3"
            ],
            [
                "119eb9845ad10e6f"
            ]
        ]
    },
    {
        "id": "119eb9845ad10e6f",
        "type": "link out",
        "z": "231d43866ed2d184",
        "g": "7fd3b69301a460a5",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "e685e4ed709b8faf"
        ],
        "x": 885,
        "y": 200,
        "wires": []
    },
    {
        "id": "e6d09a8a7f8e8bf3",
        "type": "link out",
        "z": "231d43866ed2d184",
        "g": "b2d82eb2553e598d",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "8bb3fa6d38e55690"
        ],
        "x": 885,
        "y": 80,
        "wires": []
    },
    {
        "id": "e685e4ed709b8faf",
        "type": "link in",
        "z": "9aba9cdb650afd6e",
        "name": "Notion ...",
        "links": [
            "119eb9845ad10e6f",
            "b4eed7337acd3d42"
        ],
        "x": 325,
        "y": 220,
        "wires": [
            [
                "ae8d95553d57d2a1"
            ]
        ]
    },
    {
        "id": "ae8d95553d57d2a1",
        "type": "subflow:630454ba203bdeb2",
        "z": "9aba9cdb650afd6e",
        "name": "",
        "x": 470,
        "y": 260,
        "wires": [
            [
                "ee8cd3bdb2f34f93"
            ]
        ]
    },
    {
        "id": "ee8cd3bdb2f34f93",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "9aba9cdb650afd6e",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Action?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"🌎 Check Notion's status\"]",
                "type": "str"
            }
        ],
        "x": 630,
        "y": 260,
        "wires": [
            [],
            [],
            [
                "0d330f947552afa5"
            ]
        ]
    },
    {
        "id": "0d330f947552afa5",
        "type": "switch",
        "z": "9aba9cdb650afd6e",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 260,
        "wires": [
            [
                "d5131b15b8cfe4cf"
            ]
        ]
    },
    {
        "id": "d5131b15b8cfe4cf",
        "type": "subflow:b23fac97ba53404f",
        "z": "9aba9cdb650afd6e",
        "name": "\"https://www.notion-status.com\"",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.notion-status.com\"",
                "type": "str"
            }
        ],
        "x": 1030,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "25e686425ad78212",
        "type": "http in",
        "z": "9aba9cdb650afd6e",
        "name": "Notion ...",
        "url": "/b5e5v5p",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "ae8d95553d57d2a1"
            ]
        ]
    },
    {
        "id": "5aac5d997bfcc1d0",
        "type": "http in",
        "z": "9aba9cdb650afd6e",
        "name": "🌎 Check Notion satus",
        "url": "/h7y2h7c",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 480,
        "y": 500,
        "wires": [
            [
                "b70601359b69e195"
            ]
        ]
    },
    {
        "id": "b70601359b69e195",
        "type": "subflow:630454ba203bdeb2",
        "z": "9aba9cdb650afd6e",
        "name": "",
        "x": 710,
        "y": 420,
        "wires": [
            [
                "d5131b15b8cfe4cf"
            ]
        ]
    },
    {
        "id": "738c349dd2c28553",
        "type": "inject",
        "z": "9aba9cdb650afd6e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 430,
        "y": 600,
        "wires": [
            [
                "322a383847cbaf41"
            ]
        ]
    },
    {
        "id": "322a383847cbaf41",
        "type": "subflow:b23fac97ba53404f",
        "z": "9aba9cdb650afd6e",
        "name": "\"Notion Test\"",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.notion.so/n8n-1e76ea6ef6088017b7c5e48b6af64d8d?source=copy_link\"",
                "type": "str"
            }
        ],
        "x": 630,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "a7493c7e93097a72",
        "type": "link in",
        "z": "25598a4d8875e5af",
        "name": "Zimbabwe | Docker ",
        "links": [],
        "x": 65,
        "y": 180,
        "wires": [
            [
                "fc17503bcf89127f"
            ]
        ]
    },
    {
        "id": "e1c813bd29241276",
        "type": "http in",
        "z": "25598a4d8875e5af",
        "name": "Zimbabwe | Build ng docker image",
        "url": "/h96t8x",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 500,
        "y": 360,
        "wires": [
            [
                "a467c26191b8752f"
            ]
        ]
    },
    {
        "id": "a467c26191b8752f",
        "type": "subflow:630454ba203bdeb2",
        "z": "25598a4d8875e5af",
        "name": "",
        "x": 850,
        "y": 80,
        "wires": [
            [
                "3737ef71ed64d0c7"
            ]
        ]
    },
    {
        "id": "d5d9e0a1c51f0551",
        "type": "subflow:630454ba203bdeb2",
        "z": "25598a4d8875e5af",
        "name": "",
        "x": 850,
        "y": 160,
        "wires": [
            [
                "4010994b2ad34181"
            ]
        ]
    },
    {
        "id": "689b439b59c86b30",
        "type": "http in",
        "z": "25598a4d8875e5af",
        "name": " Zimbabwe | Build complete frontend docker image",
        "url": "/x1i7o3b",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 390,
        "y": 420,
        "wires": [
            [
                "d5d9e0a1c51f0551"
            ]
        ]
    },
    {
        "id": "3a041d4e51e553fc",
        "type": "subflow:630454ba203bdeb2",
        "z": "25598a4d8875e5af",
        "name": "",
        "x": 850,
        "y": 240,
        "wires": [
            [
                "e4bd2c427b0c7c48"
            ]
        ]
    },
    {
        "id": "83b0d30585c0d1ed",
        "type": "http in",
        "z": "25598a4d8875e5af",
        "name": " Zimbabwe | Build backend docker image",
        "url": "/r3w7j4",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 480,
        "y": 480,
        "wires": [
            [
                "3a041d4e51e553fc"
            ]
        ]
    },
    {
        "id": "d0aebc0bb3266747",
        "type": "subflow:4178eda1bbbd7002",
        "z": "25598a4d8875e5af",
        "g": "115f32569b1d706c",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"docker build -f Dockerfile-angular -t zimbabwe-ng .\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/Zimbabwe-Digital\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1310,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c13e9c822b8a30ae",
        "type": "subflow:4178eda1bbbd7002",
        "z": "25598a4d8875e5af",
        "g": "432fd54cc1c0db52",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"docker build -f Dockerfile-frontend -t zimbabwe-front .\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/Zimbabwe-Digital\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1310,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "bf73e47f13a82591",
        "type": "subflow:4178eda1bbbd7002",
        "z": "25598a4d8875e5af",
        "g": "f3590c397e8552c3",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"docker build -f Dockerfile-backend -t zimbabwe-back .\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/Zimbabwe-Digital\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1310,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "fc17503bcf89127f",
        "type": "subflow:e71dd36fbebd831d",
        "z": "25598a4d8875e5af",
        "g": "19633795338299bb",
        "name": "\"Build ng docker image\"",
        "env": [
            {
                "name": "mcqTitle",
                "value": "\"What image?\"",
                "type": "str"
            }
        ],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "dc5e2f5eb3b08679"
            ]
        ]
    },
    {
        "id": "dc5e2f5eb3b08679",
        "type": "subflow:e71dd36fbebd831d",
        "z": "25598a4d8875e5af",
        "g": "19633795338299bb",
        "name": "\"Build complete frontend docker image\"",
        "x": 380,
        "y": 160,
        "wires": [
            [
                "c1da3903197fa0d3"
            ]
        ]
    },
    {
        "id": "c1da3903197fa0d3",
        "type": "subflow:e71dd36fbebd831d",
        "z": "25598a4d8875e5af",
        "g": "19633795338299bb",
        "name": "\"Build backend docker image\"",
        "x": 350,
        "y": 220,
        "wires": [
            [
                "113f0d4c97d13d5a"
            ]
        ]
    },
    {
        "id": "113f0d4c97d13d5a",
        "type": "subflow:73f46db8070c553e",
        "z": "25598a4d8875e5af",
        "g": "19633795338299bb",
        "name": "👈",
        "x": 615,
        "y": 100,
        "wires": [
            [
                "a467c26191b8752f"
            ],
            [
                "da0e5e72fb804590"
            ]
        ],
        "l": false
    },
    {
        "id": "da0e5e72fb804590",
        "type": "subflow:73f46db8070c553e",
        "z": "25598a4d8875e5af",
        "g": "19633795338299bb",
        "name": "👈",
        "x": 615,
        "y": 160,
        "wires": [
            [
                "d5d9e0a1c51f0551"
            ],
            [
                "8a242115f97dd6ea"
            ]
        ],
        "l": false
    },
    {
        "id": "8a242115f97dd6ea",
        "type": "subflow:73f46db8070c553e",
        "z": "25598a4d8875e5af",
        "g": "19633795338299bb",
        "name": "👈",
        "x": 615,
        "y": 220,
        "wires": [
            [
                "3a041d4e51e553fc"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "e4bd2c427b0c7c48",
        "type": "subflow:7dd6aa47fd337fda",
        "z": "25598a4d8875e5af",
        "name": "",
        "x": 1040,
        "y": 240,
        "wires": [
            [
                "374b256deb846d57"
            ],
            [
                "bf73e47f13a82591"
            ]
        ]
    },
    {
        "id": "4010994b2ad34181",
        "type": "subflow:7dd6aa47fd337fda",
        "z": "25598a4d8875e5af",
        "name": "",
        "x": 1040,
        "y": 160,
        "wires": [
            [
                "374b256deb846d57"
            ],
            [
                "c13e9c822b8a30ae"
            ]
        ]
    },
    {
        "id": "3737ef71ed64d0c7",
        "type": "subflow:7dd6aa47fd337fda",
        "z": "25598a4d8875e5af",
        "name": "",
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "374b256deb846d57"
            ],
            [
                "d0aebc0bb3266747"
            ]
        ]
    },
    {
        "id": "374b256deb846d57",
        "type": "subflow:552764fe6e0b1a84",
        "z": "25598a4d8875e5af",
        "name": "\"Declined\"",
        "x": 1270,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "9c77e9d9ce631aa0",
        "type": "link in",
        "z": "5cc51beeda65e265",
        "name": "Launching Utilities",
        "links": [
            "8d168a45978a628d"
        ],
        "x": 215,
        "y": 160,
        "wires": [
            [
                "715d5095ed7591e5"
            ]
        ]
    },
    {
        "id": "85304ba8a498dc8b",
        "type": "switch",
        "z": "5cc51beeda65e265",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 690,
        "y": 160,
        "wires": [
            [
                "277eec7a1ed436ba"
            ],
            [],
            [
                "af31c565bcf6ccd6"
            ],
            [
                "b4eed7337acd3d42"
            ],
            [
                "74d103f3e26e622a"
            ],
            [
                "481aa11b6b32eec7"
            ],
            [
                "fcb35326d578b371"
            ],
            [
                "648ce61f46c11f1a"
            ]
        ]
    },
    {
        "id": "597426ab61cda8b2",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "5cc51beeda65e265",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Utility?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"-> Is site down for me only or for everyone?\", \"TO_BE_REMOVED...\", \"Packages Repos...\", \"Notion...\", \"Open usual folder...\", \"🪟 Color picker\", \"🪟 JSON Viewer\", \"🪟 Regex Tester\"]",
                "type": "str"
            }
        ],
        "x": 500,
        "y": 160,
        "wires": [
            [],
            [],
            [
                "85304ba8a498dc8b"
            ]
        ]
    },
    {
        "id": "cfc88a5cd1ce0312",
        "type": "http in",
        "z": "5cc51beeda65e265",
        "g": "3a32e7f9469c4dde",
        "name": "Utilities | Is site down for me only or for everyone?",
        "url": "/y1p0k8",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1060,
        "y": 60,
        "wires": [
            [
                "277eec7a1ed436ba"
            ]
        ]
    },
    {
        "id": "715d5095ed7591e5",
        "type": "subflow:630454ba203bdeb2",
        "z": "5cc51beeda65e265",
        "name": "",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "597426ab61cda8b2"
            ]
        ]
    },
    {
        "id": "fa49ef80f4425688",
        "type": "http in",
        "z": "5cc51beeda65e265",
        "name": "Utility >>...",
        "url": "/f7y2a2m",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 300,
        "wires": [
            [
                "715d5095ed7591e5"
            ]
        ]
    },
    {
        "id": "af31c565bcf6ccd6",
        "type": "link out",
        "z": "5cc51beeda65e265",
        "g": "455587afd6b612e2",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "ee4d4dfb66289c43"
        ],
        "x": 1145,
        "y": 240,
        "wires": []
    },
    {
        "id": "b4eed7337acd3d42",
        "type": "link out",
        "z": "5cc51beeda65e265",
        "g": "5ec2d4ccd89cd551",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "e685e4ed709b8faf"
        ],
        "x": 925,
        "y": 480,
        "wires": []
    },
    {
        "id": "74d103f3e26e622a",
        "type": "link out",
        "z": "5cc51beeda65e265",
        "g": "1b2edbd82ca4f440",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "8352a8412c0a29df"
        ],
        "x": 905,
        "y": 600,
        "wires": []
    },
    {
        "id": "481aa11b6b32eec7",
        "type": "subflow:b182be5bcebc47cd",
        "z": "5cc51beeda65e265",
        "g": "7eb8336643d9ab88",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://hslpicker.com/#d07eff\"",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "59e56dcfc80d2dfc",
        "type": "http in",
        "z": "5cc51beeda65e265",
        "name": "🪟 Color picker",
        "url": "/o8w9m7r",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 700,
        "wires": [
            [
                "5e1a9021fc9b5a16"
            ]
        ]
    },
    {
        "id": "5e1a9021fc9b5a16",
        "type": "subflow:630454ba203bdeb2",
        "z": "5cc51beeda65e265",
        "name": "",
        "x": 540,
        "y": 700,
        "wires": [
            [
                "481aa11b6b32eec7"
            ]
        ]
    },
    {
        "id": "0cbed460263c974c",
        "type": "http in",
        "z": "5cc51beeda65e265",
        "name": "🪟 JSON viewer",
        "url": "/s0a8o7t",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 800,
        "wires": [
            [
                "53640c277cb212ab"
            ]
        ]
    },
    {
        "id": "53640c277cb212ab",
        "type": "subflow:630454ba203bdeb2",
        "z": "5cc51beeda65e265",
        "name": "",
        "x": 530,
        "y": 800,
        "wires": [
            [
                "fcb35326d578b371"
            ]
        ]
    },
    {
        "id": "fcb35326d578b371",
        "type": "subflow:b182be5bcebc47cd",
        "z": "5cc51beeda65e265",
        "g": "e20cc3f88b104a1a",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://jsoneditoronline.org\"",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "d5c56a2da8d9a01c",
        "type": "http in",
        "z": "5cc51beeda65e265",
        "name": "🪟 Regex Tester",
        "url": "/u8h6q7q",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 900,
        "wires": [
            [
                "82a83509fda4a21f"
            ]
        ]
    },
    {
        "id": "82a83509fda4a21f",
        "type": "subflow:630454ba203bdeb2",
        "z": "5cc51beeda65e265",
        "name": "",
        "x": 530,
        "y": 900,
        "wires": [
            [
                "648ce61f46c11f1a"
            ]
        ]
    },
    {
        "id": "648ce61f46c11f1a",
        "type": "subflow:b182be5bcebc47cd",
        "z": "5cc51beeda65e265",
        "g": "424de33a52df2a11",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://regex101.com\"",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "d0cb08cda45b532d",
        "type": "subflow:b182be5bcebc47cd",
        "z": "5cc51beeda65e265",
        "g": "3a32e7f9469c4dde",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://downforeveryoneorjustme.com\"",
                "type": "str"
            }
        ],
        "x": 1230,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a7f19f37dfd005e0",
        "type": "subflow:630454ba203bdeb2",
        "z": "5cc51beeda65e265",
        "g": "3a32e7f9469c4dde",
        "name": "",
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "d0cb08cda45b532d"
            ]
        ]
    },
    {
        "id": "40c690fd397c7655",
        "type": "inject",
        "z": "5cc51beeda65e265",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 710,
        "y": 740,
        "wires": [
            [
                "481aa11b6b32eec7"
            ]
        ]
    },
    {
        "id": "e788e70c56595918",
        "type": "subflow:b23fac97ba53404f",
        "z": "5cc51beeda65e265",
        "name": "Softec mail #work",
        "env": [
            {
                "name": "url",
                "value": "\"https://outlook.office.com/mail/\"",
                "type": "str"
            }
        ],
        "x": 900,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "d528ad4ae95962f6",
        "type": "http in",
        "z": "5cc51beeda65e265",
        "name": "Softec mail #work",
        "url": "/r0i5r9q",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 650,
        "y": 1000,
        "wires": [
            [
                "e788e70c56595918"
            ]
        ]
    },
    {
        "id": "896613157f0562c7",
        "type": "http in",
        "z": "5cc51beeda65e265",
        "name": "🪟 Open \"Downloads\" folder",
        "url": "/u3s54k",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 580,
        "y": 1100,
        "wires": [
            [
                "79bc93910e1d6e96"
            ]
        ]
    },
    {
        "id": "c53aa00b74890f52",
        "type": "subflow:d147f856086021e2",
        "z": "5cc51beeda65e265",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"explorer\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:\\\\Downloads\"",
                "type": "str"
            }
        ],
        "x": 1040,
        "y": 1100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1a1f704bb24935f5",
        "type": "inject",
        "z": "5cc51beeda65e265",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 670,
        "y": 1200,
        "wires": [
            [
                "c53aa00b74890f52"
            ]
        ]
    },
    {
        "id": "79bc93910e1d6e96",
        "type": "subflow:630454ba203bdeb2",
        "z": "5cc51beeda65e265",
        "name": "",
        "x": 820,
        "y": 1100,
        "wires": [
            [
                "c53aa00b74890f52"
            ]
        ]
    },
    {
        "id": "18ff581c632cc81f",
        "type": "link out",
        "z": "c0be0a5f88260291",
        "g": "c962766f793f04bc",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "beb14601a30a2b58"
        ],
        "x": 955,
        "y": 140,
        "wires": []
    },
    {
        "id": "4ed55830f384289f",
        "type": "link out",
        "z": "c0be0a5f88260291",
        "g": "d8eb441a94ee2554",
        "name": "link out 19",
        "mode": "link",
        "links": [
            "7146d66f826efff4"
        ],
        "x": 955,
        "y": 240,
        "wires": []
    },
    {
        "id": "71ef7b9c40f8c46a",
        "type": "link in",
        "z": "c0be0a5f88260291",
        "name": "Zimbabwe | Open in ...",
        "links": [
            "39b2df4a705cb558"
        ],
        "x": 155,
        "y": 60,
        "wires": [
            [
                "5ac7e9c1a097599c"
            ]
        ]
    },
    {
        "id": "5ac7e9c1a097599c",
        "type": "subflow:e71dd36fbebd831d",
        "z": "c0be0a5f88260291",
        "g": "d34ebf705e832f24",
        "name": "\"Zimbabwe | Open in | Rider\"",
        "env": [
            {
                "name": "mcqTitle",
                "value": "\"Open in what tool?\"",
                "type": "str"
            }
        ],
        "x": 360,
        "y": 140,
        "wires": [
            [
                "7140c1dc5189f5ee"
            ]
        ]
    },
    {
        "id": "3a3be07bc386a7f4",
        "type": "subflow:e71dd36fbebd831d",
        "z": "c0be0a5f88260291",
        "g": "d34ebf705e832f24",
        "name": "\"Zimbabwe | Open in | Terminal\"",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "984128c9dc6d5871"
            ]
        ]
    },
    {
        "id": "7140c1dc5189f5ee",
        "type": "subflow:e71dd36fbebd831d",
        "z": "c0be0a5f88260291",
        "g": "d34ebf705e832f24",
        "name": "\"Zimbabwe | Open in | VSCode\"",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "3a3be07bc386a7f4"
            ]
        ]
    },
    {
        "id": "984128c9dc6d5871",
        "type": "subflow:73f46db8070c553e",
        "z": "c0be0a5f88260291",
        "g": "d34ebf705e832f24",
        "name": "👈",
        "x": 620,
        "y": 140,
        "wires": [
            [
                "18ff581c632cc81f"
            ],
            [
                "bf0a19b5aa441f08"
            ]
        ]
    },
    {
        "id": "bf0a19b5aa441f08",
        "type": "subflow:73f46db8070c553e",
        "z": "c0be0a5f88260291",
        "g": "d34ebf705e832f24",
        "name": "👈",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "4ed55830f384289f"
            ],
            [
                "cc2bf5239ca8c5b4"
            ]
        ]
    },
    {
        "id": "cc2bf5239ca8c5b4",
        "type": "subflow:73f46db8070c553e",
        "z": "c0be0a5f88260291",
        "g": "d34ebf705e832f24",
        "name": "👈",
        "x": 630,
        "y": 260,
        "wires": [
            [
                "e2e8830c180ad54c"
            ],
            []
        ]
    },
    {
        "id": "781b91660bb7b847",
        "type": "http in",
        "z": "c0be0a5f88260291",
        "name": "Zimbabwe | Open in terminal",
        "url": "/q1y2y3b",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 400,
        "y": 400,
        "wires": [
            [
                "e2e8830c180ad54c"
            ]
        ]
    },
    {
        "id": "ccd34bf55c4727eb",
        "type": "link out",
        "z": "c0be0a5f88260291",
        "g": "4b01a5b50f84332a",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "37ca0e4b02dcc57f"
        ],
        "x": 955,
        "y": 340,
        "wires": []
    },
    {
        "id": "e2e8830c180ad54c",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0be0a5f88260291",
        "name": "",
        "x": 830,
        "y": 340,
        "wires": [
            [
                "ccd34bf55c4727eb"
            ]
        ]
    },
    {
        "id": "37ca0e4b02dcc57f",
        "type": "link in",
        "z": "8f747a3fa3549e13",
        "name": "Zimbabwe | Open in | Terminal",
        "links": [
            "ccd34bf55c4727eb"
        ],
        "x": 265,
        "y": 140,
        "wires": [
            [
                "5a251516040a1b33"
            ]
        ]
    },
    {
        "id": "5eff6c2ef6a1ffa6",
        "type": "subflow:4178eda1bbbd7002",
        "z": "8f747a3fa3549e13",
        "g": "f766bb86aa962f43",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"dir\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/Zimbabwe-Digital/\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1030,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c502c955db41e87a",
        "type": "subflow:4178eda1bbbd7002",
        "z": "8f747a3fa3549e13",
        "g": "9cfd6272492e2db7",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"dir\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/Zimbabwe-Digital/Frontend/Sahel.Client\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1030,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "256a070f21cb38fa",
        "type": "subflow:4178eda1bbbd7002",
        "z": "8f747a3fa3549e13",
        "g": "f4f60dc3bf36e265",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"dir\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/Zimbabwe-Digital/Backend/Sahel\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1030,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5a251516040a1b33",
        "type": "subflow:e71dd36fbebd831d",
        "z": "8f747a3fa3549e13",
        "g": "725abd4fdd084f60",
        "name": "\"Main Directory\"",
        "env": [
            {
                "name": "mcqTitle",
                "value": "\"What directory?\"",
                "type": "str"
            }
        ],
        "x": 420,
        "y": 80,
        "wires": [
            [
                "f7cbc9246a82bfd4"
            ]
        ]
    },
    {
        "id": "f7cbc9246a82bfd4",
        "type": "subflow:e71dd36fbebd831d",
        "z": "8f747a3fa3549e13",
        "g": "725abd4fdd084f60",
        "name": "\"Angular Directory\"",
        "x": 430,
        "y": 140,
        "wires": [
            [
                "7df1c39a6a1059d2"
            ]
        ]
    },
    {
        "id": "7df1c39a6a1059d2",
        "type": "subflow:e71dd36fbebd831d",
        "z": "8f747a3fa3549e13",
        "g": "725abd4fdd084f60",
        "name": "\"Backend Directory\"",
        "x": 440,
        "y": 200,
        "wires": [
            [
                "af1e01c2705ea9eb"
            ]
        ]
    },
    {
        "id": "af1e01c2705ea9eb",
        "type": "subflow:73f46db8070c553e",
        "z": "8f747a3fa3549e13",
        "g": "725abd4fdd084f60",
        "name": "👈",
        "x": 630,
        "y": 80,
        "wires": [
            [
                "5eff6c2ef6a1ffa6"
            ],
            [
                "84c3edd3c6ed13ec"
            ]
        ]
    },
    {
        "id": "dbc761f639a6d029",
        "type": "subflow:73f46db8070c553e",
        "z": "8f747a3fa3549e13",
        "g": "725abd4fdd084f60",
        "name": "👈",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "256a070f21cb38fa"
            ],
            []
        ]
    },
    {
        "id": "84c3edd3c6ed13ec",
        "type": "subflow:73f46db8070c553e",
        "z": "8f747a3fa3549e13",
        "g": "725abd4fdd084f60",
        "name": "👈",
        "x": 630,
        "y": 140,
        "wires": [
            [
                "c502c955db41e87a"
            ],
            [
                "dbc761f639a6d029"
            ]
        ]
    },
    {
        "id": "02c6e8ade8957a25",
        "type": "http in",
        "z": "8f747a3fa3549e13",
        "name": "🪟 Zimbabwe | Terminal| Main Directory #folder",
        "url": "/y3t5y0l",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "827816e82e914694"
            ]
        ]
    },
    {
        "id": "ddefb72ddd015263",
        "type": "http in",
        "z": "8f747a3fa3549e13",
        "name": "🪟 Zimbabwe | Terminal | Angular Directory #folder #frontend",
        "url": "/t18e6l",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 400,
        "y": 420,
        "wires": [
            [
                "6794e0725b264bb5"
            ]
        ]
    },
    {
        "id": "854b58cb17b3ddeb",
        "type": "http in",
        "z": "8f747a3fa3549e13",
        "name": "🪟 Zimbabwe | Terminal | .net Solution Directory #backend",
        "url": "/6q9s6s",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 470,
        "y": 480,
        "wires": [
            [
                "9a88f2a5b939b224"
            ]
        ]
    },
    {
        "id": "827816e82e914694",
        "type": "subflow:630454ba203bdeb2",
        "z": "8f747a3fa3549e13",
        "name": "",
        "x": 770,
        "y": 280,
        "wires": [
            [
                "5eff6c2ef6a1ffa6"
            ]
        ]
    },
    {
        "id": "6794e0725b264bb5",
        "type": "subflow:630454ba203bdeb2",
        "z": "8f747a3fa3549e13",
        "name": "",
        "x": 770,
        "y": 340,
        "wires": [
            [
                "c502c955db41e87a"
            ]
        ]
    },
    {
        "id": "9a88f2a5b939b224",
        "type": "subflow:630454ba203bdeb2",
        "z": "8f747a3fa3549e13",
        "name": "",
        "x": 790,
        "y": 400,
        "wires": [
            [
                "256a070f21cb38fa"
            ]
        ]
    },
    {
        "id": "ee4d4dfb66289c43",
        "type": "link in",
        "z": "c3da96311434c492",
        "name": "Packages Repos",
        "links": [
            "af31c565bcf6ccd6"
        ],
        "x": 385,
        "y": 180,
        "wires": [
            [
                "719e47b7c2373dd2"
            ]
        ]
    },
    {
        "id": "719e47b7c2373dd2",
        "type": "subflow:630454ba203bdeb2",
        "z": "c3da96311434c492",
        "name": "",
        "x": 730,
        "y": 180,
        "wires": [
            [
                "06b634fbbb8787d2"
            ]
        ]
    },
    {
        "id": "11b5a8a4f98815b4",
        "type": "http in",
        "z": "c3da96311434c492",
        "name": "Packages Repos  ...",
        "url": "/y5a6g4f",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 410,
        "y": 260,
        "wires": [
            [
                "719e47b7c2373dd2"
            ]
        ]
    },
    {
        "id": "06b634fbbb8787d2",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "c3da96311434c492",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"What Repo?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"🧰 npm #NodeJS #JavaScript\", \"📦 nuget #.net #dotnet\"]",
                "type": "str"
            }
        ],
        "x": 890,
        "y": 180,
        "wires": [
            [],
            [],
            [
                "9a0cbd4cd6bbf7e0"
            ]
        ]
    },
    {
        "id": "9a0cbd4cd6bbf7e0",
        "type": "switch",
        "z": "c3da96311434c492",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 180,
        "wires": [
            [
                "0003a0be19f999e6"
            ],
            [
                "85f37a9b0924da24"
            ]
        ]
    },
    {
        "id": "0003a0be19f999e6",
        "type": "subflow:b23fac97ba53404f",
        "z": "c3da96311434c492",
        "name": "npmJs",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.npmjs.com\"",
                "type": "str"
            }
        ],
        "x": 1310,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "85f37a9b0924da24",
        "type": "subflow:b23fac97ba53404f",
        "z": "c3da96311434c492",
        "name": "nuget.org",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.nuget.org\"",
                "type": "str"
            }
        ],
        "x": 1320,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b089f1bd790ec1e0",
        "type": "http in",
        "z": "c3da96311434c492",
        "name": ">_ 📦 Open nuget.org  packages repo",
        "url": "/q0u3x1f",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 790,
        "y": 540,
        "wires": [
            [
                "2b2677b12c9ba838"
            ]
        ]
    },
    {
        "id": "2b2677b12c9ba838",
        "type": "subflow:630454ba203bdeb2",
        "z": "c3da96311434c492",
        "name": "",
        "x": 1010,
        "y": 540,
        "wires": [
            [
                "85f37a9b0924da24"
            ]
        ]
    },
    {
        "id": "477d516cd94dae92",
        "type": "http in",
        "z": "c3da96311434c492",
        "name": ">_ 🧰 Open npmJS packages repo",
        "url": "/s0p6r0l",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 780,
        "y": 460,
        "wires": [
            [
                "ef871f33fbd315ed"
            ]
        ]
    },
    {
        "id": "ef871f33fbd315ed",
        "type": "subflow:630454ba203bdeb2",
        "z": "c3da96311434c492",
        "name": "",
        "x": 990,
        "y": 460,
        "wires": [
            [
                "0003a0be19f999e6"
            ]
        ]
    },
    {
        "id": "91b82fd2bad3dfeb",
        "type": "subflow:09818a42b905f599",
        "z": "c3da96311434c492",
        "name": "",
        "x": 890,
        "y": 700,
        "wires": [
            [
                "9610b523c23e11fd"
            ]
        ]
    },
    {
        "id": "7553dc3c4b83ae35",
        "type": "inject",
        "z": "c3da96311434c492",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 570,
        "y": 700,
        "wires": [
            [
                "b8af8509a506473c"
            ]
        ]
    },
    {
        "id": "b8af8509a506473c",
        "type": "subflow:630454ba203bdeb2",
        "z": "c3da96311434c492",
        "name": "",
        "x": 740,
        "y": 700,
        "wires": [
            [
                "91b82fd2bad3dfeb"
            ]
        ]
    },
    {
        "id": "9610b523c23e11fd",
        "type": "subflow:630454ba203bdeb2",
        "z": "c3da96311434c492",
        "name": "",
        "x": 1050,
        "y": 700,
        "wires": [
            [
                "d47d3cdfab4adb71"
            ]
        ]
    },
    {
        "id": "d47d3cdfab4adb71",
        "type": "subflow:09818a42b905f599",
        "z": "c3da96311434c492",
        "name": "",
        "x": 1190,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "5fa543837cde8908",
        "type": "http in",
        "z": "53247e78bebda9f2",
        "name": "Zimbabwe ...",
        "url": "/q9t0k7h",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "fe3f488a3bb4335e"
            ]
        ]
    },
    {
        "id": "fe3f488a3bb4335e",
        "type": "subflow:e71dd36fbebd831d",
        "z": "53247e78bebda9f2",
        "name": "\"Open in ...\"",
        "env": [
            {
                "name": "mcqTitle",
                "value": "\"Pick an action:\"",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "419573fd31ab7ad2"
            ]
        ]
    },
    {
        "id": "6a6826b09e289af3",
        "type": "subflow:e71dd36fbebd831d",
        "z": "53247e78bebda9f2",
        "name": "",
        "x": 570,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c2ba634aa58b989b",
        "type": "subflow:e71dd36fbebd831d",
        "z": "53247e78bebda9f2",
        "name": "",
        "x": 570,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "419573fd31ab7ad2",
        "type": "subflow:73f46db8070c553e",
        "z": "53247e78bebda9f2",
        "name": "",
        "x": 755,
        "y": 120,
        "wires": [
            [
                "39b2df4a705cb558"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "39b2df4a705cb558",
        "type": "link out",
        "z": "53247e78bebda9f2",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "71ef7b9c40f8c46a"
        ],
        "x": 915,
        "y": 120,
        "wires": []
    },
    {
        "id": "d81d1ca0aaf6eacb",
        "type": "http in",
        "z": "53247e78bebda9f2",
        "name": "Zimbabwe | Pages progress on Notion",
        "url": "/q3h1s5b",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 620,
        "y": 340,
        "wires": [
            [
                "a46e3c3b3ccc049c"
            ]
        ]
    },
    {
        "id": "a46e3c3b3ccc049c",
        "type": "subflow:b23fac97ba53404f",
        "z": "53247e78bebda9f2",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.notion.so/Request-work-flow-2172487a97d68085819df3b28c0052ae?source=copy_link\"",
                "type": "str"
            }
        ],
        "x": 940,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "591ac78ef4c0a1e5",
        "type": "link in",
        "z": "fa34e35f8c929634",
        "name": "Sahel >> Manage Configuration",
        "links": [
            "f463a891cb7d283b"
        ],
        "x": 215,
        "y": 40,
        "wires": [
            [
                "41211cdd573ff80f"
            ]
        ]
    },
    {
        "id": "2b886f5d4b4cd75a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fa34e35f8c929634",
        "name": "\"Manage Sahel configuration\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Manage Sahel configuration\"",
                "type": "str"
            }
        ],
        "x": 450,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "41211cdd573ff80f",
        "type": "subflow:630454ba203bdeb2",
        "z": "fa34e35f8c929634",
        "name": "",
        "x": 230,
        "y": 100,
        "wires": [
            [
                "2b886f5d4b4cd75a",
                "632b6c8bb83cf585"
            ]
        ]
    },
    {
        "id": "4dd61e82156456f8",
        "type": "subflow:b182be5bcebc47cd",
        "z": "fa34e35f8c929634",
        "g": "69725cd2aafba14c",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.notion.so/Sahel-K8s-Deployment-Configuration-e22f012a20e34cd6967a008c301842c7?source=copy_link\"",
                "type": "str"
            }
        ],
        "x": 750,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "5017239a40aa2220",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fa34e35f8c929634",
        "g": "69725cd2aafba14c",
        "name": "\"Download it from the right side page.\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Download it from the right side page.\"",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "12fc9ea08b94cd1e",
        "type": "subflow:630454ba203bdeb2",
        "z": "fa34e35f8c929634",
        "g": "69725cd2aafba14c",
        "name": "",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "64026deb8fe33cdf"
            ]
        ]
    },
    {
        "id": "eecb4c4b1234f468",
        "type": "http in",
        "z": "fa34e35f8c929634",
        "g": "69725cd2aafba14c",
        "name": "➡️ Deployment | Find sahel Kubernetes configuration file #k8s #kubeconfig #where",
        "url": "/o1r8s8v",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 710,
        "y": 440,
        "wires": [
            [
                "12fc9ea08b94cd1e"
            ]
        ]
    },
    {
        "id": "2d391a812b70b516",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fa34e35f8c929634",
        "g": "391e500da91adf6a",
        "name": "\"Opening configuration project.\"",
        "x": 1010,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "c07028262ac99971",
        "type": "subflow:630454ba203bdeb2",
        "z": "fa34e35f8c929634",
        "g": "391e500da91adf6a",
        "name": "",
        "x": 730,
        "y": 600,
        "wires": [
            [
                "68a4efa331111cc5"
            ]
        ]
    },
    {
        "id": "e8c6fce1d3c3ce4f",
        "type": "http in",
        "z": "fa34e35f8c929634",
        "g": "391e500da91adf6a",
        "name": "🪟 Sahel | Manage branches configuration",
        "url": "/0k4g1u",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 580,
        "y": 680,
        "wires": [
            [
                "c07028262ac99971"
            ]
        ]
    },
    {
        "id": "1ec44a9fff245c82",
        "type": "subflow:d147f856086021e2",
        "z": "fa34e35f8c929634",
        "g": "391e500da91adf6a",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"rider64\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/__Sahel-Config__\"",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "\"D:/Projects/__Sahel-Config__\"",
                "type": "str"
            }
        ],
        "x": 960,
        "y": 620,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6295cef24104685b",
        "type": "inject",
        "z": "fa34e35f8c929634",
        "g": "391e500da91adf6a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 600,
        "wires": [
            [
                "c07028262ac99971"
            ]
        ]
    },
    {
        "id": "7d9394205c50f630",
        "type": "http in",
        "z": "fa34e35f8c929634",
        "name": "Sahel | Manage Configuration...",
        "url": "/k4h6u0b",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "41211cdd573ff80f"
            ]
        ]
    },
    {
        "id": "632b6c8bb83cf585",
        "type": "subflow:e71dd36fbebd831d",
        "z": "fa34e35f8c929634",
        "g": "1eaa23a20347d86b",
        "name": "\"➡️ Find current Kubernetes configuration file #k8s #kubeconfig #where\"",
        "x": 640,
        "y": 140,
        "wires": [
            [
                "f2eab46dfd126d6f"
            ]
        ]
    },
    {
        "id": "f2eab46dfd126d6f",
        "type": "subflow:e71dd36fbebd831d",
        "z": "fa34e35f8c929634",
        "g": "1eaa23a20347d86b",
        "name": "\"Manage app configuration... #branch\"",
        "x": 750,
        "y": 220,
        "wires": [
            [
                "ea7e60fbe3a21064"
            ]
        ]
    },
    {
        "id": "ea7e60fbe3a21064",
        "type": "subflow:73f46db8070c553e",
        "z": "fa34e35f8c929634",
        "g": "1eaa23a20347d86b",
        "name": "",
        "x": 975,
        "y": 140,
        "wires": [
            [
                "12fc9ea08b94cd1e"
            ],
            [
                "37a41907a172ef1b"
            ]
        ],
        "l": false
    },
    {
        "id": "37a41907a172ef1b",
        "type": "subflow:73f46db8070c553e",
        "z": "fa34e35f8c929634",
        "g": "1eaa23a20347d86b",
        "name": "👈",
        "x": 975,
        "y": 220,
        "wires": [
            [
                "c07028262ac99971"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "8352a8412c0a29df",
        "type": "link in",
        "z": "f905afaf85d72616",
        "name": "Open usual folder",
        "links": [
            "74d103f3e26e622a"
        ],
        "x": 125,
        "y": 160,
        "wires": [
            [
                "d8033629135a75ac"
            ]
        ]
    },
    {
        "id": "12d06e28bc65afaf",
        "type": "subflow:552764fe6e0b1a84",
        "z": "f905afaf85d72616",
        "name": "\"Open usual folde\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Open usual folde\"",
                "type": "str"
            }
        ],
        "x": 670,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "de2616f66b074603",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "f905afaf85d72616",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"What folder?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"📂 OneDrive\"]",
                "type": "str"
            }
        ],
        "x": 590,
        "y": 240,
        "wires": [
            [],
            [],
            [
                "636bfefbced91485"
            ]
        ]
    },
    {
        "id": "636bfefbced91485",
        "type": "switch",
        "z": "f905afaf85d72616",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 320,
        "wires": [
            [
                "17e00c51a2cdcfce"
            ]
        ]
    },
    {
        "id": "29e59c8943c7a177",
        "type": "http in",
        "z": "f905afaf85d72616",
        "name": "📂 Open OneDrive folder",
        "url": "/l5u9g6m",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 450,
        "y": 400,
        "wires": [
            [
                "17e00c51a2cdcfce"
            ]
        ]
    },
    {
        "id": "acfe2361f15424b1",
        "type": "subflow:630454ba203bdeb2",
        "z": "f905afaf85d72616",
        "g": "abed1dc3aea932af",
        "name": "",
        "x": 910,
        "y": 340,
        "wires": [
            [
                "62ee4f43189b08aa"
            ]
        ]
    },
    {
        "id": "62ee4f43189b08aa",
        "type": "subflow:d147f856086021e2",
        "z": "f905afaf85d72616",
        "g": "abed1dc3aea932af",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"explorer\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "'%onedrive%'",
                "type": "str"
            }
        ],
        "x": 1080,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "591b6a075a9f5032",
        "type": "inject",
        "z": "f905afaf85d72616",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 300,
        "y": 600,
        "wires": [
            [
                "da878c322e612577"
            ]
        ]
    },
    {
        "id": "da878c322e612577",
        "type": "subflow:d147f856086021e2",
        "z": "f905afaf85d72616",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"bcompare\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/ignore.txt\" \"D:/ignore.txt\"",
                "type": "str"
            }
        ],
        "x": 510,
        "y": 600,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d8033629135a75ac",
        "type": "subflow:630454ba203bdeb2",
        "z": "f905afaf85d72616",
        "name": "",
        "x": 270,
        "y": 160,
        "wires": [
            [
                "816a5c7d9657deaf"
            ]
        ]
    },
    {
        "id": "031f09063010100f",
        "type": "link in",
        "z": "f85795edaa2feecd",
        "name": "Zimbabwe >> Rider",
        "links": [
            "2fd90f3e7509359d"
        ],
        "x": 425,
        "y": 280,
        "wires": [
            [
                "24755aec0d2ad176"
            ]
        ]
    },
    {
        "id": "bdba50632825cb88",
        "type": "subflow:9b174c4cdae724a4",
        "z": "f85795edaa2feecd",
        "g": "dafacf647be53d8c",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Open what?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"1---🪟 .sln\", \"2---🪟 Main folder\", \"3--- 🪟 Frontend folder\"]",
                "type": "str"
            }
        ],
        "x": 580,
        "y": 360,
        "wires": [
            [],
            [
                "112030348ecc224f"
            ]
        ]
    },
    {
        "id": "112030348ecc224f",
        "type": "switch",
        "z": "f85795edaa2feecd",
        "g": "dafacf647be53d8c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "1d3c9b89014b4cc5"
            ],
            [
                "4b42af3fdbb4b038"
            ],
            [
                "d864b0deb9a00c9e"
            ]
        ]
    },
    {
        "id": "1d3c9b89014b4cc5",
        "type": "subflow:d147f856086021e2",
        "z": "f85795edaa2feecd",
        "g": "3efbf3847475e6d7",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"rider64\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/Sahel/Backend/Sahel/Zimbabwe.sln\"",
                "type": "str"
            }
        ],
        "x": 1020,
        "y": 320,
        "wires": [
            [],
            [
                "e40e1db79e887acd"
            ]
        ]
    },
    {
        "id": "e40e1db79e887acd",
        "type": "subflow:552764fe6e0b1a84",
        "z": "f85795edaa2feecd",
        "g": "3efbf3847475e6d7",
        "name": "\"Find rider's active window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Find rider's active window\"",
                "type": "str"
            }
        ],
        "x": 1300,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a6ae96e99e3eec39",
        "type": "subflow:630454ba203bdeb2",
        "z": "f85795edaa2feecd",
        "name": "",
        "x": 930,
        "y": 80,
        "wires": [
            [
                "1d3c9b89014b4cc5"
            ]
        ]
    },
    {
        "id": "214e3c2cc6f8e6a7",
        "type": "http in",
        "z": "f85795edaa2feecd",
        "name": "Sahel | Rider | Open \".sln\" in Rider #backend #.net",
        "url": "/e7u64",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 570,
        "y": 80,
        "wires": [
            [
                "a6ae96e99e3eec39"
            ]
        ]
    },
    {
        "id": "4b42af3fdbb4b038",
        "type": "subflow:d147f856086021e2",
        "z": "f85795edaa2feecd",
        "g": "164f9ab7fdebfec4",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"rider64\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/Sahel\"",
                "type": "str"
            }
        ],
        "x": 1020,
        "y": 420,
        "wires": [
            [],
            [
                "3f810d9409410c1b"
            ]
        ]
    },
    {
        "id": "3f810d9409410c1b",
        "type": "subflow:552764fe6e0b1a84",
        "z": "f85795edaa2feecd",
        "g": "164f9ab7fdebfec4",
        "name": "\"Find rider's active window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Find rider's active window\"",
                "type": "str"
            }
        ],
        "x": 1280,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e399450296fdbce4",
        "type": "http in",
        "z": "f85795edaa2feecd",
        "name": "🪟 Sahel |  Rider | Main folder #as #directory",
        "url": "/d1e0k6h",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "1c9aad19bdc5a348"
            ]
        ]
    },
    {
        "id": "1c9aad19bdc5a348",
        "type": "subflow:630454ba203bdeb2",
        "z": "f85795edaa2feecd",
        "name": "",
        "x": 930,
        "y": 140,
        "wires": [
            [
                "4b42af3fdbb4b038"
            ]
        ]
    },
    {
        "id": "d864b0deb9a00c9e",
        "type": "subflow:d147f856086021e2",
        "z": "f85795edaa2feecd",
        "g": "305780e8616b520c",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"rider64\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/Sahel/Frontend/Sahel.Client\"",
                "type": "str"
            }
        ],
        "x": 1020,
        "y": 520,
        "wires": [
            [],
            [
                "bf3f612f64750d15"
            ]
        ]
    },
    {
        "id": "bf3f612f64750d15",
        "type": "subflow:552764fe6e0b1a84",
        "z": "f85795edaa2feecd",
        "g": "305780e8616b520c",
        "name": "\"Find rider's active window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Find rider's active window\"",
                "type": "str"
            }
        ],
        "x": 1280,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1c11468165a30ee3",
        "type": "http in",
        "z": "f85795edaa2feecd",
        "name": "🪟 Sahel | Rider | Frontend folder #as #directory",
        "url": "/g0n8f7q",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 560,
        "y": 200,
        "wires": [
            [
                "1473a5121e978a11"
            ]
        ]
    },
    {
        "id": "1473a5121e978a11",
        "type": "subflow:630454ba203bdeb2",
        "z": "f85795edaa2feecd",
        "name": "",
        "x": 930,
        "y": 200,
        "wires": [
            [
                "d864b0deb9a00c9e"
            ]
        ]
    },
    {
        "id": "24755aec0d2ad176",
        "type": "subflow:630454ba203bdeb2",
        "z": "f85795edaa2feecd",
        "name": "",
        "x": 410,
        "y": 360,
        "wires": [
            [
                "bdba50632825cb88"
            ]
        ]
    },
    {
        "id": "c5377752fab72429",
        "type": "subflow:630454ba203bdeb2",
        "z": "52b971736c7cc6dd",
        "name": "",
        "x": 430,
        "y": 200,
        "wires": [
            [
                "da48bf8588ce2f81",
                "5f195b3fe38e93e2"
            ]
        ]
    },
    {
        "id": "da48bf8588ce2f81",
        "type": "subflow:552764fe6e0b1a84",
        "z": "52b971736c7cc6dd",
        "name": "\"Arranging windows!\"",
        "x": 800,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a2a1949166668499",
        "type": "function",
        "z": "52b971736c7cc6dd",
        "name": "consume response",
        "func": "msg.state = {\n    ...msg.state,\n    windowCount: msg.payload.windowCount\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 200,
        "wires": [
            [
                "f793eeb45a92e8f8"
            ]
        ]
    },
    {
        "id": "f793eeb45a92e8f8",
        "type": "switch",
        "z": "52b971736c7cc6dd",
        "name": "",
        "property": "state.windowCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 320,
        "wires": [
            [
                "b81fc6a2499fd103"
            ],
            [
                "06279ae22cf7c189",
                "020723ddfabe5de1"
            ]
        ]
    },
    {
        "id": "d74d8217212f671c",
        "type": "function",
        "z": "52b971736c7cc6dd",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"Existing window activated!\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "5f195b3fe38e93e2",
        "type": "subflow:dca4607fc44f76d8",
        "z": "52b971736c7cc6dd",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "msg.state.processName",
                "type": "str"
            }
        ],
        "x": 890,
        "y": 200,
        "wires": [
            [],
            [
                "a2a1949166668499"
            ]
        ],
        "icon": "font-awesome/fa-compress"
    },
    {
        "id": "06279ae22cf7c189",
        "type": "subflow:552764fe6e0b1a84",
        "z": "52b971736c7cc6dd",
        "g": "7c5e24f13a676fee",
        "name": "\"Launching new instance\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Launching new instance\"",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "020723ddfabe5de1",
        "type": "subflow:d147f856086021e2",
        "z": "52b971736c7cc6dd",
        "g": "7c5e24f13a676fee",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "msg.state.processName",
                "type": "str"
            }
        ],
        "x": 840,
        "y": 460,
        "wires": [
            [],
            [
                "c49122f35b225b2a"
            ]
        ]
    },
    {
        "id": "c49122f35b225b2a",
        "type": "function",
        "z": "52b971736c7cc6dd",
        "g": "7c5e24f13a676fee",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"New instance launched\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b81fc6a2499fd103",
        "type": "subflow:09818a42b905f599",
        "z": "52b971736c7cc6dd",
        "g": "b965a4b4dffcba79",
        "name": "",
        "x": 810,
        "y": 360,
        "wires": [
            [
                "d74d8217212f671c"
            ]
        ]
    },
    {
        "id": "63857f630a90182c",
        "type": "link in",
        "z": "52b971736c7cc6dd",
        "name": "Tile windows of a process",
        "links": [
            "66b52f9bfeaf4ffd",
            "437c726c0f2e5332",
            "32174b5ede698366",
            "1a48908e176139f7"
        ],
        "x": 265,
        "y": 100,
        "wires": [
            [
                "ea9eb4b09455da33"
            ]
        ]
    },
    {
        "id": "ea9eb4b09455da33",
        "type": "subflow:5859b3292f239f6a",
        "z": "52b971736c7cc6dd",
        "name": "msg.state.processName",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "c5377752fab72429"
            ]
        ]
    },
    {
        "id": "7146d66f826efff4",
        "type": "link in",
        "z": "45e2e642be123d15",
        "name": "Zimbabwe >> VSCode",
        "links": [
            "4ed55830f384289f"
        ],
        "x": 235,
        "y": 160,
        "wires": [
            [
                "820af5b9a3c8d694"
            ]
        ]
    },
    {
        "id": "8e954a1f66e0e9f6",
        "type": "subflow:d147f856086021e2",
        "z": "45e2e642be123d15",
        "g": "f85163b16c01ddee",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"code\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/Zimbabwe-Digital\"",
                "type": "str"
            }
        ],
        "x": 800,
        "y": 240,
        "wires": [
            [],
            [
                "ea66f548537b4ece"
            ]
        ]
    },
    {
        "id": "ea66f548537b4ece",
        "type": "subflow:552764fe6e0b1a84",
        "z": "45e2e642be123d15",
        "g": "f85163b16c01ddee",
        "name": "\"Find VSCode active window\"",
        "x": 1090,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b4697bc42f2fb046",
        "type": "http in",
        "z": "45e2e642be123d15",
        "name": "🪟 Zimbabwe | VSCode | Main folder #as #directory",
        "url": "/f89c3o",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 410,
        "y": 40,
        "wires": [
            [
                "13b7adc1677aca7c"
            ]
        ]
    },
    {
        "id": "13b7adc1677aca7c",
        "type": "subflow:630454ba203bdeb2",
        "z": "45e2e642be123d15",
        "name": "",
        "x": 770,
        "y": 40,
        "wires": [
            [
                "8e954a1f66e0e9f6"
            ]
        ]
    },
    {
        "id": "b80206e0c31cd916",
        "type": "subflow:d147f856086021e2",
        "z": "45e2e642be123d15",
        "g": "4b83be363e6063f0",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"code\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/Zimbabwe-Digital/Frontend/Sahel.Client\"",
                "type": "str"
            }
        ],
        "x": 800,
        "y": 360,
        "wires": [
            [],
            [
                "62de61f66b1d9cae"
            ]
        ]
    },
    {
        "id": "62de61f66b1d9cae",
        "type": "subflow:552764fe6e0b1a84",
        "z": "45e2e642be123d15",
        "g": "4b83be363e6063f0",
        "name": "\"Find VSCode active window\"",
        "x": 1090,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "f1d4ead0bd7a60b4",
        "type": "http in",
        "z": "45e2e642be123d15",
        "name": "🪟 Zimbabwe | VSCode | Frontend folder #as #directory",
        "url": "/e3u4j3o",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 420,
        "y": 100,
        "wires": [
            [
                "905009564cd7e53e"
            ]
        ]
    },
    {
        "id": "905009564cd7e53e",
        "type": "subflow:630454ba203bdeb2",
        "z": "45e2e642be123d15",
        "name": "",
        "x": 770,
        "y": 100,
        "wires": [
            [
                "b80206e0c31cd916"
            ]
        ]
    },
    {
        "id": "820af5b9a3c8d694",
        "type": "subflow:630454ba203bdeb2",
        "z": "45e2e642be123d15",
        "name": "",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "9b5c8bcfe350b0dc"
            ]
        ]
    },
    {
        "id": "9b5c8bcfe350b0dc",
        "type": "subflow:e71dd36fbebd831d",
        "z": "45e2e642be123d15",
        "g": "da756e19fcf5b8fb",
        "name": "\"🪟 Main folder\"",
        "x": 380,
        "y": 240,
        "wires": [
            [
                "7dc2dce52fd7b98b"
            ]
        ]
    },
    {
        "id": "2c524c593ec6bdde",
        "type": "subflow:73f46db8070c553e",
        "z": "45e2e642be123d15",
        "g": "da756e19fcf5b8fb",
        "name": "",
        "x": 575,
        "y": 240,
        "wires": [
            [
                "8e954a1f66e0e9f6"
            ],
            [
                "466e0eb57f9fd098"
            ]
        ],
        "l": false
    },
    {
        "id": "7dc2dce52fd7b98b",
        "type": "subflow:e71dd36fbebd831d",
        "z": "45e2e642be123d15",
        "g": "da756e19fcf5b8fb",
        "name": "\"🪟 Frontend folder\"",
        "x": 400,
        "y": 300,
        "wires": [
            [
                "2c524c593ec6bdde"
            ]
        ]
    },
    {
        "id": "466e0eb57f9fd098",
        "type": "subflow:73f46db8070c553e",
        "z": "45e2e642be123d15",
        "g": "da756e19fcf5b8fb",
        "name": "",
        "x": 575,
        "y": 300,
        "wires": [
            [
                "b80206e0c31cd916"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "7eee4ac1d906c487",
        "type": "subflow:4178eda1bbbd7002",
        "z": "e835f561f7c858c6",
        "g": "7ae0292b643346fe",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 890,
        "y": 240,
        "wires": [
            [
                "c7142d4c7fd6cbd9"
            ]
        ]
    },
    {
        "id": "0c0f7df1ac76673e",
        "type": "function",
        "z": "e835f561f7c858c6",
        "g": "7ae0292b643346fe",
        "name": "set state",
        "func": "const setRemoteOrigin = \"git remote set-url  origin 'https://github.com/georgemesseha/nod-RED-personal-automation.git'\";\n\nmsg.state = {\n    command: `git commit -am '${new Date().toLocaleString()}'; ${setRemoteOrigin};  git push;`,\n    workingDir: \"%userprofile%/.node-red\",\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 180,
        "wires": [
            [
                "b085c303d12d5064"
            ]
        ]
    },
    {
        "id": "533b21645656be02",
        "type": "subflow:630454ba203bdeb2",
        "z": "e835f561f7c858c6",
        "g": "7ae0292b643346fe",
        "name": "",
        "x": 290,
        "y": 180,
        "wires": [
            [
                "0c0f7df1ac76673e"
            ]
        ]
    },
    {
        "id": "c7142d4c7fd6cbd9",
        "type": "subflow:552764fe6e0b1a84",
        "z": "e835f561f7c858c6",
        "g": "7ae0292b643346fe",
        "name": "'Completed'",
        "env": [
            {
                "name": "toSpeak",
                "value": "'Completed'",
                "type": "str"
            }
        ],
        "x": 1110,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9ba512984d21fac9",
        "type": "link in",
        "z": "e835f561f7c858c6",
        "name": "Commit node-RED repo changes",
        "links": [
            "62b78e0fb1de6fc0"
        ],
        "x": 265,
        "y": 60,
        "wires": [
            [
                "533b21645656be02"
            ]
        ]
    },
    {
        "id": "043c2979a5106d55",
        "type": "subflow:552764fe6e0b1a84",
        "z": "e835f561f7c858c6",
        "g": "7ae0292b643346fe",
        "name": "\"Declined\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d940fd02be6cbd1e",
        "type": "http in",
        "z": "e835f561f7c858c6",
        "name": "node-RED | Commit changes to node-RED repo #push",
        "url": "/o2l8f9j",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 420,
        "wires": [
            [
                "533b21645656be02"
            ]
        ]
    },
    {
        "id": "b085c303d12d5064",
        "type": "subflow:7dd6aa47fd337fda",
        "z": "e835f561f7c858c6",
        "g": "7ae0292b643346fe",
        "name": "",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "043c2979a5106d55"
            ],
            [
                "7eee4ac1d906c487"
            ]
        ]
    },
    {
        "id": "290604b8301ff7ee",
        "type": "link in",
        "z": "9f39cede1a22d613",
        "name": "Check current node-RED remote repo",
        "links": [
            "7fdac43fc713e966"
        ],
        "x": 235,
        "y": 180,
        "wires": [
            [
                "47f17cbee36a87af"
            ]
        ]
    },
    {
        "id": "3cda33f00a8b50c1",
        "type": "subflow:552764fe6e0b1a84",
        "z": "9f39cede1a22d613",
        "g": "b2d4114c04cb6f09",
        "name": "\"Check current remote repo\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Check current remote repo\"",
                "type": "str"
            }
        ],
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "27b575852ed45707",
        "type": "function",
        "z": "9f39cede1a22d613",
        "g": "b2d4114c04cb6f09",
        "name": "set command",
        "func": "msg.state = {\n    ... msg.state,\n    command: \"git remote -v\",\n    workingDir: \"%userprofile%/.node-red\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 180,
        "wires": [
            [
                "693f3b71b143a290"
            ]
        ]
    },
    {
        "id": "693f3b71b143a290",
        "type": "subflow:4178eda1bbbd7002",
        "z": "9f39cede1a22d613",
        "g": "b2d4114c04cb6f09",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 690,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4ba00e4a8a69d4f8",
        "type": "link in",
        "z": "a4cfc7f3534f1d11",
        "name": "Opening node-RED repo in vscode",
        "links": [
            "9a6c91a52b3f3df3"
        ],
        "x": 385,
        "y": 240,
        "wires": [
            [
                "10e13c72fd7c1a8e"
            ]
        ]
    },
    {
        "id": "10e13c72fd7c1a8e",
        "type": "subflow:630454ba203bdeb2",
        "z": "a4cfc7f3534f1d11",
        "g": "2f6f7c287d876256",
        "name": "",
        "x": 590,
        "y": 240,
        "wires": [
            [
                "81770e434c44378b"
            ]
        ]
    },
    {
        "id": "b4bfb4be0fc186cc",
        "type": "subflow:552764fe6e0b1a84",
        "z": "a4cfc7f3534f1d11",
        "g": "2f6f7c287d876256",
        "name": "\"Find the active vscode window\"",
        "x": 1050,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "d1ebb36eec12728f",
        "type": "http in",
        "z": "a4cfc7f3534f1d11",
        "name": "🪟 Node-RED | Edit node-RED repo in VSCode",
        "url": "/s1v8b6p",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 280,
        "wires": [
            [
                "10e13c72fd7c1a8e"
            ]
        ]
    },
    {
        "id": "8b44e8a5209466e2",
        "type": "inject",
        "z": "a4cfc7f3534f1d11",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 340,
        "wires": [
            [
                "10e13c72fd7c1a8e"
            ]
        ]
    },
    {
        "id": "81770e434c44378b",
        "type": "subflow:d147f856086021e2",
        "z": "a4cfc7f3534f1d11",
        "g": "2f6f7c287d876256",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"code\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"%userprofile%/.node-red\"",
                "type": "str"
            }
        ],
        "x": 780,
        "y": 240,
        "wires": [
            [],
            [
                "b4bfb4be0fc186cc"
            ]
        ]
    },
    {
        "id": "b2bae19937f4838e",
        "type": "link in",
        "z": "481fa3312bbf0aa2",
        "name": "Compare Files/Folders",
        "links": [],
        "x": 235,
        "y": 180,
        "wires": [
            [
                "dd2736a21144b021"
            ]
        ]
    },
    {
        "id": "dd2736a21144b021",
        "type": "subflow:5859b3292f239f6a",
        "z": "481fa3312bbf0aa2",
        "name": "msg.state.compare?.path1",
        "x": 450,
        "y": 180,
        "wires": [
            [
                "25847cf2a4ad8f95"
            ]
        ]
    },
    {
        "id": "25847cf2a4ad8f95",
        "type": "subflow:5859b3292f239f6a",
        "z": "481fa3312bbf0aa2",
        "name": "msg.state.compare?.path1",
        "x": 460,
        "y": 240,
        "wires": [
            [
                "ff16090f00d30e7d"
            ]
        ]
    },
    {
        "id": "ff16090f00d30e7d",
        "type": "subflow:d147f856086021e2",
        "z": "481fa3312bbf0aa2",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"bcompare\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "`\"${msg.state.compare.path1}\" \"${msg.state.compare.path2}\"`",
                "type": "str"
            }
        ],
        "x": 760,
        "y": 200,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7d830586c0971abb",
        "type": "function",
        "z": "481fa3312bbf0aa2",
        "name": "set test state",
        "func": "msg.state = {\n    ...msg.state,\n    compare: {\n        path1: \"D:/Projects/__Sahel-Config__/ConfigFiles/Sahel/localhost.json\",\n        path2: \"D:/Projects/__Sahel-Config__/ConfigFiles/Sahel/poc.json\"\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 320,
        "wires": [
            [
                "dd2736a21144b021"
            ]
        ]
    },
    {
        "id": "7c5bb522772ee706",
        "type": "inject",
        "z": "481fa3312bbf0aa2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 380,
        "wires": [
            [
                "7d830586c0971abb"
            ]
        ]
    },
    {
        "id": "b176cdaf8dc00343",
        "type": "http in",
        "z": "b2b0299ea00c11d9",
        "name": "🪟 Sahel | VSCode | Main folder #as #directory",
        "url": "/k0e3b5n",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "d91c3c97505f1e9f"
            ]
        ]
    },
    {
        "id": "d91c3c97505f1e9f",
        "type": "subflow:630454ba203bdeb2",
        "z": "b2b0299ea00c11d9",
        "name": "",
        "x": 780,
        "y": 80,
        "wires": [
            [
                "eb786945419f3fc5"
            ]
        ]
    },
    {
        "id": "cd77ffcd88de1331",
        "type": "http in",
        "z": "b2b0299ea00c11d9",
        "name": "🪟  Sahel | VSCode | Frontend folder #as #directory",
        "url": "/g9d7u0",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 420,
        "y": 140,
        "wires": [
            [
                "8fccf10b285e222a"
            ]
        ]
    },
    {
        "id": "8fccf10b285e222a",
        "type": "subflow:630454ba203bdeb2",
        "z": "b2b0299ea00c11d9",
        "name": "",
        "x": 780,
        "y": 140,
        "wires": [
            [
                "0b0eac85c17eef18"
            ]
        ]
    },
    {
        "id": "c66551d7ba3db7cb",
        "type": "subflow:630454ba203bdeb2",
        "z": "b2b0299ea00c11d9",
        "name": "",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "b5614fed5ba96aa5"
            ]
        ]
    },
    {
        "id": "eb786945419f3fc5",
        "type": "subflow:d147f856086021e2",
        "z": "b2b0299ea00c11d9",
        "g": "cffc745fde46a892",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"code\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/Sahel\"",
                "type": "str"
            }
        ],
        "x": 860,
        "y": 260,
        "wires": [
            [],
            [
                "6a7166179c3fd103"
            ]
        ]
    },
    {
        "id": "6a7166179c3fd103",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b2b0299ea00c11d9",
        "g": "cffc745fde46a892",
        "name": "\"Find VSCode active window\"",
        "x": 1150,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0b0eac85c17eef18",
        "type": "subflow:d147f856086021e2",
        "z": "b2b0299ea00c11d9",
        "g": "5c2fb6a4b7ca7eed",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"code\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/Sahel/Frontend/Sahel.Client\"",
                "type": "str"
            }
        ],
        "x": 860,
        "y": 380,
        "wires": [
            [],
            [
                "58d321d33646ed78"
            ]
        ]
    },
    {
        "id": "58d321d33646ed78",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b2b0299ea00c11d9",
        "g": "5c2fb6a4b7ca7eed",
        "name": "\"Find VSCode active window\"",
        "x": 1150,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "a92ab81a62359409",
        "type": "link in",
        "z": "b2b0299ea00c11d9",
        "name": "Sahel | VSCode",
        "links": [
            "7eb352d0328b58dd"
        ],
        "x": 165,
        "y": 220,
        "wires": [
            [
                "c66551d7ba3db7cb"
            ]
        ]
    },
    {
        "id": "b5614fed5ba96aa5",
        "type": "subflow:e71dd36fbebd831d",
        "z": "b2b0299ea00c11d9",
        "name": "\"🪟 Main folder\"",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "ad3c1eaf88d03e67"
            ]
        ]
    },
    {
        "id": "2852079f0d6ff1a3",
        "type": "subflow:73f46db8070c553e",
        "z": "b2b0299ea00c11d9",
        "name": "",
        "x": 595,
        "y": 260,
        "wires": [
            [
                "eb786945419f3fc5"
            ],
            [
                "8db8122f5e014a65"
            ]
        ],
        "l": false
    },
    {
        "id": "ad3c1eaf88d03e67",
        "type": "subflow:e71dd36fbebd831d",
        "z": "b2b0299ea00c11d9",
        "name": "\"🪟 Frontend folder\"",
        "x": 420,
        "y": 320,
        "wires": [
            [
                "2852079f0d6ff1a3"
            ]
        ]
    },
    {
        "id": "8db8122f5e014a65",
        "type": "subflow:73f46db8070c553e",
        "z": "b2b0299ea00c11d9",
        "name": "",
        "x": 595,
        "y": 320,
        "wires": [
            [
                "0b0eac85c17eef18"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "4184389e6d210e07",
        "type": "subflow:630454ba203bdeb2",
        "z": "ba73c7efac8344ce",
        "name": "",
        "x": 820,
        "y": 60,
        "wires": [
            [
                "25d18af308f7e829"
            ]
        ]
    },
    {
        "id": "15871c3ace70a9f4",
        "type": "http in",
        "z": "ba73c7efac8344ce",
        "name": "Zimbabwe | Rider | Open \".sln\" in Rider #backend #.net",
        "url": "/x8i9t1m",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 470,
        "y": 60,
        "wires": [
            [
                "4184389e6d210e07"
            ]
        ]
    },
    {
        "id": "de331a39598aa282",
        "type": "http in",
        "z": "ba73c7efac8344ce",
        "name": "🪟 Zimbabwe |  Rider | Main folder #as #directory",
        "url": "/f8n3r3y",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 450,
        "y": 120,
        "wires": [
            [
                "2877216ca868e346"
            ]
        ]
    },
    {
        "id": "2877216ca868e346",
        "type": "subflow:630454ba203bdeb2",
        "z": "ba73c7efac8344ce",
        "name": "",
        "x": 820,
        "y": 120,
        "wires": [
            [
                "c98f1760263e662b"
            ]
        ]
    },
    {
        "id": "fa68bccb1254a42e",
        "type": "http in",
        "z": "ba73c7efac8344ce",
        "name": "🪟 Zimbabwe  | Rider | Frontend folder #as #directory",
        "url": "/1v0m1d",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 470,
        "y": 180,
        "wires": [
            [
                "ee72b7a146a1c97e"
            ]
        ]
    },
    {
        "id": "ee72b7a146a1c97e",
        "type": "subflow:630454ba203bdeb2",
        "z": "ba73c7efac8344ce",
        "name": "",
        "x": 820,
        "y": 180,
        "wires": [
            [
                "f6cb1da28b59c4e5"
            ]
        ]
    },
    {
        "id": "23d1772ff03c590c",
        "type": "subflow:630454ba203bdeb2",
        "z": "ba73c7efac8344ce",
        "name": "",
        "x": 300,
        "y": 340,
        "wires": [
            [
                "497d0536fe4ef0b4"
            ]
        ]
    },
    {
        "id": "497d0536fe4ef0b4",
        "type": "subflow:9b174c4cdae724a4",
        "z": "ba73c7efac8344ce",
        "g": "4cc86400caa64356",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Open what?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"1---🪟 .sln\", \"2---🪟 Main folder\", \"3--- 🪟 Frontend folder\"]",
                "type": "str"
            }
        ],
        "x": 470,
        "y": 340,
        "wires": [
            [],
            [
                "4a9e4012f31deb57"
            ]
        ]
    },
    {
        "id": "4a9e4012f31deb57",
        "type": "switch",
        "z": "ba73c7efac8344ce",
        "g": "4cc86400caa64356",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 620,
        "y": 320,
        "wires": [
            [
                "25d18af308f7e829"
            ],
            [
                "c98f1760263e662b"
            ],
            [
                "f6cb1da28b59c4e5"
            ]
        ]
    },
    {
        "id": "25d18af308f7e829",
        "type": "subflow:d147f856086021e2",
        "z": "ba73c7efac8344ce",
        "g": "e15ef9caf043cbae",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"rider64\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/Zimbabwe-Digital/Backend/Sahel/Zimbabwe.sln\"",
                "type": "str"
            }
        ],
        "x": 910,
        "y": 300,
        "wires": [
            [],
            [
                "8847a716b65054b1"
            ]
        ]
    },
    {
        "id": "8847a716b65054b1",
        "type": "subflow:552764fe6e0b1a84",
        "z": "ba73c7efac8344ce",
        "g": "e15ef9caf043cbae",
        "name": "\"Find rider's active window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Find rider's active window\"",
                "type": "str"
            }
        ],
        "x": 1190,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c98f1760263e662b",
        "type": "subflow:d147f856086021e2",
        "z": "ba73c7efac8344ce",
        "g": "12b7d975d5ca8909",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"rider64\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/Zimbabwe-Digital\"",
                "type": "str"
            }
        ],
        "x": 910,
        "y": 400,
        "wires": [
            [],
            [
                "93cc8876d2eba32b"
            ]
        ]
    },
    {
        "id": "93cc8876d2eba32b",
        "type": "subflow:552764fe6e0b1a84",
        "z": "ba73c7efac8344ce",
        "g": "12b7d975d5ca8909",
        "name": "\"Find rider's active window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Find rider's active window\"",
                "type": "str"
            }
        ],
        "x": 1170,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f6cb1da28b59c4e5",
        "type": "subflow:d147f856086021e2",
        "z": "ba73c7efac8344ce",
        "g": "51ca4deb1c86672b",
        "name": "",
        "env": [
            {
                "name": "processName",
                "value": "\"rider64\"",
                "type": "str"
            },
            {
                "name": "args",
                "value": "\"D:/Projects/Zimbabwe-Digital/Frontend/Sahel.Client\"",
                "type": "str"
            }
        ],
        "x": 910,
        "y": 500,
        "wires": [
            [],
            [
                "4a70eb18668a57eb"
            ]
        ]
    },
    {
        "id": "4a70eb18668a57eb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "ba73c7efac8344ce",
        "g": "51ca4deb1c86672b",
        "name": "\"Find rider's active window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Find rider's active window\"",
                "type": "str"
            }
        ],
        "x": 1170,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "beb14601a30a2b58",
        "type": "link in",
        "z": "ba73c7efac8344ce",
        "name": "Zimbabwe | Open in Rider",
        "links": [
            "18ff581c632cc81f"
        ],
        "x": 235,
        "y": 280,
        "wires": [
            [
                "23d1772ff03c590c"
            ]
        ]
    },
    {
        "id": "207218c014c84114",
        "type": "inject",
        "z": "d39e06fc3287e0a6",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 180,
        "wires": [
            [
                "42a0fb385f0e4012"
            ]
        ]
    },
    {
        "id": "42a0fb385f0e4012",
        "type": "subflow:7dd6aa47fd337fda",
        "z": "d39e06fc3287e0a6",
        "name": "",
        "env": [],
        "x": 410,
        "y": 180,
        "wires": [
            [
                "2d3e0beb420d9d5a"
            ],
            [
                "988e5102fc5248be"
            ]
        ]
    },
    {
        "id": "988e5102fc5248be",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d39e06fc3287e0a6",
        "name": "\"Confirmed\"",
        "x": 590,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2d3e0beb420d9d5a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d39e06fc3287e0a6",
        "name": "\"Declined\"",
        "x": 590,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "cc01b9472c3e5e58",
        "type": "subflow:e71dd36fbebd831d",
        "z": "d39e06fc3287e0a6",
        "name": "msg.state.options[0]",
        "env": [
            {
                "name": "mcqTitle",
                "value": "msg.state.question",
                "type": "str"
            }
        ],
        "x": 540,
        "y": 380,
        "wires": [
            [
                "c7e43ba0272b9c10"
            ]
        ]
    },
    {
        "id": "49f1f87709721eb6",
        "type": "subflow:630454ba203bdeb2",
        "z": "d39e06fc3287e0a6",
        "name": "",
        "x": 330,
        "y": 380,
        "wires": [
            [
                "cc01b9472c3e5e58"
            ]
        ]
    },
    {
        "id": "c7e43ba0272b9c10",
        "type": "subflow:e71dd36fbebd831d",
        "z": "d39e06fc3287e0a6",
        "name": "msg.state.options[1]",
        "x": 540,
        "y": 440,
        "wires": [
            [
                "7bd93d494834f3eb"
            ]
        ]
    },
    {
        "id": "7bd93d494834f3eb",
        "type": "subflow:73f46db8070c553e",
        "z": "d39e06fc3287e0a6",
        "name": "",
        "x": 735,
        "y": 380,
        "wires": [
            [
                "3f0ef5b2fb8bacc9"
            ],
            [
                "2c98de5ecb477810"
            ]
        ],
        "l": false
    },
    {
        "id": "2c98de5ecb477810",
        "type": "subflow:73f46db8070c553e",
        "z": "d39e06fc3287e0a6",
        "name": "",
        "x": 735,
        "y": 440,
        "wires": [
            [
                "8a47806d290b8916"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "3f0ef5b2fb8bacc9",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d39e06fc3287e0a6",
        "name": "\"Confimed\"",
        "x": 910,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8a47806d290b8916",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d39e06fc3287e0a6",
        "name": "\"Denied\"",
        "x": 910,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5787101f5f9fb0cf",
        "type": "function",
        "z": "d39e06fc3287e0a6",
        "name": "function 1",
        "func": "msg.state = {\n    options: [\"yes\", \"no\"],\n    question: \"Are you sure?\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 380,
        "wires": [
            [
                "49f1f87709721eb6"
            ]
        ]
    }
]