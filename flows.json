[
    {
        "id": "7a9bcfa6840e0f66",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d2cbc16db312fbed",
        "type": "tab",
        "label": "GGGGGGGGGGGGGGG",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3f411aa3ba670cb2",
        "type": "subflow",
        "name": "Mcq",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 380,
                "wires": [
                    {
                        "id": "212895cf53a6a946"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 990,
                "y": 380,
                "wires": [
                    {
                        "id": "d408237910dd4cc5",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1000,
                "y": 480,
                "wires": [
                    {
                        "id": "20a7673afc6ed2fd",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1120,
                "y": 600,
                "wires": [
                    {
                        "id": "8d103a9e4ce717c4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "question",
                "type": "str",
                "value": "string: the question to ask user for picking the option"
            },
            {
                "name": "options",
                "type": "str",
                "value": "an array of strings to prompt user to pick from"
            }
        ],
        "meta": {
            "desc": "Start Mcq"
        },
        "color": "#E9967A",
        "inputLabels": [
            "options: [], question: \"\""
        ],
        "outputLabels": [
            "Failed",
            "Cancelled",
            "Got an answer => answer: \"\""
        ],
        "status": {
            "x": 300,
            "y": 80,
            "wires": [
                {
                    "id": "61db02665363232f",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "4178eda1bbbd7002",
        "type": "subflow",
        "name": "App",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 160,
                "wires": [
                    {
                        "id": "a7ecc12d750180de"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 720,
                "y": 160,
                "wires": [
                    {
                        "id": "bf8b03d7e2a96eea",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": ""
            },
            {
                "name": "terminal",
                "type": "str",
                "value": ""
            },
            {
                "name": "workingDirecotyr",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "icon": "font-awesome/fa-terminal"
    },
    {
        "id": "552764fe6e0b1a84",
        "type": "subflow",
        "name": "Speak",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 180,
                "wires": [
                    {
                        "id": "59c105cd1b3912c1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 740,
                "y": 180,
                "wires": [
                    {
                        "id": "a80540014bb4644d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "toSpeak",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "icon": "node-red/bridge.svg"
    },
    {
        "id": "66900ba2a8f4a83a",
        "type": "subflow",
        "name": "Sahell",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 160,
                "wires": [
                    {
                        "id": "80cfd8f678c5f588"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7725d64c5713a5a0",
        "type": "subflow",
        "name": "Cmd",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 220,
                "wires": [
                    {
                        "id": "7691eb48d8550e58"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 740,
                "y": 220,
                "wires": [
                    {
                        "id": "fa81138c3d4a4454",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": "string"
            },
            {
                "name": "workingDirectory",
                "type": "str",
                "value": "string"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "fd952472de19344b",
        "type": "subflow",
        "name": "belongsToGitRepo",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 80,
                "wires": [
                    {
                        "id": "7d2120bd1ee33fca"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1500,
                "y": 40,
                "wires": [
                    {
                        "id": "dcf7e48c30f1fab6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1500,
                "y": 100,
                "wires": [
                    {
                        "id": "dcf7e48c30f1fab6",
                        "port": 1
                    }
                ]
            },
            {
                "x": 1500,
                "y": 160,
                "wires": [
                    {
                        "id": "dcf7e48c30f1fab6",
                        "port": "2"
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "workingDirectory",
                "type": "str",
                "value": "string"
            },
            {
                "name": "output",
                "type": "str",
                "value": "boolean"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "67d0907b3004484d",
        "type": "subflow",
        "name": "Log",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 280,
                "wires": [
                    {
                        "id": "eadac2317ec8988a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 710,
                "y": 280,
                "wires": [
                    {
                        "id": "fa0f59c319d74ca7",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "toLog"
        ],
        "outputLabels": [
            "void"
        ]
    },
    {
        "id": "0fc4eeeb2f2b1fb9",
        "type": "subflow",
        "name": "PlaySound_MouseClick",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 340,
                "y": 300,
                "wires": [
                    {
                        "id": "1f8d80d776c2a4da"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 300,
                "wires": [
                    {
                        "id": "42b883da9df0572f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "d4d3f1d585262a5e",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "Pick a project",
        "style": {
            "label": true
        },
        "nodes": [
            "3217251375bf0cd5",
            "8d80236191c2edcf",
            "8424fc7ac6890a33",
            "240cce09ccbbadb7"
        ],
        "x": 414,
        "y": 39,
        "w": 892,
        "h": 129.5
    },
    {
        "id": "46adcf9a15047f14",
        "type": "group",
        "z": "66900ba2a8f4a83a",
        "name": "Sahel: pick an action",
        "style": {
            "label": true
        },
        "nodes": [
            "80cfd8f678c5f588",
            "29c2a52829a460e0"
        ],
        "x": 254,
        "y": 111.5,
        "w": 352,
        "h": 97
    },
    {
        "id": "36a66f9784294584",
        "type": "group",
        "z": "66900ba2a8f4a83a",
        "name": "Manage configuration",
        "style": {
            "label": true,
            "fill": "#ff3f3f"
        },
        "nodes": [
            "9b46ab1d2752f15b",
            "f98cef9655b73c36",
            "e29790c7948ceb48",
            "fc1a122934e79424"
        ],
        "x": 314,
        "y": 231.5,
        "w": 712,
        "h": 97
    },
    {
        "id": "205b3f2b65e640ac",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "Sahel",
        "style": {
            "label": true,
            "fill": "#6f2fa0"
        },
        "nodes": [
            "4d2ba3638aa49653",
            "51a5a5d4367190bb",
            "7dfc427dc8f64ac3",
            "8e1a987211bad503",
            "a8cd9bae7a0d9798",
            "22f34b8de298fa22",
            "233598e30fb59362",
            "c12bcca664e5d363"
        ],
        "x": 374,
        "y": 191.5,
        "w": 1098,
        "h": 595.5
    },
    {
        "id": "a4daa917f7104e1c",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "Gotcha",
        "style": {
            "label": true,
            "fill": "#7fb7df"
        },
        "nodes": [
            "d499d794266781f0",
            "d3b45d90caaf0df6",
            "7ef3bdb35551639f",
            "f826f4aa243cd7e8",
            "d2c7b3de1379152c"
        ],
        "x": 374,
        "y": 847,
        "w": 1144,
        "h": 440
    },
    {
        "id": "8e1a987211bad503",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "g": "205b3f2b65e640ac",
        "name": "Manage configuration",
        "style": {
            "label": true,
            "fill": "#3f93cf"
        },
        "nodes": [
            "ee2dbb0da11b89c8",
            "1976535bc8d1c38d",
            "e9eb802d40b4c0c5",
            "5549111ba70f90cf"
        ],
        "x": 654,
        "y": 371.5,
        "w": 792,
        "h": 97
    },
    {
        "id": "f826f4aa243cd7e8",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "g": "a4daa917f7104e1c",
        "style": {
            "stroke": "#3f3d4d",
            "stroke-opacity": "1",
            "fill": "#262533",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#ececec"
        },
        "nodes": [
            "b99ff34cf3adcb14",
            "4e1e1deff5189990"
        ],
        "x": 634,
        "y": 1179,
        "w": 502,
        "h": 82
    },
    {
        "id": "a8cd9bae7a0d9798",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "g": "205b3f2b65e640ac",
        "name": "Create delta branch",
        "style": {
            "label": true
        },
        "nodes": [
            "bfaaf56154b511e8",
            "268721640bba33e3"
        ],
        "x": 654,
        "y": 579,
        "w": 452,
        "h": 82
    },
    {
        "id": "22f34b8de298fa22",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "g": "205b3f2b65e640ac",
        "name": "Unexpected",
        "style": {
            "label": true,
            "fill": "#ff0000"
        },
        "nodes": [
            "81c0fd4bbd427cba",
            "aabc1848ea544b34"
        ],
        "x": 654,
        "y": 679,
        "w": 462,
        "h": 82
    },
    {
        "id": "233598e30fb59362",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "g": "205b3f2b65e640ac",
        "name": "Open project in vscode",
        "style": {
            "label": true
        },
        "nodes": [
            "bd0be08bdf5b7ad0",
            "272f211e8ada725d",
            "b80fbb114eac869b"
        ],
        "x": 654,
        "y": 479,
        "w": 532,
        "h": 82
    },
    {
        "id": "d2c7b3de1379152c",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "g": "a4daa917f7104e1c",
        "name": "",
        "style": {
            "stroke": "#000000",
            "label": true
        },
        "nodes": [
            "107ddbf4bc1d2c0e",
            "8be0865da7ccafe7",
            "f51c790edf817e78",
            "3dfbfb4ea54b8312"
        ],
        "x": 634,
        "y": 873,
        "w": 858,
        "h": 254
    },
    {
        "id": "f51c790edf817e78",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "g": "d2c7b3de1379152c",
        "style": {
            "stroke": "#3f3d4d",
            "stroke-opacity": "1",
            "fill": "#262533",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#ececec"
        },
        "nodes": [
            "1ffec2d841063e4a",
            "7e6338356cf17f2f"
        ],
        "x": 714,
        "y": 1019,
        "w": 572,
        "h": 82
    },
    {
        "id": "3dfbfb4ea54b8312",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "g": "d2c7b3de1379152c",
        "style": {
            "stroke": "#3f3d4d",
            "stroke-opacity": "1",
            "fill": "#262533",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#ececec"
        },
        "nodes": [
            "bfe7fa0ee9c3c3e3",
            "e19a9c583aa52c9b"
        ],
        "x": 1014,
        "y": 899,
        "w": 452,
        "h": 82
    },
    {
        "id": "ccc07f140935b625",
        "type": "http request",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/mcq",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 200,
        "wires": [
            [
                "d96e41f875f9cfe3"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "212895cf53a6a946",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set http payload",
        "func": "msg.payload = {\n    question: msg.question,\n    options: msg.options,\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 200,
        "wires": [
            [
                "ccc07f140935b625"
            ]
        ]
    },
    {
        "id": "d96e41f875f9cfe3",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set answer",
        "func": "let payload = undefined;\ntry\n{\n    payload = JSON.parse(msg.payload);\n}\ncatch(e)\n{\n    \n    node.error(\"!!!!!!!!!!!!!!!!!!!!!!!!! my error message\", msg);\n    msg.status = -1;\n    return msg;\n}\n\nmsg.answer = payload.answer;\nswitch(msg.answer)\n{\n    case undefined:\n        msg.status = -1;\n        break;\n    case \"\":\n        msg.status = 0;\n        break;\n    default:\n        msg.status = 1;\n}\nnode.status({fill:\"red\",shape:\"ring\",text:\"message\"});\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 320,
        "wires": [
            [
                "2467e84cc670338c"
            ]
        ]
    },
    {
        "id": "2467e84cc670338c",
        "type": "switch",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 440,
        "wires": [
            [
                "d408237910dd4cc5"
            ],
            [
                "20a7673afc6ed2fd"
            ],
            [
                "af01eaae99bdbdde"
            ]
        ]
    },
    {
        "id": "20a7673afc6ed2fd",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3f411aa3ba670cb2",
        "name": "Declined",
        "env": [
            {
                "name": "toSpeak",
                "value": "Declined",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "d408237910dd4cc5",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3f411aa3ba670cb2",
        "name": "Mcq failed ",
        "env": [
            {
                "name": "toSpeak",
                "value": "Mcq failed ",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "af01eaae99bdbdde",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"green\", shape: \"ring\", text: msg.answer });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 600,
        "wires": [
            [
                "8d103a9e4ce717c4"
            ]
        ]
    },
    {
        "id": "8d103a9e4ce717c4",
        "type": "subflow:0fc4eeeb2f2b1fb9",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "x": 850,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "61db02665363232f",
        "type": "status",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "scope": [
            "af01eaae99bdbdde"
        ],
        "x": 140,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "bf8b03d7e2a96eea",
        "type": "http request",
        "z": "4178eda1bbbd7002",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/exec",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 160,
        "wires": [
            []
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "a7ecc12d750180de",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set payload",
        "func": "node.warn(\"command = \" + msg.command);\n\nmsg.payload = {\n    command: msg.command,\n    terminal: msg.terminal,\n    workingDirectory: msg.workingDirectory\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 160,
        "wires": [
            [
                "bf8b03d7e2a96eea"
            ]
        ]
    },
    {
        "id": "a80540014bb4644d",
        "type": "http request",
        "z": "552764fe6e0b1a84",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/speak",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 180,
        "wires": [
            []
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "59c105cd1b3912c1",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "set http payload",
        "func": "\nif(env.get(\"toSpeak\")) msg.toSpeak = env.get(\"toSpeak\");\n\nmsg.payload = \n{\n    toSpeak: msg.toSpeak\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "a80540014bb4644d"
            ]
        ]
    },
    {
        "id": "80cfd8f678c5f588",
        "type": "change",
        "z": "66900ba2a8f4a83a",
        "g": "46adcf9a15047f14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[\"Manage configuration\",\"Open project\", \"Create delta branch\"]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "question",
                "pt": "msg",
                "to": "Pick an action:",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "29c2a52829a460e0"
            ]
        ]
    },
    {
        "id": "29c2a52829a460e0",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "66900ba2a8f4a83a",
        "g": "46adcf9a15047f14",
        "name": "",
        "env": [
            {
                "name": "options",
                "value": "array of string values resembles the MCQ options",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "12f9d30c8ef8d9e2",
        "type": "switch",
        "z": "66900ba2a8f4a83a",
        "name": "",
        "property": "answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Manage configuration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Open project",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Create delta branch",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 190,
        "y": 280,
        "wires": [
            [
                "9b46ab1d2752f15b"
            ],
            [
                "cc0fb9d167b0c25b"
            ],
            [
                "731c3bf96a90685a"
            ],
            [
                "e91ca3c661a6fd86"
            ]
        ]
    },
    {
        "id": "9b46ab1d2752f15b",
        "type": "change",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[\"Local machine configuration\",\"Deployed branch configuration\"]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "question",
                "pt": "msg",
                "to": "Which configuration:",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 280,
        "wires": [
            [
                "f98cef9655b73c36"
            ]
        ]
    },
    {
        "id": "f98cef9655b73c36",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "",
        "env": [
            {
                "name": "options",
                "value": "array of string values resembles the MCQ options",
                "type": "str"
            }
        ],
        "x": 590,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e29790c7948ceb48",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "",
        "x": 950,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fc1a122934e79424",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            [
                "e29790c7948ceb48"
            ]
        ]
    },
    {
        "id": "cc0fb9d167b0c25b",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 380,
        "wires": [
            [
                "4a33476e383f3c3c"
            ]
        ]
    },
    {
        "id": "4a33476e383f3c3c",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "name": "Open project",
        "x": 630,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "731c3bf96a90685a",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 440,
        "wires": [
            [
                "7c3ca5de45a9a2cb"
            ]
        ]
    },
    {
        "id": "7c3ca5de45a9a2cb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "name": "Create delta branch",
        "x": 650,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e91ca3c661a6fd86",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = \"unrecognized action\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 500,
        "wires": [
            [
                "5b834e82bef1f135"
            ]
        ]
    },
    {
        "id": "5b834e82bef1f135",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "name": "Unrecognized action",
        "x": 650,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "fa81138c3d4a4454",
        "type": "http request",
        "z": "7725d64c5713a5a0",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/exec",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 220,
        "wires": [
            []
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "7691eb48d8550e58",
        "type": "function",
        "z": "7725d64c5713a5a0",
        "name": "set payload",
        "func": "node.warn(\"command = \" + msg.command);\n\nmsg.payload = {\n    command: msg.command,\n    terminal: msg.terminal,\n    workingDirectory: msg.workingDirectory,\n    detachSpawnedProcess: true,\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 220,
        "wires": [
            [
                "fa81138c3d4a4454"
            ]
        ]
    },
    {
        "id": "7d2120bd1ee33fca",
        "type": "function",
        "z": "fd952472de19344b",
        "name": "prepare command",
        "func": "msg.command = `git -C ${msg.workingDirectory} rev-parse --is-inside-work-tree`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 80,
        "wires": [
            [
                "728c0b20a528735c"
            ]
        ]
    },
    {
        "id": "728c0b20a528735c",
        "type": "exec",
        "z": "fd952472de19344b",
        "command": "check if it's a git repo",
        "addpay": "command",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 560,
        "y": 80,
        "wires": [
            [
                "3f6c826a2e5447b4"
            ],
            [
                "3f6c826a2e5447b4"
            ],
            [
                "3f6c826a2e5447b4"
            ]
        ]
    },
    {
        "id": "767b443b91789c7b",
        "type": "function",
        "z": "fd952472de19344b",
        "name": "set stdout",
        "func": "msg.stdout = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 20,
        "wires": [
            [
                "460ace5acf39ab89"
            ]
        ]
    },
    {
        "id": "280d508df5e681a0",
        "type": "function",
        "z": "fd952472de19344b",
        "name": "set stderr",
        "func": "msg.stderr = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 80,
        "wires": [
            [
                "460ace5acf39ab89"
            ]
        ]
    },
    {
        "id": "b519ac8ca88dd24a",
        "type": "function",
        "z": "fd952472de19344b",
        "name": "set exitCode",
        "func": "msg.exitCode = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 160,
        "wires": [
            [
                "460ace5acf39ab89"
            ]
        ]
    },
    {
        "id": "460ace5acf39ab89",
        "type": "function",
        "z": "fd952472de19344b",
        "name": "set status",
        "func": "msg.toSpeak = `exit code = ${msg.exitCode} and msg.stdout = ${msg.stdOut} and msg.stderr = ${msg.stderr}`;\nif (msg.exitCode != 0) msg.status = 'failure';\nelse if(msg.stderr) msg.status = 'failure';\nelse if(msg.stdout == 'true') msg.status = 'success_true';\nelse msg.status = 'success_false';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 100,
        "wires": [
            [
                "dcf7e48c30f1fab6"
            ]
        ]
    },
    {
        "id": "dcf7e48c30f1fab6",
        "type": "switch",
        "z": "fd952472de19344b",
        "name": "",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "success_true",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "success_false",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "failure",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1270,
        "y": 100,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bedfe7a52899cd82",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fd952472de19344b",
        "name": "",
        "x": 1130,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "3f6c826a2e5447b4",
        "type": "join",
        "z": "fd952472de19344b",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 840,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "eadac2317ec8988a",
        "type": "function",
        "z": "67d0907b3004484d",
        "name": "set payload",
        "func": "msg.payload = {\n    toLog: msg.toLog \n}\nnode.status({fill:\"yellow\",shape:\"ring\",text:\"running\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 280,
        "wires": [
            [
                "fa0f59c319d74ca7"
            ]
        ]
    },
    {
        "id": "fa0f59c319d74ca7",
        "type": "http request",
        "z": "67d0907b3004484d",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/log",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 280,
        "wires": [
            []
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "42b883da9df0572f",
        "type": "http request",
        "z": "0fc4eeeb2f2b1fb9",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/playClick",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 300,
        "wires": [
            []
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "1f8d80d776c2a4da",
        "type": "function",
        "z": "0fc4eeeb2f2b1fb9",
        "name": "set http payload",
        "func": "\nmsg.payload = \n{\n   ignore: \"ignore\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 300,
        "wires": [
            [
                "42b883da9df0572f"
            ]
        ]
    },
    {
        "id": "5846e964f19a6511",
        "type": "inject",
        "z": "d2cbc16db312fbed",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Hello World",
        "payloadType": "str",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "3217251375bf0cd5"
            ]
        ]
    },
    {
        "id": "ccc22ff9a5668b2b",
        "type": "http in",
        "z": "d2cbc16db312fbed",
        "name": "",
        "url": "/mainFlow",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "3217251375bf0cd5"
            ]
        ]
    },
    {
        "id": "3217251375bf0cd5",
        "type": "change",
        "z": "d2cbc16db312fbed",
        "g": "d4d3f1d585262a5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[\"Sahell\",\"Zimbabwe\", \"Gotcha\"]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "question",
                "pt": "msg",
                "to": "Pick a project:",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 120,
        "wires": [
            [
                "8d80236191c2edcf"
            ]
        ]
    },
    {
        "id": "8d80236191c2edcf",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "d2cbc16db312fbed",
        "g": "d4d3f1d585262a5e",
        "name": "",
        "env": [
            {
                "name": "options",
                "value": "array of string values resembles the MCQ options",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 120,
        "wires": [
            [
                "240cce09ccbbadb7"
            ],
            [
                "8424fc7ac6890a33"
            ],
            [
                "7fdfa55deef58d0a"
            ]
        ]
    },
    {
        "id": "8424fc7ac6890a33",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "d4d3f1d585262a5e",
        "name": "Cancelled branch",
        "env": [
            {
                "name": "toSpeak",
                "value": "Cancelled branch",
                "type": "str"
            }
        ],
        "x": 1190,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7fdfa55deef58d0a",
        "type": "switch",
        "z": "d2cbc16db312fbed",
        "name": "",
        "property": "answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Sahell",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Zimbabwe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Gotcha",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 110,
        "y": 260,
        "wires": [
            [
                "4d2ba3638aa49653"
            ],
            [
                "bbc7012b1a1f40f4"
            ],
            [
                "d499d794266781f0"
            ],
            [
                "1149b4dc2d78461c"
            ]
        ]
    },
    {
        "id": "bbc7012b1a1f40f4",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "name": "Zimbabwe",
        "env": [
            {
                "name": "toSpeak",
                "value": "Zimbabwe",
                "type": "str"
            }
        ],
        "x": 120,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "20df3cf63b563892",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "name": "Unrecognized project",
        "x": 720,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "1149b4dc2d78461c",
        "type": "change",
        "z": "d2cbc16db312fbed",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "toSpeak",
                "pt": "msg",
                "to": "Unrecognized project",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1380,
        "wires": [
            [
                "20df3cf63b563892"
            ]
        ]
    },
    {
        "id": "4d2ba3638aa49653",
        "type": "change",
        "z": "d2cbc16db312fbed",
        "g": "205b3f2b65e640ac",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[\"Manage configuration\",\"Open project\", \"Create delta branch\"]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "question",
                "pt": "msg",
                "to": "Pick an action:",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 240,
        "wires": [
            [
                "51a5a5d4367190bb"
            ]
        ]
    },
    {
        "id": "51a5a5d4367190bb",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "d2cbc16db312fbed",
        "g": "205b3f2b65e640ac",
        "name": "",
        "env": [
            {
                "name": "options",
                "value": "array of string values resembles the MCQ options",
                "type": "str"
            }
        ],
        "x": 770,
        "y": 240,
        "wires": [
            [
                "c12bcca664e5d363"
            ],
            [
                "3217251375bf0cd5"
            ],
            [
                "7dfc427dc8f64ac3"
            ]
        ]
    },
    {
        "id": "7dfc427dc8f64ac3",
        "type": "switch",
        "z": "d2cbc16db312fbed",
        "g": "205b3f2b65e640ac",
        "name": "",
        "property": "answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Manage configuration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Open project",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Create delta branch",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 530,
        "y": 420,
        "wires": [
            [
                "5549111ba70f90cf"
            ],
            [
                "bd0be08bdf5b7ad0"
            ],
            [
                "bfaaf56154b511e8"
            ],
            [
                "aabc1848ea544b34"
            ]
        ]
    },
    {
        "id": "bd0be08bdf5b7ad0",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "g": "233598e30fb59362",
        "name": "open Project",
        "func": "msg.terminal = \"powershell\";\nmsg.toSpeak = \"Open the project\";\nmsg.workingDirectory = \"D:/Projects/Sahel\";\nmsg.command = \"code .\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 520,
        "wires": [
            [
                "272f211e8ada725d"
            ]
        ]
    },
    {
        "id": "bfaaf56154b511e8",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "g": "a8cd9bae7a0d9798",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 620,
        "wires": [
            [
                "268721640bba33e3"
            ]
        ]
    },
    {
        "id": "268721640bba33e3",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "a8cd9bae7a0d9798",
        "name": "Create delta branch",
        "x": 990,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "aabc1848ea544b34",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "g": "22f34b8de298fa22",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = \"unrecognized action\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 720,
        "wires": [
            [
                "81c0fd4bbd427cba"
            ]
        ]
    },
    {
        "id": "81c0fd4bbd427cba",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "22f34b8de298fa22",
        "name": "Unrecognized action",
        "x": 990,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "ee2dbb0da11b89c8",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "d2cbc16db312fbed",
        "g": "8e1a987211bad503",
        "name": "",
        "env": [
            {
                "name": "options",
                "value": "array of string values resembles the MCQ options",
                "type": "str"
            }
        ],
        "x": 990,
        "y": 420,
        "wires": [
            [],
            [
                "4d2ba3638aa49653"
            ],
            [
                "e9eb802d40b4c0c5"
            ]
        ]
    },
    {
        "id": "1976535bc8d1c38d",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "8e1a987211bad503",
        "name": "",
        "x": 1370,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e9eb802d40b4c0c5",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "g": "8e1a987211bad503",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 420,
        "wires": [
            [
                "1976535bc8d1c38d"
            ]
        ]
    },
    {
        "id": "272f211e8ada725d",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "233598e30fb59362",
        "name": "Open the project",
        "x": 940,
        "y": 520,
        "wires": [
            [
                "b80fbb114eac869b"
            ]
        ]
    },
    {
        "id": "b80fbb114eac869b",
        "type": "subflow:7725d64c5713a5a0",
        "z": "d2cbc16db312fbed",
        "g": "233598e30fb59362",
        "name": "",
        "x": 1110,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "d499d794266781f0",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "g": "a4daa917f7104e1c",
        "name": "set options",
        "func": "msg.options = ['Commit worklfow changes'];\nmsg.question = \"Pick an option\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 980,
        "wires": [
            [
                "d3b45d90caaf0df6"
            ]
        ]
    },
    {
        "id": "d3b45d90caaf0df6",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "d2cbc16db312fbed",
        "g": "a4daa917f7104e1c",
        "name": "",
        "env": [
            {
                "name": "options",
                "value": "array of string values resembles the MCQ options",
                "type": "str"
            }
        ],
        "x": 490,
        "y": 1060,
        "wires": [
            [
                "3217251375bf0cd5"
            ],
            [],
            [
                "e19a9c583aa52c9b"
            ]
        ]
    },
    {
        "id": "7ef3bdb35551639f",
        "type": "switch",
        "z": "d2cbc16db312fbed",
        "g": "a4daa917f7104e1c",
        "name": "",
        "property": "answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Commit worklfow changes",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 1140,
        "wires": [
            [
                "107ddbf4bc1d2c0e"
            ],
            [
                "b99ff34cf3adcb14"
            ]
        ]
    },
    {
        "id": "b99ff34cf3adcb14",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "g": "f826f4aa243cd7e8",
        "name": "Unrecognized action",
        "func": "msg.toSpeak = \"unrecognized action\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1220,
        "wires": [
            [
                "4e1e1deff5189990"
            ]
        ]
    },
    {
        "id": "4e1e1deff5189990",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "f826f4aa243cd7e8",
        "name": "Unrecognized action",
        "x": 1010,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "e19a9c583aa52c9b",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "g": "3dfbfb4ea54b8312",
        "name": "true: Commit workflow changes",
        "func": "msg.toSpeak = \"Commit workflow changes\";\n\nconst setRemoteOrigin = \"git remote set-url  origin 'https://github.com/georgemesseha/personal-node-red.git'\";\nmsg.command = `git commit -am '${new Date().toLocaleString()}'; ${setRemoteOrigin};  git push;`\nmsg.workingDirectory = \"%userprofile%/.node-red\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 940,
        "wires": [
            [
                "bfe7fa0ee9c3c3e3"
            ]
        ]
    },
    {
        "id": "bfe7fa0ee9c3c3e3",
        "type": "subflow:4178eda1bbbd7002",
        "z": "d2cbc16db312fbed",
        "g": "3dfbfb4ea54b8312",
        "name": "",
        "x": 1390,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "107ddbf4bc1d2c0e",
        "type": "subflow:fd952472de19344b",
        "z": "d2cbc16db312fbed",
        "g": "d2c7b3de1379152c",
        "name": "",
        "x": 750,
        "y": 940,
        "wires": [
            [
                "8be0865da7ccafe7"
            ],
            [],
            []
        ]
    },
    {
        "id": "8be0865da7ccafe7",
        "type": "switch",
        "z": "d2cbc16db312fbed",
        "g": "d2c7b3de1379152c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 940,
        "wires": [
            [
                "e19a9c583aa52c9b"
            ],
            [
                "7e6338356cf17f2f"
            ]
        ]
    },
    {
        "id": "1ffec2d841063e4a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "f51c790edf817e78",
        "name": "",
        "x": 1210,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "7e6338356cf17f2f",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "g": "f51c790edf817e78",
        "name": "false: It's not a git repository. Terminating execution",
        "func": "msg.toSpeak = \"It's not a git repository. Terminating execution\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1060,
        "wires": [
            [
                "1ffec2d841063e4a"
            ]
        ]
    },
    {
        "id": "4e48aa2d54120cbb",
        "type": "inject",
        "z": "d2cbc16db312fbed",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1500,
        "wires": [
            [
                "1d618ebee4d8b9dd"
            ]
        ]
    },
    {
        "id": "cb1338a5e96334e7",
        "type": "subflow:fd952472de19344b",
        "z": "d2cbc16db312fbed",
        "name": "",
        "x": 710,
        "y": 1500,
        "wires": [
            [
                "dae44881d546956a"
            ],
            [
                "9d613fe7a7f636c3"
            ],
            [
                "eeded0a09a7108f7"
            ]
        ]
    },
    {
        "id": "1d618ebee4d8b9dd",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 1",
        "func": "msg.workingDirectory = \"D:\\\\\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1500,
        "wires": [
            [
                "cb1338a5e96334e7"
            ]
        ]
    },
    {
        "id": "297e21fdfb154df6",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "name": "",
        "x": 1110,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "dae44881d546956a",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 2",
        "func": "msg.toSpeak = \"Yes\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1440,
        "wires": [
            [
                "297e21fdfb154df6"
            ]
        ]
    },
    {
        "id": "9d613fe7a7f636c3",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 3",
        "func": "msg.toSpeak = \"No\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1500,
        "wires": [
            [
                "297e21fdfb154df6"
            ]
        ]
    },
    {
        "id": "eeded0a09a7108f7",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 4",
        "func": "msg.toSpeak = \"Failure\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1560,
        "wires": [
            [
                "297e21fdfb154df6"
            ]
        ]
    },
    {
        "id": "5549111ba70f90cf",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "g": "8e1a987211bad503",
        "name": "set options and question",
        "func": "msg.options = [\"Local machine configuration\",\"Deployed branch configuration\"];\nmsg.question = \"Which configuration?\";\nnode.status({fill:\"green\",shape:\"dot\",text:\"Success\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 420,
        "wires": [
            [
                "ee2dbb0da11b89c8"
            ]
        ]
    },
    {
        "id": "240cce09ccbbadb7",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "d4d3f1d585262a5e",
        "name": "Failed branch",
        "env": [
            {
                "name": "toSpeak",
                "value": "Failed branch",
                "type": "str"
            }
        ],
        "x": 1180,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c12bcca664e5d363",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "205b3f2b65e640ac",
        "name": "error 123654",
        "env": [
            {
                "name": "toSpeak",
                "value": "error 123654",
                "type": "str"
            }
        ],
        "x": 1190,
        "y": 260,
        "wires": [
            []
        ]
    }
]