[
    {
        "id": "d2cbc16db312fbed",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2a81a7a539926088",
        "type": "tab",
        "label": "Sahel",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b24567603cf835ad",
        "type": "tab",
        "label": "Gotcha",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9f851333696e4da5",
        "type": "tab",
        "label": "Workshops",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "66dc4606b2245ab2",
        "type": "tab",
        "label": "node-RED",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0c0d2ad2c595d8d7",
        "type": "tab",
        "label": "Search your flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "83fa5debc97eaecb",
        "type": "tab",
        "label": "Main Hierarchy",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "88bd534164ebf0ab",
        "type": "tab",
        "label": "Projects",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "231d43866ed2d184",
        "type": "tab",
        "label": "Workspace",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9aba9cdb650afd6e",
        "type": "tab",
        "label": "Notion",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c0f1d6631219e9f1",
        "type": "tab",
        "label": "Manage open windows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5cc51beeda65e265",
        "type": "tab",
        "label": "Launching Utilities",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "93b537788dd24c1b",
        "type": "tab",
        "label": "Zimbabwe",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6157c33bf9a6e985",
        "type": "tab",
        "label": "AI Tools",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c3da96311434c492",
        "type": "tab",
        "label": "Packages Repos",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3f411aa3ba670cb2",
        "type": "subflow",
        "name": "Mcq",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "0f395ccfbe66a499"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 710,
                "y": 40,
                "wires": [
                    {
                        "id": "a89795192f231183",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1260,
                "y": 100,
                "wires": [
                    {
                        "id": "20a7673afc6ed2fd",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1060,
                "y": 360,
                "wires": [
                    {
                        "id": "af01eaae99bdbdde",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "question",
                "type": "str",
                "value": "string: Prompting user"
            },
            {
                "name": "options",
                "type": "str",
                "value": "string[]: The options available"
            },
            {
                "name": "out - answer",
                "type": "str",
                "value": "string: The selected item"
            }
        ],
        "meta": {
            "desc": "Start Mcq"
        },
        "color": "#E9967A",
        "inputLabels": [
            "options: [], question: \"\""
        ],
        "outputLabels": [
            "Failed",
            "Cancelled",
            "Option selected",
            "Inapplicable"
        ],
        "status": {
            "x": 240,
            "y": 40,
            "wires": [
                {
                    "id": "61db02665363232f",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "4178eda1bbbd7002",
        "type": "subflow",
        "name": "App",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 260,
                "wires": [
                    {
                        "id": "5ff56cb70dcde71d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 260,
                "wires": [
                    {
                        "id": "40dcda0be3cc1abd",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": "string"
            },
            {
                "name": "workingDir",
                "type": "str",
                "value": "string"
            },
            {
                "name": "detachSpawnedProcess",
                "type": "str",
                "value": "boolean"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "icon": "font-awesome/fa-terminal",
        "status": {
            "x": 740,
            "y": 60,
            "wires": [
                {
                    "id": "5bcf68ca5b6d18ea",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "552764fe6e0b1a84",
        "type": "subflow",
        "name": "Speak",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 180,
                "wires": [
                    {
                        "id": "8f02016211bd7db1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 180,
                "wires": [
                    {
                        "id": "d6146d6c9211a484",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "toSpeak",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "icon": "node-red/bridge.svg",
        "status": {
            "x": 460,
            "y": 80,
            "wires": [
                {
                    "id": "05313ae618fa54ce",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "66900ba2a8f4a83a",
        "type": "subflow",
        "name": "Sahell",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 160,
                "wires": [
                    {
                        "id": "80cfd8f678c5f588"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7725d64c5713a5a0",
        "type": "subflow",
        "name": "Run in terminal",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 220,
                "wires": [
                    {
                        "id": "14288d44e4764134"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 800,
                "y": 440,
                "wires": [
                    {
                        "id": "305cc53362b4c3be",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": "string"
            },
            {
                "name": "workingDirectory",
                "type": "str",
                "value": "string"
            },
            {
                "name": "detachSpawnedProcess",
                "type": "str",
                "value": "boolean"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 620,
            "y": 60,
            "wires": [
                {
                    "id": "d4af49bf82b54730",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "fd952472de19344b",
        "type": "subflow",
        "name": "belongsToGitRepo",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 220,
                "wires": [
                    {
                        "id": "c44dcb8ec83bb11a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 220,
                "wires": [
                    {
                        "id": "c44dcb8ec83bb11a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "workingDirectory",
                "type": "str",
                "value": "string"
            },
            {
                "name": "output",
                "type": "str",
                "value": "boolean"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 780,
            "y": 80,
            "wires": [
                {
                    "id": "b939dea23da041a3",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "67d0907b3004484d",
        "type": "subflow",
        "name": "Log",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 260,
                "wires": [
                    {
                        "id": "eadac2317ec8988a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 950,
                "y": 260,
                "wires": [
                    {
                        "id": "a37a3ae3665df4f0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "toLog"
        ],
        "outputLabels": [
            "void"
        ],
        "icon": "font-awesome/fa-pencil-square-o",
        "status": {
            "x": 400,
            "y": 160,
            "wires": [
                {
                    "id": "690b50199733f70c",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "0fc4eeeb2f2b1fb9",
        "type": "subflow",
        "name": "PlaySound_MouseClick",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 300,
                "y": 300,
                "wires": [
                    {
                        "id": "42b883da9df0572f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 300,
                "wires": [
                    {
                        "id": "42b883da9df0572f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c4112ffe1214c7db",
        "type": "subflow",
        "name": "Stdout",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 220,
                "wires": [
                    {
                        "id": "f20fefea06b1e5a1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 180,
                "wires": [
                    {
                        "id": "8ca44f6712ee9d41",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1050,
                "y": 260,
                "wires": [
                    {
                        "id": "8ca44f6712ee9d41",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": ""
            },
            {
                "name": "workingDirectory",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "command: \"\", workingDirectory: \"\""
        ],
        "outputLabels": [
            "exitCode <> 0",
            "exitCode = 0"
        ],
        "status": {
            "x": 740,
            "y": 60,
            "wires": [
                {
                    "id": "5d644f19a30478c3",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "630454ba203bdeb2",
        "type": "subflow",
        "name": "Spy",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 220,
                "wires": [
                    {
                        "id": "3421b92837959e7f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1140,
                "y": 220,
                "wires": [
                    {
                        "id": "900b20562dc99868",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "font-awesome/fa-user-secret",
        "status": {
            "x": 580,
            "y": 80,
            "wires": [
                {
                    "id": "f755870245443155",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "c96d6610ba199ebc",
        "type": "subflow",
        "name": "eval(env) => msg",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 240,
                "wires": [
                    {
                        "id": "41aeb3d70d9e1cda"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 300,
                "wires": [
                    {
                        "id": "829fb4a743420640",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 500,
            "y": 80,
            "wires": [
                {
                    "id": "3774797650d0b37b",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "bbea173bec06991e",
        "type": "subflow",
        "name": "Navigate to here",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 360,
                "y": 200,
                "wires": [
                    {
                        "id": "1dcc747d25575675"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 120,
                "wires": [
                    {
                        "id": "d6dd512304b44495",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "79b3adc8f3ea8d41",
        "type": "subflow",
        "name": "Tile windows of a process",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 140,
                "wires": [
                    {
                        "id": "9d6ea776ae79ed65"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "processName",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b23fac97ba53404f",
        "type": "subflow",
        "name": "Open in default browser",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 160,
                "wires": [
                    {
                        "id": "e1b695d731502be4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 160,
                "wires": [
                    {
                        "id": "51e4df9d73f8b93f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "url",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 540,
            "y": 40,
            "wires": [
                {
                    "id": "195aab9f448032cc",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "46adcf9a15047f14",
        "type": "group",
        "z": "66900ba2a8f4a83a",
        "name": "Sahel: pick an action",
        "style": {
            "label": true
        },
        "nodes": [
            "80cfd8f678c5f588",
            "29c2a52829a460e0"
        ],
        "x": 254,
        "y": 111.5,
        "w": 352,
        "h": 97
    },
    {
        "id": "36a66f9784294584",
        "type": "group",
        "z": "66900ba2a8f4a83a",
        "name": "Manage configuration",
        "style": {
            "label": true,
            "fill": "#ff3f3f"
        },
        "nodes": [
            "9b46ab1d2752f15b",
            "f98cef9655b73c36",
            "e29790c7948ceb48",
            "fc1a122934e79424"
        ],
        "x": 314,
        "y": 231.5,
        "w": 712,
        "h": 97
    },
    {
        "id": "895dc996bae1e925",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "Sahel",
        "style": {
            "label": true,
            "fill": "#6f2fa0"
        },
        "nodes": [
            "fb10373a483c72d6",
            "baa33a4799b6a1ad",
            "bcc5de1d48871a1f",
            "55ac162180440a1e",
            "1f0b8f059dc9909b",
            "56f0325908066f66",
            "5f2c6babf015cb08",
            "62833578a3bcc1b6",
            "8e8897bcbfed8f93"
        ],
        "x": 554,
        "y": 59,
        "w": 858,
        "h": 648
    },
    {
        "id": "a3b8de1e949dac34",
        "type": "group",
        "z": "b24567603cf835ad",
        "name": "Gotcha",
        "style": {
            "label": true,
            "fill": "#3f93cf"
        },
        "nodes": [
            "e8f86dc43a1d7dd4",
            "7cc7d74b3edcb61b",
            "4602c80b271db6a8",
            "eda7de984f2e78fb"
        ],
        "x": 214,
        "y": 73,
        "w": 1184,
        "h": 780
    },
    {
        "id": "8a90e1f4484ae776",
        "type": "group",
        "z": "9f851333696e4da5",
        "name": "Testing NodeJS on the fly script",
        "style": {
            "label": true
        },
        "nodes": [
            "5f495ffd68a2c043",
            "4323a5571b21359f",
            "58e42705b26499db"
        ],
        "x": 694,
        "y": 59,
        "w": 452,
        "h": 162
    },
    {
        "id": "4c3a5f679ccdc9de",
        "type": "group",
        "z": "66dc4606b2245ab2",
        "name": "Commit changes to node-RED repo",
        "style": {
            "stroke": "#3f3d4d",
            "fill": "#262533",
            "label": true,
            "color": "#ececec"
        },
        "nodes": [
            "a86cec7850552373",
            "f624215885e49d4d"
        ],
        "x": 814,
        "y": 159,
        "w": 312,
        "h": 82
    },
    {
        "id": "b2d4114c04cb6f09",
        "type": "group",
        "z": "66dc4606b2245ab2",
        "name": "Check current remote repo",
        "style": {
            "label": true
        },
        "nodes": [
            "3cda33f00a8b50c1",
            "27b575852ed45707",
            "693f3b71b143a290"
        ],
        "x": 1024,
        "y": 259,
        "w": 352,
        "h": 162
    },
    {
        "id": "d4851dcab8bfd682",
        "type": "group",
        "z": "0c0d2ad2c595d8d7",
        "name": "Load endpoint nodes",
        "style": {
            "label": true
        },
        "nodes": [
            "401247fa346deaa1",
            "fbdce406ac18928e"
        ],
        "x": 614,
        "y": 139,
        "w": 452,
        "h": 82
    },
    {
        "id": "d1cb9ae10eaaf7a5",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "Search your flows",
        "style": {
            "label": true
        },
        "nodes": [
            "462f77be0946762f"
        ],
        "x": 634,
        "y": 79,
        "w": 119,
        "h": 82
    },
    {
        "id": "c6d416c97692b61f",
        "type": "group",
        "z": "88bd534164ebf0ab",
        "name": "Pick a project",
        "style": {
            "label": true
        },
        "nodes": [
            "b4395c836a8a31d4",
            "bbd69d6566786bd9",
            "57afd1505bc639d5",
            "d03829623a2a7f73"
        ],
        "x": 474,
        "y": 39,
        "w": 692,
        "h": 149.5
    },
    {
        "id": "be9b248c55b68f73",
        "type": "group",
        "z": "88bd534164ebf0ab",
        "name": "Gotcha",
        "style": {
            "label": true
        },
        "nodes": [
            "1f9abd20675c99df"
        ],
        "x": 864,
        "y": 419,
        "w": 82,
        "h": 82
    },
    {
        "id": "eebee2a51eea17fe",
        "type": "group",
        "z": "88bd534164ebf0ab",
        "name": "Sahel",
        "style": {
            "label": true
        },
        "nodes": [
            "4fa558a20c6022e9"
        ],
        "x": 864,
        "y": 219,
        "w": 82,
        "h": 82
    },
    {
        "id": "cc542cb9a782beb0",
        "type": "group",
        "z": "88bd534164ebf0ab",
        "name": "node-RED",
        "style": {
            "label": true
        },
        "nodes": [
            "25f6bee36d2516b0"
        ],
        "x": 864,
        "y": 519,
        "w": 82,
        "h": 82
    },
    {
        "id": "d7a707b03476512d",
        "type": "group",
        "z": "83fa5debc97eaecb",
        "name": "Workshops",
        "style": {
            "label": true
        },
        "nodes": [
            "937ddc8d124bbfbc"
        ],
        "x": 884,
        "y": 299,
        "w": 82,
        "h": 82
    },
    {
        "id": "876c6331f050aedc",
        "type": "group",
        "z": "83fa5debc97eaecb",
        "name": "Workspace",
        "style": {
            "label": true
        },
        "nodes": [
            "4dfa4a66c194ba2d"
        ],
        "x": 884,
        "y": 179,
        "w": 82,
        "h": 82
    },
    {
        "id": "0939cfee324d32b3",
        "type": "group",
        "z": "83fa5debc97eaecb",
        "name": "Projects",
        "style": {
            "label": true
        },
        "nodes": [
            "9de929cb21c72086"
        ],
        "x": 884,
        "y": 59,
        "w": 82,
        "h": 82
    },
    {
        "id": "7fd3b69301a460a5",
        "type": "group",
        "z": "231d43866ed2d184",
        "name": "Notion ...",
        "style": {
            "label": true
        },
        "nodes": [
            "119eb9845ad10e6f"
        ],
        "x": 844,
        "y": 159,
        "w": 82,
        "h": 82
    },
    {
        "id": "b2d82eb2553e598d",
        "type": "group",
        "z": "231d43866ed2d184",
        "name": "Manage open windows ...",
        "style": {
            "label": true
        },
        "nodes": [
            "e6d09a8a7f8e8bf3"
        ],
        "x": 844,
        "y": 39,
        "w": 167,
        "h": 82
    },
    {
        "id": "413c8e337afa7cb7",
        "type": "group",
        "z": "c0f1d6631219e9f1",
        "name": "Tile",
        "style": {
            "label": true
        },
        "nodes": [
            "c24b2fae596d1233",
            "f0e0206b94c16e0b",
            "174f025c8629da16",
            "efcd701a6f7c287f",
            "54a5279839f57b66",
            "cccac219fc596bc3"
        ],
        "x": 734,
        "y": 279,
        "w": 652,
        "h": 202
    },
    {
        "id": "d5b871b6c3d10e5f",
        "type": "group",
        "z": "83fa5debc97eaecb",
        "name": "Launching Utilities",
        "style": {
            "label": true
        },
        "nodes": [
            "8d168a45978a628d"
        ],
        "x": 874,
        "y": 399,
        "w": 122,
        "h": 82
    },
    {
        "id": "cb7d25359320703a",
        "type": "group",
        "z": "0c0d2ad2c595d8d7",
        "name": "Move to the target flow",
        "style": {
            "label": true
        },
        "nodes": [
            "4a06e4fe196c8287",
            "e99a53bc2e1a2ae2"
        ],
        "x": 894,
        "y": 319,
        "w": 432,
        "h": 82
    },
    {
        "id": "bcc5de1d48871a1f",
        "type": "group",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "Manage configuration",
        "style": {
            "label": true,
            "fill": "#3f93cf"
        },
        "nodes": [
            "b257d92d6bd6c732",
            "99a3fd29f24b953f"
        ],
        "x": 814,
        "y": 159,
        "w": 312,
        "h": 109.5
    },
    {
        "id": "55ac162180440a1e",
        "type": "group",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "Create delta branch",
        "style": {
            "label": true
        },
        "nodes": [
            "4eca86ceefc5f369"
        ],
        "x": 774,
        "y": 479,
        "w": 232,
        "h": 82
    },
    {
        "id": "1f0b8f059dc9909b",
        "type": "group",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "Unexpected",
        "style": {
            "label": true,
            "fill": "#ff0000"
        },
        "nodes": [
            "14c1b0b52a6f12fc"
        ],
        "x": 774,
        "y": 599,
        "w": 252,
        "h": 82
    },
    {
        "id": "56f0325908066f66",
        "type": "group",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "Open project ",
        "style": {
            "label": true
        },
        "nodes": [
            "5782eda78f135e4a",
            "dff2244c20c47fac",
            "840335298b947951",
            "4f576fa242ddff11",
            "b552921cce0ffae7"
        ],
        "x": 814,
        "y": 279,
        "w": 572,
        "h": 162
    },
    {
        "id": "7cc7d74b3edcb61b",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "style": {
            "stroke": "#000000",
            "label": true
        },
        "nodes": [
            "c3c24425ea8ac0db",
            "74ef18237a435ad3",
            "83aeab0741db8810",
            "9e49a1ff1ff51f65",
            "8afb8df0eeea8641",
            "61cecc79ecae9c9c",
            "9ada3be8aad7cf16",
            "cad789a1334eb0a1",
            "7b6831fed3eb3583"
        ],
        "x": 428,
        "y": 99,
        "w": 944,
        "h": 728
    },
    {
        "id": "83aeab0741db8810",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "style": {
            "stroke": "#3f3d4d",
            "stroke-opacity": "1",
            "fill": "#262533",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#ececec"
        },
        "nodes": [
            "fce2ae6295dee262",
            "c28a96954b4b1b30"
        ],
        "x": 454,
        "y": 159,
        "w": 572,
        "h": 82
    },
    {
        "id": "9e49a1ff1ff51f65",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open in Rider",
        "style": {
            "stroke": "#3f3d4d",
            "fill": "#262533",
            "label": true,
            "color": "#ececec"
        },
        "nodes": [
            "12abe6b8dc1c9820",
            "5c48bc25721f3efb"
        ],
        "x": 994,
        "y": 319,
        "w": 352,
        "h": 122
    },
    {
        "id": "8afb8df0eeea8641",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open the project",
        "style": {
            "label": true
        },
        "nodes": [
            "d089aba26f52fe05",
            "ae8f25dcbf57990e"
        ],
        "x": 634,
        "y": 391.5,
        "w": 302,
        "h": 97
    },
    {
        "id": "61cecc79ecae9c9c",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open settings.js",
        "style": {
            "label": true
        },
        "nodes": [
            "863baa64dcc322dc",
            "28f8e6808b8b46af",
            "32f901e6698ef452"
        ],
        "x": 634,
        "y": 619,
        "w": 672,
        "h": 82
    },
    {
        "id": "9ada3be8aad7cf16",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Restart Nod-RED",
        "style": {
            "label": true
        },
        "nodes": [
            "48286ea2d25319f7",
            "c43686785b6d461b"
        ],
        "x": 634,
        "y": 719,
        "w": 302,
        "h": 82
    },
    {
        "id": "cad789a1334eb0a1",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open in terminal",
        "style": {
            "label": true
        },
        "nodes": [
            "34cc94d8b1496bc7",
            "4a12457e360b25fd"
        ],
        "x": 994,
        "y": 459,
        "w": 252,
        "h": 122
    },
    {
        "id": "7b6831fed3eb3583",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "node-RED",
        "style": {
            "label": true
        },
        "nodes": [
            "45336ffdcd3bce3e"
        ],
        "x": 634,
        "y": 279,
        "w": 82,
        "h": 82
    },
    {
        "id": "d726de86ecd8c1a2",
        "type": "group",
        "z": "88bd534164ebf0ab",
        "name": "Zimbabwe",
        "style": {
            "label": true
        },
        "nodes": [
            "b04f7c947ff65bf9"
        ],
        "x": 864,
        "y": 319,
        "w": 82,
        "h": 82
    },
    {
        "id": "3a32e7f9469c4dde",
        "type": "group",
        "z": "5cc51beeda65e265",
        "name": "Is down for me only?",
        "style": {
            "label": true
        },
        "nodes": [
            "e907169b1122cac6",
            "cfc88a5cd1ce0312",
            "95afee336b1163a5"
        ],
        "x": 854,
        "y": 19,
        "w": 432,
        "h": 202
    },
    {
        "id": "5e312f027eab902b",
        "type": "group",
        "z": "6157c33bf9a6e985",
        "name": "DeepSeek",
        "style": {
            "label": true
        },
        "nodes": [
            "399a6caf9af03c7c",
            "ca5f946fc01e9d42",
            "15835e0687dd64d8"
        ],
        "x": 814,
        "y": 239,
        "w": 412,
        "h": 142
    },
    {
        "id": "91f45f1e0d2eea44",
        "type": "group",
        "z": "6157c33bf9a6e985",
        "name": "ChatGPT",
        "style": {
            "label": true
        },
        "nodes": [
            "9679086dd016502f",
            "bbf380a8bfe336cd",
            "ee77cb8e03e4b2da"
        ],
        "x": 814,
        "y": 79,
        "w": 392,
        "h": 142
    },
    {
        "id": "522d89bd3a697eaa",
        "type": "group",
        "z": "6157c33bf9a6e985",
        "name": "AI",
        "style": {
            "label": true
        },
        "nodes": [
            "94f606b9408a9788",
            "fd4a6c9b2acebfde"
        ],
        "x": 454,
        "y": 151.5,
        "w": 292,
        "h": 109.5
    },
    {
        "id": "8c135555543e19ec",
        "type": "group",
        "z": "5cc51beeda65e265",
        "name": "AI Tools",
        "style": {
            "label": true
        },
        "nodes": [
            "b0162ac84e19adb7"
        ],
        "x": 864,
        "y": 259,
        "w": 82,
        "h": 82
    },
    {
        "id": "455587afd6b612e2",
        "type": "group",
        "z": "5cc51beeda65e265",
        "name": "Packages Repos",
        "style": {
            "label": true
        },
        "nodes": [
            "af31c565bcf6ccd6"
        ],
        "x": 874,
        "y": 379,
        "w": 114,
        "h": 82
    },
    {
        "id": "8e8897bcbfed8f93",
        "type": "junction",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "x": 760,
        "y": 280,
        "wires": [
            [
                "840335298b947951",
                "5782eda78f135e4a"
            ]
        ]
    },
    {
        "id": "65d55b910b81a871",
        "type": "junction",
        "z": "66dc4606b2245ab2",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "dfa3a89525f09476",
                "3f8ed08e204ffd30"
            ]
        ]
    },
    {
        "id": "47f17cbee36a87af",
        "type": "junction",
        "z": "66dc4606b2245ab2",
        "x": 920,
        "y": 280,
        "wires": [
            [
                "3cda33f00a8b50c1",
                "27b575852ed45707"
            ]
        ]
    },
    {
        "id": "62d3d2fc63040766",
        "type": "junction",
        "z": "66dc4606b2245ab2",
        "x": 820,
        "y": 600,
        "wires": [
            [
                "47c2af09c675b60e",
                "500e84ad35bd3461"
            ]
        ]
    },
    {
        "id": "6fe07fb19f962a8b",
        "type": "junction",
        "z": "d2cbc16db312fbed",
        "x": 540,
        "y": 120,
        "wires": [
            [
                "462f77be0946762f"
            ]
        ]
    },
    {
        "id": "79dd080778281f77",
        "type": "junction",
        "z": "9f851333696e4da5",
        "x": 1200,
        "y": 120,
        "wires": [
            [
                "553d42f63a890b17"
            ]
        ]
    },
    {
        "id": "33bce225cf9bb2b9",
        "type": "junction",
        "z": "93b537788dd24c1b",
        "x": 400,
        "y": 160,
        "wires": [
            [
                "62c7625d9a0cb2a8"
            ]
        ]
    },
    {
        "id": "1ae71bd763ce2359",
        "type": "junction",
        "z": "6157c33bf9a6e985",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "458f1f778fe96631"
            ]
        ]
    },
    {
        "id": "ccc07f140935b625",
        "type": "http request",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/mcq",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 100,
        "wires": [
            [
                "ebd18d02fd177378"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "af01eaae99bdbdde",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.warn(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\");\nnode.warn(msg.payload);\nconst strAnswer = msg.payload.answer + \": \" + msg.payload.options[msg.payload.answer];\nnode.status({ fill: \"green\", shape: \"ring\", text: strAnswer});\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "61db02665363232f",
        "type": "status",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "scope": [
            "af01eaae99bdbdde",
            "b63a4243c7b24f67",
            "0f395ccfbe66a499",
            "174468b69c4a6a85",
            "a89795192f231183"
        ],
        "x": 100,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ebd18d02fd177378",
        "type": "switch",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "-2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 770,
        "y": 100,
        "wires": [
            [
                "174468b69c4a6a85"
            ],
            [
                "b63a4243c7b24f67"
            ],
            [
                "7c3f059babc9fca1"
            ]
        ]
    },
    {
        "id": "20a7673afc6ed2fd",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3f411aa3ba670cb2",
        "name": "Declined",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 1100,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b63a4243c7b24f67",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"gray\", shape: \"ring\", text: \"declined\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 100,
        "wires": [
            [
                "20a7673afc6ed2fd"
            ]
        ]
    },
    {
        "id": "f3c8be8f663abd91",
        "type": "catch",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 380,
        "y": 40,
        "wires": [
            [
                "a89795192f231183"
            ]
        ]
    },
    {
        "id": "be7c7c04d2da7d2a",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "resolve input",
        "func": "// if(!msg.payload) msg.payload = {}\n\nmsg.payload = {\n    options : eval(env.get('options')),\n    question: eval(env.get('question'))\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 100,
        "wires": [
            [
                "ccc07f140935b625"
            ]
        ]
    },
    {
        "id": "0f395ccfbe66a499",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"blue\", shape: \"dot\", text: \"active\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 100,
        "wires": [
            [
                "be7c7c04d2da7d2a"
            ]
        ]
    },
    {
        "id": "7c3f059babc9fca1",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "update state",
        "func": "\nmsg.state = {\n    ... msg.state,\n    answer: msg.payload.answer\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 260,
        "wires": [
            [
                "af01eaae99bdbdde"
            ]
        ]
    },
    {
        "id": "a89795192f231183",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"red\", shape: \"dot\", text: \"Error\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "174468b69c4a6a85",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"gray\", shape: \"ring\", text: \"Inapplicable\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 40,
        "wires": [
            [
                "d541aa36901894f7"
            ]
        ]
    },
    {
        "id": "d541aa36901894f7",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3f411aa3ba670cb2",
        "d": true,
        "name": "Inapplicable",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Inapplicable\"",
                "type": "str"
            }
        ],
        "x": 1110,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "bf8b03d7e2a96eea",
        "type": "http request",
        "z": "4178eda1bbbd7002",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/execBase64",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 260,
        "wires": [
            [
                "40dcda0be3cc1abd"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "a7ecc12d750180de",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set payload",
        "func": "const plainCommand = eval(env.get(\"command\"));\nconst base64Command = Buffer.from(plainCommand, 'utf16le').toString('base64');\n\nnode.warn(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\nnode.warn(base64Command);\n\n\nmsg.payload = {\n    command: base64Command,\n    workingDirectory: eval(env.get(\"workingDir\")),\n    detachSpawnedProcess: eval(env.get('detachSpawnedProcess'))\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 260,
        "wires": [
            [
                "bf8b03d7e2a96eea"
            ]
        ]
    },
    {
        "id": "5bcf68ca5b6d18ea",
        "type": "status",
        "z": "4178eda1bbbd7002",
        "name": "",
        "scope": null,
        "x": 390,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5ff56cb70dcde71d",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set status",
        "func": "node.status({fill:\"blue\",shape:\"dot\",text:\"Executing\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "a7ecc12d750180de"
            ]
        ]
    },
    {
        "id": "40dcda0be3cc1abd",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"Done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "108dd5729302b6a2",
        "type": "catch",
        "z": "4178eda1bbbd7002",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 380,
        "y": 140,
        "wires": [
            [
                "25bfdc21b1a3e63f"
            ]
        ]
    },
    {
        "id": "25bfdc21b1a3e63f",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set status",
        "func": "node.status({fill:\"red\",shape:\"dot\",text:\"Error\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a80540014bb4644d",
        "type": "http request",
        "z": "552764fe6e0b1a84",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/speak",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 180,
        "wires": [
            [
                "d6146d6c9211a484"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "05313ae618fa54ce",
        "type": "status",
        "z": "552764fe6e0b1a84",
        "name": "",
        "scope": null,
        "x": 320,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3cdf863547072457",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "resolve input",
        "func": "msg.payload = {\n    toSpeak: eval(env.get('toSpeak'))\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 180,
        "wires": [
            [
                "a80540014bb4644d"
            ]
        ]
    },
    {
        "id": "d6146d6c9211a484",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "set status",
        "func": "node.status({ fill: \"green\", shape: \"ring\", text: \"Spoken\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8f02016211bd7db1",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "set status",
        "func": "node.status({ fill: \"yellow\", shape: \"ring\", text: \"Speaking\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 180,
        "wires": [
            [
                "3cdf863547072457"
            ]
        ]
    },
    {
        "id": "80cfd8f678c5f588",
        "type": "change",
        "z": "66900ba2a8f4a83a",
        "g": "46adcf9a15047f14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[\"Manage configuration\",\"Open project\", \"Create delta branch\"]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "question",
                "pt": "msg",
                "to": "Pick an action:",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "29c2a52829a460e0"
            ]
        ]
    },
    {
        "id": "29c2a52829a460e0",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "66900ba2a8f4a83a",
        "g": "46adcf9a15047f14",
        "name": "",
        "env": [
            {
                "name": "options",
                "value": "array of string values resembles the MCQ options",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "12f9d30c8ef8d9e2",
        "type": "switch",
        "z": "66900ba2a8f4a83a",
        "name": "",
        "property": "answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Manage configuration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Open project",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Create delta branch",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 190,
        "y": 280,
        "wires": [
            [
                "9b46ab1d2752f15b"
            ],
            [
                "cc0fb9d167b0c25b"
            ],
            [
                "731c3bf96a90685a"
            ],
            [
                "e91ca3c661a6fd86"
            ]
        ]
    },
    {
        "id": "9b46ab1d2752f15b",
        "type": "change",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[\"Local machine configuration\",\"Deployed branch configuration\"]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "question",
                "pt": "msg",
                "to": "Which configuration:",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 280,
        "wires": [
            [
                "f98cef9655b73c36"
            ]
        ]
    },
    {
        "id": "f98cef9655b73c36",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "",
        "env": [
            {
                "name": "options",
                "value": "array of string values resembles the MCQ options",
                "type": "str"
            }
        ],
        "x": 590,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e29790c7948ceb48",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "",
        "x": 950,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fc1a122934e79424",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            [
                "e29790c7948ceb48"
            ]
        ]
    },
    {
        "id": "cc0fb9d167b0c25b",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 380,
        "wires": [
            [
                "4a33476e383f3c3c"
            ]
        ]
    },
    {
        "id": "4a33476e383f3c3c",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "name": "Open project",
        "x": 630,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "731c3bf96a90685a",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 440,
        "wires": [
            [
                "7c3ca5de45a9a2cb"
            ]
        ]
    },
    {
        "id": "7c3ca5de45a9a2cb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "name": "Create delta branch",
        "x": 650,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e91ca3c661a6fd86",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = \"unrecognized action\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 500,
        "wires": [
            [
                "5b834e82bef1f135"
            ]
        ]
    },
    {
        "id": "5b834e82bef1f135",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "name": "Unrecognized action",
        "x": 650,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "fa81138c3d4a4454",
        "type": "http request",
        "z": "7725d64c5713a5a0",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/exec",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 440,
        "wires": [
            [
                "305cc53362b4c3be"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "7691eb48d8550e58",
        "type": "function",
        "z": "7725d64c5713a5a0",
        "name": "set payload",
        "func": "const expCommand = env.get('command');\nconst expWorkingDirectory = env.get('workingDirectory');\nconst detachSpawnedProcess = env.get('detachSpawnedProcess')\n\nmsg.payload.command = eval(expCommand);\nmsg.payload.workingDirectory = eval(expWorkingDirectory);\nmsg.payload.detachSpawnedProcess = eval(detachSpawnedProcess);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 220,
        "wires": [
            [
                "fa81138c3d4a4454"
            ]
        ]
    },
    {
        "id": "14288d44e4764134",
        "type": "function",
        "z": "7725d64c5713a5a0",
        "name": "set status",
        "func": "node.status({fill: \"blue\", shape: \"dot\", text:\"running\"})\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "7691eb48d8550e58"
            ]
        ]
    },
    {
        "id": "305cc53362b4c3be",
        "type": "function",
        "z": "7725d64c5713a5a0",
        "name": "function 7",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"Done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d4af49bf82b54730",
        "type": "status",
        "z": "7725d64c5713a5a0",
        "name": "",
        "scope": null,
        "x": 310,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1fbaae95e77ae315",
        "type": "subflow:c4112ffe1214c7db",
        "z": "fd952472de19344b",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "`git -C ${eval(env.get(\"workingDirectory\"))} rev-parse --is-inside-work-tree`",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "msg.payload.workingDirectory",
                "type": "str"
            }
        ],
        "x": 830,
        "y": 220,
        "wires": [
            [],
            [
                "0bcbf9cb961dbafa"
            ]
        ]
    },
    {
        "id": "d732e8bed0d68acb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fd952472de19344b",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "msg.payload.stdout",
                "type": "str"
            }
        ],
        "x": 1170,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "4dc0551d20dacf53",
        "type": "function",
        "z": "fd952472de19344b",
        "name": "function 5",
        "func": "throw \"an intended exception\"\nnode.status({fill:\"blue\",shape:\"dot\",text:\"Running\"});\nmsg.payload.workingDirectory = eval(env.get('workingDirectory'))\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "2c18de2cdb381053"
            ]
        ]
    },
    {
        "id": "b939dea23da041a3",
        "type": "status",
        "z": "fd952472de19344b",
        "name": "",
        "scope": null,
        "x": 520,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "0bcbf9cb961dbafa",
        "type": "function",
        "z": "fd952472de19344b",
        "name": "function 10",
        "func": "node.status({fill:\"green\",shape:\"ring\",text: \"done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 220,
        "wires": [
            [
                "d732e8bed0d68acb"
            ]
        ]
    },
    {
        "id": "51dd07d7eda2b7a5",
        "type": "template",
        "z": "fd952472de19344b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 300,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1dddaba7a09f598c",
        "type": "catch",
        "z": "fd952472de19344b",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 520,
        "y": 140,
        "wires": [
            [
                "83bcc23514c1a879"
            ]
        ]
    },
    {
        "id": "1c1b462109047b27",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fd952472de19344b",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "msg.error",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c44dcb8ec83bb11a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fd952472de19344b",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "'got here from belongs to git repo'",
                "type": "str"
            }
        ],
        "x": 230,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2c18de2cdb381053",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fd952472de19344b",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "'got there'",
                "type": "str"
            }
        ],
        "x": 690,
        "y": 220,
        "wires": [
            [
                "1fbaae95e77ae315"
            ]
        ]
    },
    {
        "id": "83bcc23514c1a879",
        "type": "function",
        "z": "fd952472de19344b",
        "d": true,
        "name": "function 11",
        "func": "node.error(msg.error, msg)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 140,
        "wires": [
            [
                "1c1b462109047b27"
            ]
        ]
    },
    {
        "id": "eadac2317ec8988a",
        "type": "function",
        "z": "67d0907b3004484d",
        "name": "set status \"logging\"",
        "func": "node.status({fill:\"yellow\",shape:\"dot\",text:\"logging\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 260,
        "wires": [
            [
                "fa0f59c319d74ca7"
            ]
        ]
    },
    {
        "id": "fa0f59c319d74ca7",
        "type": "http request",
        "z": "67d0907b3004484d",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/log",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 260,
        "wires": [
            [
                "a37a3ae3665df4f0"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "690b50199733f70c",
        "type": "status",
        "z": "67d0907b3004484d",
        "name": "",
        "scope": null,
        "x": 260,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a37a3ae3665df4f0",
        "type": "function",
        "z": "67d0907b3004484d",
        "name": "set status \"logged\"",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"logged\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "42b883da9df0572f",
        "type": "http request",
        "z": "0fc4eeeb2f2b1fb9",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/playClick",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 300,
        "wires": [
            []
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "0492d8c92761fae3",
        "type": "http in",
        "z": "0fc4eeeb2f2b1fb9",
        "name": "",
        "url": "/playClick",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 440,
        "wires": [
            [
                "42b883da9df0572f"
            ]
        ]
    },
    {
        "id": "f20fefea06b1e5a1",
        "type": "function",
        "z": "c4112ffe1214c7db",
        "name": "resolve input",
        "func": "node.status({ fill: \"yellow\", shape: \"dot\", text: \"running ...\" });\n\nmsg.payload.command = eval(env.get('command'));\nmsg.payload.workingDirectory = eval(env.get('workingDirectory'));\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "65159ca6a253de16"
            ]
        ]
    },
    {
        "id": "65159ca6a253de16",
        "type": "http request",
        "z": "c4112ffe1214c7db",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/stdout",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 220,
        "wires": [
            [
                "8ca44f6712ee9d41"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "5d644f19a30478c3",
        "type": "status",
        "z": "c4112ffe1214c7db",
        "name": "",
        "scope": null,
        "x": 510,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8ca44f6712ee9d41",
        "type": "switch",
        "z": "c4112ffe1214c7db",
        "name": "",
        "property": "payload.exitCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6b48a278f99eb602",
        "type": "function",
        "z": "630454ba203bdeb2",
        "name": "set payload",
        "func": "msg.payload = {\n    ... msg.payload,\n    spyNodeId: node.id,\n}\n\nmsg.payload.spyNodeId = node.id;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 220,
        "wires": [
            [
                "69f791a222ca020e"
            ]
        ]
    },
    {
        "id": "69f791a222ca020e",
        "type": "http request",
        "z": "630454ba203bdeb2",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:5101/onSpyNode",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 220,
        "wires": [
            [
                "900b20562dc99868"
            ]
        ]
    },
    {
        "id": "cb847b77e3ec4f9b",
        "type": "subflow:552764fe6e0b1a84",
        "z": "630454ba203bdeb2",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Spy launched\"",
                "type": "str"
            }
        ],
        "x": 490,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "900b20562dc99868",
        "type": "function",
        "z": "630454ba203bdeb2",
        "name": "Set status",
        "func": "node.status({ fill: \"green\", shape: \"ring\", text: \"Done\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "3421b92837959e7f",
        "type": "function",
        "z": "630454ba203bdeb2",
        "name": "Set status",
        "func": "node.status({ fill: \"blue\", shape: \"dot\", text: \"reporting\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 220,
        "wires": [
            [
                "6b48a278f99eb602"
            ]
        ]
    },
    {
        "id": "f755870245443155",
        "type": "status",
        "z": "630454ba203bdeb2",
        "name": "",
        "scope": null,
        "x": 410,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "41aeb3d70d9e1cda",
        "type": "function",
        "z": "c96d6610ba199ebc",
        "name": "populate",
        "func": "const keysStr = env.get('argNames');\nconst keys = keysStr.split(',');\n\n\nfor(let key of keys)\n{\n    key = key.trim();\n    const valueExpr = env.get(key)\n    if(!valueExpr) continue;\n\n\n    const value = eval(valueExpr);\n    msg.payload[key] = value;\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 240,
        "wires": [
            [
                "829fb4a743420640"
            ]
        ]
    },
    {
        "id": "3774797650d0b37b",
        "type": "status",
        "z": "c96d6610ba199ebc",
        "name": "",
        "scope": null,
        "x": 260,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "829fb4a743420640",
        "type": "switch",
        "z": "c96d6610ba199ebc",
        "name": "",
        "property": "exit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "6dbcaee77b64b5ac"
            ],
            []
        ]
    },
    {
        "id": "01acfafb58984259",
        "type": "subflow:552764fe6e0b1a84",
        "z": "c96d6610ba199ebc",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"arg names were not provided to eval env to message var\"",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6dbcaee77b64b5ac",
        "type": "function",
        "z": "c96d6610ba199ebc",
        "name": "set error status",
        "func": "node.status({fill:\"red\",shape:\"dot\",text:\"No envVars provided\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 160,
        "wires": [
            [
                "01acfafb58984259"
            ]
        ]
    },
    {
        "id": "1dcc747d25575675",
        "type": "function",
        "z": "bbea173bec06991e",
        "name": "function 12",
        "func": "throw \"fake exception\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d6dd512304b44495",
        "type": "catch",
        "z": "bbea173bec06991e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d666b9177808847a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "bbea173bec06991e",
        "name": "\"Caught\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Caught\"",
                "type": "str"
            }
        ],
        "x": 690,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9d6ea776ae79ed65",
        "type": "subflow:630454ba203bdeb2",
        "z": "79b3adc8f3ea8d41",
        "name": "",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "97f715f89de139d1",
                "3910bb538d7bf580"
            ]
        ]
    },
    {
        "id": "114724c173b580ba",
        "type": "http request",
        "z": "79b3adc8f3ea8d41",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:5101/arrangeWindowsOfProcess",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 780,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "3910bb538d7bf580",
        "type": "function",
        "z": "79b3adc8f3ea8d41",
        "name": "set state",
        "func": "const processName = eval(env.get('processName'));\nmsg.payload = {\n    processName: processName\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 140,
        "wires": [
            [
                "114724c173b580ba"
            ]
        ]
    },
    {
        "id": "97f715f89de139d1",
        "type": "subflow:552764fe6e0b1a84",
        "z": "79b3adc8f3ea8d41",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Tile \" + eval(env.get('processName')) + \"windows\"",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d1c840caf363daf3",
        "type": "http request",
        "z": "b23fac97ba53404f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:5101/openInDefaultBrowser",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 160,
        "wires": [
            [
                "51e4df9d73f8b93f"
            ]
        ]
    },
    {
        "id": "e1b695d731502be4",
        "type": "function",
        "z": "b23fac97ba53404f",
        "name": "set payload",
        "func": "const url = eval(env.get('url'))\nmsg.payload = {\n    url: url\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 160,
        "wires": [
            [
                "e8e287cecc8b72fe"
            ]
        ]
    },
    {
        "id": "195aab9f448032cc",
        "type": "status",
        "z": "b23fac97ba53404f",
        "name": "",
        "scope": null,
        "x": 390,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e8e287cecc8b72fe",
        "type": "function",
        "z": "b23fac97ba53404f",
        "name": "set status",
        "func": "node.status({fill:\"blue\",shape:\"dot\",text:\"Requesting\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 160,
        "wires": [
            [
                "d1c840caf363daf3"
            ]
        ]
    },
    {
        "id": "51e4df9d73f8b93f",
        "type": "function",
        "z": "b23fac97ba53404f",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ccc22ff9a5668b2b",
        "type": "http in",
        "z": "d2cbc16db312fbed",
        "name": "",
        "url": "/mainFlow",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 180,
        "wires": [
            [
                "fe4a3025b25f3f40"
            ]
        ]
    },
    {
        "id": "4e48aa2d54120cbb",
        "type": "inject",
        "z": "d2cbc16db312fbed",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 1580,
        "wires": [
            [
                "1d618ebee4d8b9dd"
            ]
        ]
    },
    {
        "id": "cb1338a5e96334e7",
        "type": "subflow:fd952472de19344b",
        "z": "d2cbc16db312fbed",
        "name": "",
        "x": 1010,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "1d618ebee4d8b9dd",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 1",
        "func": "msg.workingDirectory = \"D:\\\\\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1580,
        "wires": [
            [
                "cb1338a5e96334e7"
            ]
        ]
    },
    {
        "id": "297e21fdfb154df6",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "name": "",
        "x": 1410,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "dae44881d546956a",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 2",
        "func": "msg.toSpeak = \"Yes\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1520,
        "wires": [
            [
                "297e21fdfb154df6"
            ]
        ]
    },
    {
        "id": "9d613fe7a7f636c3",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 3",
        "func": "msg.toSpeak = \"No\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1580,
        "wires": [
            [
                "297e21fdfb154df6"
            ]
        ]
    },
    {
        "id": "eeded0a09a7108f7",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 4",
        "func": "msg.toSpeak = \"Failure\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1640,
        "wires": [
            [
                "297e21fdfb154df6"
            ]
        ]
    },
    {
        "id": "b696e3e8ab7f02f7",
        "type": "inject",
        "z": "d2cbc16db312fbed",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 450,
        "y": 60,
        "wires": [
            [
                "6fe07fb19f962a8b"
            ]
        ]
    },
    {
        "id": "fe4a3025b25f3f40",
        "type": "subflow:630454ba203bdeb2",
        "z": "d2cbc16db312fbed",
        "name": "",
        "env": [],
        "x": 430,
        "y": 180,
        "wires": [
            [
                "6fe07fb19f962a8b"
            ]
        ]
    },
    {
        "id": "462f77be0946762f",
        "type": "link out",
        "z": "d2cbc16db312fbed",
        "g": "d1cb9ae10eaaf7a5",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "73832cc0c4feb8e6"
        ],
        "x": 675,
        "y": 120,
        "wires": []
    },
    {
        "id": "3521f71b18b24be5",
        "type": "http in",
        "z": "2a81a7a539926088",
        "name": "Sahel >> ...",
        "url": "/sahel2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "18d0dc827c9a7e16"
            ]
        ],
        "info": "This is a description of the endpoint that should be picked up to search for execution"
    },
    {
        "id": "fb10373a483c72d6",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Pick an action:\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Manage configuration\",\"Open project\", \"Create delta branch\"]",
                "type": "str"
            }
        ],
        "x": 690,
        "y": 120,
        "wires": [
            [
                "5f2c6babf015cb08"
            ],
            [],
            [
                "baa33a4799b6a1ad"
            ]
        ]
    },
    {
        "id": "baa33a4799b6a1ad",
        "type": "switch",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 630,
        "y": 260,
        "wires": [
            [
                "b257d92d6bd6c732"
            ],
            [
                "8e8897bcbfed8f93"
            ],
            [
                "4eca86ceefc5f369"
            ],
            [
                "14c1b0b52a6f12fc"
            ]
        ]
    },
    {
        "id": "b257d92d6bd6c732",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "2a81a7a539926088",
        "g": "bcc5de1d48871a1f",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Which configuration?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Local machine configuration\",\"Deployed branch configuration\"]",
                "type": "str"
            }
        ],
        "x": 890,
        "y": 220,
        "wires": [
            [],
            [],
            [
                "99a3fd29f24b953f"
            ]
        ]
    },
    {
        "id": "99a3fd29f24b953f",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "bcc5de1d48871a1f",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "msg.payload.options[msg.payload.answer]",
                "type": "str"
            }
        ],
        "x": 1050,
        "y": 200,
        "wires": [
            [
                "62833578a3bcc1b6"
            ]
        ]
    },
    {
        "id": "4eca86ceefc5f369",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "55ac162180440a1e",
        "name": "Create delta branch",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Create delta branch\"",
                "type": "str"
            }
        ],
        "x": 890,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "14c1b0b52a6f12fc",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "1f0b8f059dc9909b",
        "name": "Unrecognized action",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Unrecognized action\"",
                "type": "str"
            }
        ],
        "x": 900,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "5782eda78f135e4a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "56f0325908066f66",
        "name": "Open the project",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Open the project\"",
                "type": "str"
            }
        ],
        "x": 930,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "dff2244c20c47fac",
        "type": "subflow:7725d64c5713a5a0",
        "z": "2a81a7a539926088",
        "g": "56f0325908066f66",
        "name": "Open in Rider",
        "env": [
            {
                "name": "command",
                "value": "\"rider .\"",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "\"D:/Projects/Sahel\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 1260,
        "y": 340,
        "wires": [
            [
                "2775c2d1adea0e84"
            ]
        ]
    },
    {
        "id": "5f2c6babf015cb08",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "error 123654",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"error 123654\"",
                "type": "str"
            }
        ],
        "x": 910,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7ecc575c5114f21d",
        "type": "link in",
        "z": "2a81a7a539926088",
        "name": "Sahel",
        "links": [
            "4fa558a20c6022e9"
        ],
        "x": 205,
        "y": 120,
        "wires": [
            [
                "18d0dc827c9a7e16"
            ]
        ]
    },
    {
        "id": "840335298b947951",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "2a81a7a539926088",
        "g": "56f0325908066f66",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Editor?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['Rider', 'VSCode']",
                "type": "str"
            }
        ],
        "x": 890,
        "y": 380,
        "wires": [
            [],
            [],
            [
                "4f576fa242ddff11"
            ]
        ]
    },
    {
        "id": "4f576fa242ddff11",
        "type": "switch",
        "z": "2a81a7a539926088",
        "g": "56f0325908066f66",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 380,
        "wires": [
            [
                "dff2244c20c47fac"
            ],
            [
                "b552921cce0ffae7"
            ]
        ]
    },
    {
        "id": "b552921cce0ffae7",
        "type": "subflow:7725d64c5713a5a0",
        "z": "2a81a7a539926088",
        "g": "56f0325908066f66",
        "name": "Open in VSCode",
        "env": [
            {
                "name": "command",
                "value": "\"code .\"",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "\"D:/Projects/Sahel\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "\"true\"",
                "type": "str"
            }
        ],
        "x": 1270,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "2775c2d1adea0e84",
        "type": "link out",
        "z": "2a81a7a539926088",
        "name": "link out 1",
        "mode": "return",
        "links": [],
        "x": 1375,
        "y": 340,
        "wires": []
    },
    {
        "id": "18d0dc827c9a7e16",
        "type": "subflow:630454ba203bdeb2",
        "z": "2a81a7a539926088",
        "name": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "fb10373a483c72d6",
                "9b30128ef2891f92"
            ]
        ]
    },
    {
        "id": "62833578a3bcc1b6",
        "type": "link out",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "link out 4",
        "mode": "return",
        "links": [],
        "x": 1165,
        "y": 200,
        "wires": []
    },
    {
        "id": "7d9394205c50f630",
        "type": "http in",
        "z": "2a81a7a539926088",
        "name": "Sahel >> Manage Configuration >> ...",
        "url": "/k4h6u0b",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 390,
        "y": 400,
        "wires": [
            [
                "b257d92d6bd6c732"
            ]
        ]
    },
    {
        "id": "9b30128ef2891f92",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "name": "Sahell",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Sahell\"",
                "type": "str"
            }
        ],
        "x": 470,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e8f86dc43a1d7dd4",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Pick an action\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['node-RED ...', \"Open Project\", \"Edit node-RED settings.js\", \"Restart Node-RED\"]",
                "type": "str"
            }
        ],
        "x": 330,
        "y": 240,
        "wires": [
            [],
            [],
            [
                "74ef18237a435ad3"
            ]
        ]
    },
    {
        "id": "c3c24425ea8ac0db",
        "type": "subflow:fd952472de19344b",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "",
        "env": [
            {
                "name": "workingDirectory",
                "value": "`%userprofile%/.node-red`",
                "type": "str"
            }
        ],
        "x": 1170,
        "y": 140,
        "wires": [
            [
                "10a66b918bad3694"
            ]
        ]
    },
    {
        "id": "74ef18237a435ad3",
        "type": "switch",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "45336ffdcd3bce3e"
            ],
            [
                "d089aba26f52fe05"
            ],
            [
                "863baa64dcc322dc"
            ],
            [
                "48286ea2d25319f7"
            ],
            []
        ]
    },
    {
        "id": "fce2ae6295dee262",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "83aeab0741db8810",
        "name": "",
        "x": 950,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c28a96954b4b1b30",
        "type": "function",
        "z": "b24567603cf835ad",
        "g": "83aeab0741db8810",
        "name": "false: It's not a git repository. Terminating execution",
        "func": "msg.toSpeak = \"It's not a git repository. Terminating execution\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 200,
        "wires": [
            [
                "fce2ae6295dee262"
            ]
        ]
    },
    {
        "id": "2403a67454e8f82b",
        "type": "link in",
        "z": "b24567603cf835ad",
        "name": "Gotcha Project",
        "links": [
            "1f9abd20675c99df"
        ],
        "x": 165,
        "y": 180,
        "wires": [
            [
                "4602c80b271db6a8"
            ]
        ]
    },
    {
        "id": "55217ce81fd9672f",
        "type": "catch",
        "z": "b24567603cf835ad",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 260,
        "y": 40,
        "wires": [
            [
                "cf493a7919cfd261"
            ]
        ]
    },
    {
        "id": "cf493a7919cfd261",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Error encountered\"",
                "type": "str"
            }
        ],
        "x": 430,
        "y": 40,
        "wires": [
            [
                "5e2707c59a34725a"
            ]
        ]
    },
    {
        "id": "4602c80b271db6a8",
        "type": "subflow:630454ba203bdeb2",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "eda7de984f2e78fb"
            ]
        ]
    },
    {
        "id": "10a66b918bad3694",
        "type": "link out",
        "z": "b24567603cf835ad",
        "name": "link out 3",
        "mode": "return",
        "links": [],
        "x": 1465,
        "y": 300,
        "wires": []
    },
    {
        "id": "004543fe8fe3119f",
        "type": "inject",
        "z": "b24567603cf835ad",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "4602c80b271db6a8"
            ]
        ]
    },
    {
        "id": "5e2707c59a34725a",
        "type": "function",
        "z": "b24567603cf835ad",
        "name": "re-throw",
        "func": "throw msg.error\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "12abe6b8dc1c9820",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "9e49a1ff1ff51f65",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"rider .\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/gwv.Gotcha\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "5c48bc25721f3efb"
            ]
        ]
    },
    {
        "id": "d089aba26f52fe05",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "b24567603cf835ad",
        "g": "8afb8df0eeea8641",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Open in ...?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['Rider', 'Terminal']",
                "type": "str"
            }
        ],
        "x": 710,
        "y": 440,
        "wires": [
            [],
            [],
            [
                "ae8f25dcbf57990e"
            ]
        ]
    },
    {
        "id": "34cc94d8b1496bc7",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "cad789a1334eb0a1",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"dir\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/gwv.Gotcha\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1070,
        "y": 500,
        "wires": [
            [
                "4a12457e360b25fd"
            ]
        ]
    },
    {
        "id": "ae8f25dcbf57990e",
        "type": "switch",
        "z": "b24567603cf835ad",
        "g": "8afb8df0eeea8641",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 860,
        "y": 440,
        "wires": [
            [
                "12abe6b8dc1c9820"
            ],
            [
                "34cc94d8b1496bc7"
            ]
        ]
    },
    {
        "id": "5c48bc25721f3efb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "9e49a1ff1ff51f65",
        "name": "\"Rider window is being activated\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Rider window is being activated\"",
                "type": "str"
            }
        ],
        "x": 1180,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "863baa64dcc322dc",
        "type": "function",
        "z": "b24567603cf835ad",
        "g": "61cecc79ecae9c9c",
        "name": "set state",
        "func": "msg.state = {\n    workingDir: `%userprofile%/.node-red/`,\n    command: `code \"settings.js\"`\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 660,
        "wires": [
            [
                "28f8e6808b8b46af"
            ]
        ]
    },
    {
        "id": "28f8e6808b8b46af",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "61cecc79ecae9c9c",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 660,
        "wires": [
            [
                "32f901e6698ef452"
            ]
        ]
    },
    {
        "id": "32f901e6698ef452",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "61cecc79ecae9c9c",
        "name": "\"setting.js is being opened in vscode\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"setting.js is being opened in vscode\"",
                "type": "str"
            }
        ],
        "x": 1130,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "48286ea2d25319f7",
        "type": "function",
        "z": "b24567603cf835ad",
        "g": "9ada3be8aad7cf16",
        "name": "set state",
        "func": "msg.state = {\n  command: `Get-CimInstance Win32_Process -Filter \"name = 'node.exe'\" | Where-Object { $_.CommandLine -like '*node-red*' } | ForEach-Object { Stop-Process -Id $_.ProcessId -Force }; & \"C:/nvm4w/nodejs/node-red.ps1\"`\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 760,
        "wires": [
            [
                "c43686785b6d461b"
            ]
        ]
    },
    {
        "id": "c43686785b6d461b",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "9ada3be8aad7cf16",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"C:/\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 860,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4a12457e360b25fd",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "cad789a1334eb0a1",
        "name": "\"Open in terminal\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Open in terminal\"",
                "type": "str"
            }
        ],
        "x": 1130,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "45336ffdcd3bce3e",
        "type": "link out",
        "z": "b24567603cf835ad",
        "g": "7b6831fed3eb3583",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "dad249fb2d2d0ea7"
        ],
        "x": 675,
        "y": 320,
        "wires": []
    },
    {
        "id": "eda7de984f2e78fb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "Gotcha",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Gotcha\"",
                "type": "str"
            }
        ],
        "x": 320,
        "y": 180,
        "wires": [
            [
                "e8f86dc43a1d7dd4"
            ]
        ]
    },
    {
        "id": "1696b17680f8224a",
        "type": "link in",
        "z": "9f851333696e4da5",
        "name": "Run instant NodeJS test",
        "links": [
            "937ddc8d124bbfbc"
        ],
        "x": 185,
        "y": 100,
        "wires": [
            [
                "1ea3a6fa11b88069"
            ]
        ]
    },
    {
        "id": "5f495ffd68a2c043",
        "type": "function",
        "z": "9f851333696e4da5",
        "g": "8a90e1f4484ae776",
        "name": "ensure dir",
        "func": "try\n{\n    const path = 'D://Workshops/Instant-NodeJS-Tests';\n\n    if (!fs.existsSync(path)) {\n        fs.mkdirSync(path, { recursive: true }); // recursive ensures nested directories\n        node.warn(`Directory created: ${path}`);\n    } else {\n        node.warn(`Directory already exists: ${path}`);\n    }\n\n    msg.state = {\n        workingDir: 'D://Workshops/Instant-NodeJS-Tests',\n        command: 'code .'\n    }\n}\ncatch(e)\n{\n    node.error(e, msg);\n    node.status({fill:\"red\",shape:\"dot\",text:\"error\"});\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 780,
        "y": 100,
        "wires": [
            [
                "4323a5571b21359f",
                "58e42705b26499db"
            ]
        ]
    },
    {
        "id": "4323a5571b21359f",
        "type": "subflow:4178eda1bbbd7002",
        "z": "9f851333696e4da5",
        "g": "8a90e1f4484ae776",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 930,
        "y": 100,
        "wires": [
            [
                "79dd080778281f77"
            ]
        ]
    },
    {
        "id": "1ea3a6fa11b88069",
        "type": "subflow:630454ba203bdeb2",
        "z": "9f851333696e4da5",
        "name": "",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "4146813cd90c1922"
            ]
        ]
    },
    {
        "id": "4146813cd90c1922",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "9f851333696e4da5",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "'Workshop Category?'",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['Testing NodeJS on the fly script']",
                "type": "str"
            }
        ],
        "x": 470,
        "y": 100,
        "wires": [
            [],
            [],
            [
                "16f53d476dac380c"
            ]
        ]
    },
    {
        "id": "16f53d476dac380c",
        "type": "switch",
        "z": "9f851333696e4da5",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 100,
        "wires": [
            [
                "5f495ffd68a2c043"
            ]
        ]
    },
    {
        "id": "58e42705b26499db",
        "type": "subflow:552764fe6e0b1a84",
        "z": "9f851333696e4da5",
        "g": "8a90e1f4484ae776",
        "name": "\"Expect a VSCode window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Expect a VSCode window\"",
                "type": "str"
            }
        ],
        "x": 1000,
        "y": 180,
        "wires": [
            [
                "79dd080778281f77"
            ]
        ]
    },
    {
        "id": "fd8bccefe68cbca4",
        "type": "http in",
        "z": "9f851333696e4da5",
        "name": "Workshops >> Test on the fly JavaScript through NodeJS",
        "url": "/g7p6r6h",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 380,
        "y": 240,
        "wires": [
            [
                "5f495ffd68a2c043"
            ]
        ]
    },
    {
        "id": "553d42f63a890b17",
        "type": "http response",
        "z": "9f851333696e4da5",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1290,
        "y": 120,
        "wires": []
    },
    {
        "id": "dad249fb2d2d0ea7",
        "type": "link in",
        "z": "66dc4606b2245ab2",
        "name": "node-RED",
        "links": [
            "45336ffdcd3bce3e",
            "25f6bee36d2516b0"
        ],
        "x": 215,
        "y": 240,
        "wires": [
            [
                "15e623c8433b1f76"
            ]
        ]
    },
    {
        "id": "3f8ed08e204ffd30",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66dc4606b2245ab2",
        "name": "\"Entered node red\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Entered node red\"",
                "type": "str"
            }
        ],
        "x": 490,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a1889c78832fa7a0",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66dc4606b2245ab2",
        "name": "'Completed'",
        "env": [
            {
                "name": "toSpeak",
                "value": "'Completed'",
                "type": "str"
            }
        ],
        "x": 1270,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a86cec7850552373",
        "type": "subflow:4178eda1bbbd7002",
        "z": "66dc4606b2245ab2",
        "g": "4c3a5f679ccdc9de",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1050,
        "y": 200,
        "wires": [
            [
                "a1889c78832fa7a0"
            ]
        ]
    },
    {
        "id": "f624215885e49d4d",
        "type": "function",
        "z": "66dc4606b2245ab2",
        "g": "4c3a5f679ccdc9de",
        "name": "set state",
        "func": "const setRemoteOrigin = \"git remote set-url  origin 'https://github.com/georgemesseha/nod-RED-personal-automation.git'\";\n\nmsg.state = {\n    command: `git commit -am '${new Date().toLocaleString()}'; ${setRemoteOrigin};  git push;`,\n    workingDir: \"%userprofile%/.node-red\",\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 200,
        "wires": [
            [
                "a86cec7850552373"
            ]
        ]
    },
    {
        "id": "dfa3a89525f09476",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "66dc4606b2245ab2",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Action?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Commit changes to node-RED repo\", \"Check current remote repo\", \"Open repo in VSCode\"]",
                "type": "str"
            }
        ],
        "x": 470,
        "y": 160,
        "wires": [
            [],
            [],
            [
                "84e32871ecd9c7f3"
            ]
        ]
    },
    {
        "id": "84e32871ecd9c7f3",
        "type": "switch",
        "z": "66dc4606b2245ab2",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 650,
        "y": 160,
        "wires": [
            [
                "f624215885e49d4d"
            ],
            [
                "47f17cbee36a87af"
            ],
            [
                "62d3d2fc63040766"
            ]
        ]
    },
    {
        "id": "15e623c8433b1f76",
        "type": "subflow:630454ba203bdeb2",
        "z": "66dc4606b2245ab2",
        "name": "",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "65d55b910b81a871"
            ]
        ]
    },
    {
        "id": "3cda33f00a8b50c1",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66dc4606b2245ab2",
        "g": "b2d4114c04cb6f09",
        "name": "\"Check current remote repo\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Check current remote repo\"",
                "type": "str"
            }
        ],
        "x": 1180,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "27b575852ed45707",
        "type": "function",
        "z": "66dc4606b2245ab2",
        "g": "b2d4114c04cb6f09",
        "name": "set command",
        "func": "msg.state = {\n    ... msg.state,\n    command: \"git remote -v\",\n    workingDir: \"%userprofile%/.node-red\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 380,
        "wires": [
            [
                "693f3b71b143a290"
            ]
        ]
    },
    {
        "id": "693f3b71b143a290",
        "type": "subflow:4178eda1bbbd7002",
        "z": "66dc4606b2245ab2",
        "g": "b2d4114c04cb6f09",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1300,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d5af89a97d36fb31",
        "type": "inject",
        "z": "66dc4606b2245ab2",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 870,
        "y": 360,
        "wires": [
            [
                "47f17cbee36a87af"
            ]
        ]
    },
    {
        "id": "47c2af09c675b60e",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66dc4606b2245ab2",
        "name": "\"Opening repo in VSCode\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Opening repo in VSCode\"",
                "type": "str"
            }
        ],
        "x": 1000,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "500e84ad35bd3461",
        "type": "function",
        "z": "66dc4606b2245ab2",
        "name": "set state",
        "func": "msg.state = {\n    ... msg.state,\n    command: \"code .\",\n    workingDir: \"%userprofile%/.node-red\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 600,
        "wires": [
            [
                "67b40131f7eac3ed"
            ]
        ]
    },
    {
        "id": "67b40131f7eac3ed",
        "type": "subflow:4178eda1bbbd7002",
        "z": "66dc4606b2245ab2",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 1070,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d940fd02be6cbd1e",
        "type": "http in",
        "z": "66dc4606b2245ab2",
        "name": "Node-RED / Commit changes to node-RED repo",
        "url": "/o2l8f9j",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 380,
        "y": 440,
        "wires": [
            [
                "ebfd6431323a136f"
            ]
        ]
    },
    {
        "id": "ebfd6431323a136f",
        "type": "subflow:630454ba203bdeb2",
        "z": "66dc4606b2245ab2",
        "name": "",
        "x": 650,
        "y": 340,
        "wires": [
            [
                "f624215885e49d4d"
            ]
        ]
    },
    {
        "id": "73832cc0c4feb8e6",
        "type": "link in",
        "z": "0c0d2ad2c595d8d7",
        "name": "Search your flows",
        "links": [
            "462f77be0946762f"
        ],
        "x": 215,
        "y": 160,
        "wires": [
            [
                "9b9294fa048cab58"
            ]
        ]
    },
    {
        "id": "9b9294fa048cab58",
        "type": "subflow:630454ba203bdeb2",
        "z": "0c0d2ad2c595d8d7",
        "name": "",
        "x": 470,
        "y": 180,
        "wires": [
            [
                "fbdce406ac18928e"
            ]
        ]
    },
    {
        "id": "401247fa346deaa1",
        "type": "function",
        "z": "0c0d2ad2c595d8d7",
        "g": "d4851dcab8bfd682",
        "name": "parse returned payload",
        "func": "const payload = JSON.parse(msg.payload) \n\nnode.warn(payload.endpoints);\n\nmsg.state = {\n    ... msg.state,\n    endpoints: payload.endpoints,\n    options: payload.endpoints.map(e => e.nodeName)\n}\n\nnode.warn(msg.state);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            },
            {
                "var": "path",
                "module": "path"
            },
            {
                "var": "child_process",
                "module": "child_process"
            }
        ],
        "x": 930,
        "y": 180,
        "wires": [
            [
                "7b835e6d6886d73b"
            ]
        ]
    },
    {
        "id": "b93d785d22ab6d98",
        "type": "inject",
        "z": "0c0d2ad2c595d8d7",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 250,
        "y": 280,
        "wires": [
            [
                "9b9294fa048cab58"
            ]
        ]
    },
    {
        "id": "fbdce406ac18928e",
        "type": "http request",
        "z": "0c0d2ad2c595d8d7",
        "g": "d4851dcab8bfd682",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:5101/getNodeREDendpoints",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 180,
        "wires": [
            [
                "401247fa346deaa1"
            ]
        ]
    },
    {
        "id": "7b835e6d6886d73b",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "0c0d2ad2c595d8d7",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Type to search\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "msg.state.options",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 300,
        "wires": [
            [],
            [],
            [
                "3bd426f1ab46ccab"
            ]
        ]
    },
    {
        "id": "4a06e4fe196c8287",
        "type": "http request",
        "z": "0c0d2ad2c595d8d7",
        "g": "cb7d25359320703a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e99a53bc2e1a2ae2",
        "type": "function",
        "z": "0c0d2ad2c595d8d7",
        "g": "cb7d25359320703a",
        "name": "locate the end point",
        "func": "node.warn('^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^');\nconst endpoints = msg.state.endpoints;\nconst targetEndpoint = endpoints[msg.state.answer];\n\nnode.warn(`targetEndpoint = `);\nnode.warn(targetEndpoint);\n\nmsg.state = {\n    ... msg.state,\n    endpoint: targetEndpoint\n}\n\nnode.warn(`url = ${targetEndpoint.url}`);\nmsg.url = `http://127.0.0.1:1880` + targetEndpoint.url;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 360,
        "wires": [
            [
                "4a06e4fe196c8287"
            ]
        ]
    },
    {
        "id": "3bd426f1ab46ccab",
        "type": "switch",
        "z": "0c0d2ad2c595d8d7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "-2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 300,
        "wires": [
            [
                "59bb5282b55f75d3"
            ],
            [
                "e99a53bc2e1a2ae2"
            ]
        ]
    },
    {
        "id": "59bb5282b55f75d3",
        "type": "subflow:552764fe6e0b1a84",
        "z": "0c0d2ad2c595d8d7",
        "name": "\"Prompt activated\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Prompt activated\"",
                "type": "str"
            }
        ],
        "x": 990,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "510dc50df4179d10",
        "type": "link in",
        "z": "83fa5debc97eaecb",
        "name": "Main Hierarchy",
        "links": [],
        "x": 255,
        "y": 140,
        "wires": [
            [
                "087095ed63574368"
            ]
        ]
    },
    {
        "id": "da5b501076da5171",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "83fa5debc97eaecb",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Category\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Projects\", \"Workspace\", \"Workshops\", \"Launching Utilities\"]",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 140,
        "wires": [
            [],
            [],
            [
                "6fdf389f4ca148e4"
            ]
        ]
    },
    {
        "id": "6fdf389f4ca148e4",
        "type": "switch",
        "z": "83fa5debc97eaecb",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 740,
        "y": 140,
        "wires": [
            [
                "9de929cb21c72086"
            ],
            [
                "4dfa4a66c194ba2d"
            ],
            [
                "937ddc8d124bbfbc"
            ],
            [
                "8d168a45978a628d"
            ]
        ]
    },
    {
        "id": "9de929cb21c72086",
        "type": "link out",
        "z": "83fa5debc97eaecb",
        "g": "0939cfee324d32b3",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "1e809f46f2ce0654"
        ],
        "x": 925,
        "y": 100,
        "wires": []
    },
    {
        "id": "4dfa4a66c194ba2d",
        "type": "link out",
        "z": "83fa5debc97eaecb",
        "g": "876c6331f050aedc",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "0f7a225421a45fe6"
        ],
        "x": 925,
        "y": 220,
        "wires": []
    },
    {
        "id": "087095ed63574368",
        "type": "subflow:630454ba203bdeb2",
        "z": "83fa5debc97eaecb",
        "name": "",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "da5b501076da5171"
            ]
        ]
    },
    {
        "id": "937ddc8d124bbfbc",
        "type": "link out",
        "z": "83fa5debc97eaecb",
        "g": "d7a707b03476512d",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "1696b17680f8224a"
        ],
        "x": 925,
        "y": 340,
        "wires": []
    },
    {
        "id": "ecc5a3e556a1c04e",
        "type": "http in",
        "z": "83fa5debc97eaecb",
        "name": ">>>",
        "url": "/d9u2r4t",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "087095ed63574368"
            ]
        ]
    },
    {
        "id": "8d168a45978a628d",
        "type": "link out",
        "z": "83fa5debc97eaecb",
        "g": "d5b871b6c3d10e5f",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "9c77e9d9ce631aa0"
        ],
        "x": 915,
        "y": 440,
        "wires": []
    },
    {
        "id": "1e809f46f2ce0654",
        "type": "link in",
        "z": "88bd534164ebf0ab",
        "name": "Projects",
        "links": [
            "9de929cb21c72086"
        ],
        "x": 245,
        "y": 140,
        "wires": [
            [
                "fc97755ea46a6439"
            ]
        ]
    },
    {
        "id": "0e8c3376ab20800e",
        "type": "switch",
        "z": "88bd534164ebf0ab",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 670,
        "y": 280,
        "wires": [
            [
                "4fa558a20c6022e9"
            ],
            [
                "b04f7c947ff65bf9"
            ],
            [
                "1f9abd20675c99df"
            ],
            [
                "25f6bee36d2516b0"
            ]
        ]
    },
    {
        "id": "b4395c836a8a31d4",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "88bd534164ebf0ab",
        "g": "c6d416c97692b61f",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"What project?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Sahell\",\"Zimbabwe\", \"Gotcha\", \"node-RED\"]",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 140,
        "wires": [
            [
                "57afd1505bc639d5"
            ],
            [
                "bbd69d6566786bd9"
            ],
            [
                "0e8c3376ab20800e"
            ]
        ]
    },
    {
        "id": "bbd69d6566786bd9",
        "type": "subflow:552764fe6e0b1a84",
        "z": "88bd534164ebf0ab",
        "g": "c6d416c97692b61f",
        "name": "\"Cancelled\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Cancelled\"",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "57afd1505bc639d5",
        "type": "subflow:552764fe6e0b1a84",
        "z": "88bd534164ebf0ab",
        "g": "c6d416c97692b61f",
        "name": "\"Failed to pick a project\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Failed to pick a project\"",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 80,
        "wires": [
            [
                "d03829623a2a7f73"
            ]
        ]
    },
    {
        "id": "d03829623a2a7f73",
        "type": "function",
        "z": "88bd534164ebf0ab",
        "g": "c6d416c97692b61f",
        "name": "set node.error",
        "func": "node.error(msg.error)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "1f9abd20675c99df",
        "type": "link out",
        "z": "88bd534164ebf0ab",
        "g": "be9b248c55b68f73",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "2403a67454e8f82b"
        ],
        "x": 905,
        "y": 460,
        "wires": []
    },
    {
        "id": "4fa558a20c6022e9",
        "type": "link out",
        "z": "88bd534164ebf0ab",
        "g": "eebee2a51eea17fe",
        "name": "Sahel",
        "mode": "link",
        "links": [
            "7ecc575c5114f21d"
        ],
        "x": 905,
        "y": 260,
        "wires": []
    },
    {
        "id": "25f6bee36d2516b0",
        "type": "link out",
        "z": "88bd534164ebf0ab",
        "g": "cc542cb9a782beb0",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "dad249fb2d2d0ea7"
        ],
        "x": 905,
        "y": 560,
        "wires": []
    },
    {
        "id": "fc97755ea46a6439",
        "type": "subflow:630454ba203bdeb2",
        "z": "88bd534164ebf0ab",
        "name": "",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "b4395c836a8a31d4"
            ]
        ]
    },
    {
        "id": "b04f7c947ff65bf9",
        "type": "link out",
        "z": "88bd534164ebf0ab",
        "g": "d726de86ecd8c1a2",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "7417db2dafce0cf2"
        ],
        "x": 905,
        "y": 360,
        "wires": []
    },
    {
        "id": "0f7a225421a45fe6",
        "type": "link in",
        "z": "231d43866ed2d184",
        "name": "Workspace",
        "links": [
            "4dfa4a66c194ba2d"
        ],
        "x": 265,
        "y": 80,
        "wires": [
            [
                "7d2cf3f56cf23923"
            ]
        ]
    },
    {
        "id": "7d2cf3f56cf23923",
        "type": "subflow:630454ba203bdeb2",
        "z": "231d43866ed2d184",
        "name": "",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "76a1b356ae257368"
            ]
        ]
    },
    {
        "id": "76a1b356ae257368",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "231d43866ed2d184",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Action?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Mange open window(s)\", \"Notion ...\"]",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 80,
        "wires": [
            [],
            [],
            [
                "5c02ee6ae42a28f0"
            ]
        ]
    },
    {
        "id": "5c02ee6ae42a28f0",
        "type": "switch",
        "z": "231d43866ed2d184",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 80,
        "wires": [
            [
                "e6d09a8a7f8e8bf3"
            ],
            [
                "119eb9845ad10e6f"
            ]
        ]
    },
    {
        "id": "119eb9845ad10e6f",
        "type": "link out",
        "z": "231d43866ed2d184",
        "g": "7fd3b69301a460a5",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "e685e4ed709b8faf"
        ],
        "x": 885,
        "y": 200,
        "wires": []
    },
    {
        "id": "e6d09a8a7f8e8bf3",
        "type": "link out",
        "z": "231d43866ed2d184",
        "g": "b2d82eb2553e598d",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "8bb3fa6d38e55690"
        ],
        "x": 885,
        "y": 80,
        "wires": []
    },
    {
        "id": "e685e4ed709b8faf",
        "type": "link in",
        "z": "9aba9cdb650afd6e",
        "name": "Notion ...",
        "links": [
            "119eb9845ad10e6f"
        ],
        "x": 365,
        "y": 260,
        "wires": [
            [
                "ae8d95553d57d2a1"
            ]
        ]
    },
    {
        "id": "ae8d95553d57d2a1",
        "type": "subflow:630454ba203bdeb2",
        "z": "9aba9cdb650afd6e",
        "name": "",
        "x": 470,
        "y": 260,
        "wires": [
            [
                "ee8cd3bdb2f34f93"
            ]
        ]
    },
    {
        "id": "ee8cd3bdb2f34f93",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "9aba9cdb650afd6e",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Action?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Check Notion's status\"]",
                "type": "str"
            }
        ],
        "x": 630,
        "y": 260,
        "wires": [
            [],
            [],
            [
                "0d330f947552afa5"
            ]
        ]
    },
    {
        "id": "0d330f947552afa5",
        "type": "switch",
        "z": "9aba9cdb650afd6e",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 260,
        "wires": [
            [
                "d5131b15b8cfe4cf"
            ]
        ]
    },
    {
        "id": "d5131b15b8cfe4cf",
        "type": "subflow:b23fac97ba53404f",
        "z": "9aba9cdb650afd6e",
        "name": "\"https://www.notionstatus.com\"",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.notionstatus.com\"",
                "type": "str"
            }
        ],
        "x": 1030,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "25e686425ad78212",
        "type": "http in",
        "z": "9aba9cdb650afd6e",
        "name": "Workspace >> Notion ...",
        "url": "/b5e5v5p",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 360,
        "wires": [
            [
                "ae8d95553d57d2a1"
            ]
        ]
    },
    {
        "id": "5aac5d997bfcc1d0",
        "type": "http in",
        "z": "9aba9cdb650afd6e",
        "name": "Workspace >> Check Notion satus",
        "url": "/h7y2h7c",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 460,
        "y": 440,
        "wires": [
            [
                "b70601359b69e195"
            ]
        ]
    },
    {
        "id": "b70601359b69e195",
        "type": "subflow:630454ba203bdeb2",
        "z": "9aba9cdb650afd6e",
        "name": "",
        "x": 710,
        "y": 420,
        "wires": [
            [
                "d5131b15b8cfe4cf"
            ]
        ]
    },
    {
        "id": "8bb3fa6d38e55690",
        "type": "link in",
        "z": "c0f1d6631219e9f1",
        "name": "Manage open windows",
        "links": [
            "e6d09a8a7f8e8bf3"
        ],
        "x": 185,
        "y": 380,
        "wires": [
            [
                "418d649c74d340b3"
            ]
        ]
    },
    {
        "id": "418d649c74d340b3",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 310,
        "y": 380,
        "wires": [
            [
                "4bb1b8d6b55b7b2f"
            ]
        ]
    },
    {
        "id": "4bb1b8d6b55b7b2f",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Action\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['Tile']",
                "type": "str"
            }
        ],
        "x": 440,
        "y": 380,
        "wires": [
            [],
            [],
            [
                "e9b7a7bf633ee7bd"
            ]
        ]
    },
    {
        "id": "e9b7a7bf633ee7bd",
        "type": "switch",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 380,
        "wires": [
            [
                "c24b2fae596d1233"
            ]
        ]
    },
    {
        "id": "c24b2fae596d1233",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"What process?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Teams\", \"Rider\", \"VSCode\", \"Notepad\"]",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 360,
        "wires": [
            [],
            [],
            [
                "f0e0206b94c16e0b"
            ]
        ]
    },
    {
        "id": "f0e0206b94c16e0b",
        "type": "switch",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 950,
        "y": 360,
        "wires": [
            [
                "174f025c8629da16"
            ],
            [
                "54a5279839f57b66"
            ],
            [
                "cccac219fc596bc3"
            ],
            [
                "efcd701a6f7c287f"
            ]
        ]
    },
    {
        "id": "174f025c8629da16",
        "type": "subflow:79b3adc8f3ea8d41",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile Teams windows",
        "env": [
            {
                "name": "processName",
                "value": "\"ms-teams\"",
                "type": "str"
            }
        ],
        "x": 1260,
        "y": 320,
        "wires": []
    },
    {
        "id": "efcd701a6f7c287f",
        "type": "subflow:79b3adc8f3ea8d41",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile Notepad windows",
        "env": [
            {
                "name": "processName",
                "value": "\"notepad\"",
                "type": "str"
            }
        ],
        "x": 1260,
        "y": 440,
        "wires": []
    },
    {
        "id": "37521eec74d29feb",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "Workspace >> Tile process windows >> Microsoft Teams #ms-teams",
        "url": "/m3s1r8k",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 640,
        "y": 40,
        "wires": [
            [
                "8416bb92b4a416c1"
            ]
        ]
    },
    {
        "id": "d90427118a91c65f",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "Workspace >> Tile process windows >> Notepad",
        "url": "/x1u4q2g",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 700,
        "y": 220,
        "wires": [
            [
                "05ba543da02dd89a"
            ]
        ]
    },
    {
        "id": "54a5279839f57b66",
        "type": "subflow:79b3adc8f3ea8d41",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile Rider windows",
        "env": [
            {
                "name": "processName",
                "value": "\"rider64\"",
                "type": "str"
            }
        ],
        "x": 1250,
        "y": 360,
        "wires": []
    },
    {
        "id": "cccac219fc596bc3",
        "type": "subflow:79b3adc8f3ea8d41",
        "z": "c0f1d6631219e9f1",
        "g": "413c8e337afa7cb7",
        "name": "Tile VSCode windows",
        "env": [
            {
                "name": "processName",
                "value": "\"code\"",
                "type": "str"
            }
        ],
        "x": 1260,
        "y": 400,
        "wires": []
    },
    {
        "id": "c5ebf8de1d15782f",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "Workspace >> Tile process windows >> VSCode",
        "url": "/n9m0y2f",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 700,
        "y": 160,
        "wires": [
            [
                "39dd6cb1684485a7"
            ]
        ]
    },
    {
        "id": "24e9e73f93870b12",
        "type": "http in",
        "z": "c0f1d6631219e9f1",
        "name": "Workspace >> Tile process windows >> Rider",
        "url": "/w2m3k2q",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 710,
        "y": 100,
        "wires": [
            [
                "bc6de0a70bb65602"
            ]
        ]
    },
    {
        "id": "05ba543da02dd89a",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 990,
        "y": 220,
        "wires": [
            [
                "efcd701a6f7c287f"
            ]
        ]
    },
    {
        "id": "39dd6cb1684485a7",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 990,
        "y": 160,
        "wires": [
            [
                "cccac219fc596bc3"
            ]
        ]
    },
    {
        "id": "bc6de0a70bb65602",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 990,
        "y": 100,
        "wires": [
            [
                "54a5279839f57b66"
            ]
        ]
    },
    {
        "id": "8416bb92b4a416c1",
        "type": "subflow:630454ba203bdeb2",
        "z": "c0f1d6631219e9f1",
        "name": "",
        "x": 990,
        "y": 40,
        "wires": [
            [
                "174f025c8629da16"
            ]
        ]
    },
    {
        "id": "9c77e9d9ce631aa0",
        "type": "link in",
        "z": "5cc51beeda65e265",
        "name": "Launching Utilities",
        "links": [
            "8d168a45978a628d"
        ],
        "x": 215,
        "y": 160,
        "wires": [
            [
                "715d5095ed7591e5"
            ]
        ]
    },
    {
        "id": "85304ba8a498dc8b",
        "type": "switch",
        "z": "5cc51beeda65e265",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 690,
        "y": 160,
        "wires": [
            [
                "e907169b1122cac6"
            ],
            [
                "b0162ac84e19adb7"
            ],
            [
                "af31c565bcf6ccd6"
            ]
        ]
    },
    {
        "id": "597426ab61cda8b2",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "5cc51beeda65e265",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Utility?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"-> Is site down for me only or for everyone?\", \"LLMs ...\", \"Packages Repos ...\"]",
                "type": "str"
            }
        ],
        "x": 500,
        "y": 160,
        "wires": [
            [],
            [],
            [
                "85304ba8a498dc8b"
            ]
        ]
    },
    {
        "id": "e907169b1122cac6",
        "type": "subflow:b23fac97ba53404f",
        "z": "5cc51beeda65e265",
        "g": "3a32e7f9469c4dde",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://downforeveryoneorjustme.com\"",
                "type": "str"
            }
        ],
        "x": 1110,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "cfc88a5cd1ce0312",
        "type": "http in",
        "z": "5cc51beeda65e265",
        "g": "3a32e7f9469c4dde",
        "name": "Utility >> Is site down for me only or for everyone?",
        "url": "/y1p0k8",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1070,
        "y": 60,
        "wires": [
            [
                "95afee336b1163a5"
            ]
        ]
    },
    {
        "id": "715d5095ed7591e5",
        "type": "subflow:630454ba203bdeb2",
        "z": "5cc51beeda65e265",
        "name": "",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "597426ab61cda8b2"
            ]
        ]
    },
    {
        "id": "95afee336b1163a5",
        "type": "subflow:630454ba203bdeb2",
        "z": "5cc51beeda65e265",
        "g": "3a32e7f9469c4dde",
        "name": "",
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "e907169b1122cac6"
            ]
        ]
    },
    {
        "id": "fa49ef80f4425688",
        "type": "http in",
        "z": "5cc51beeda65e265",
        "name": "Utilities >>...",
        "url": "/f7y2a2m",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 300,
        "wires": [
            [
                "715d5095ed7591e5"
            ]
        ]
    },
    {
        "id": "b0162ac84e19adb7",
        "type": "link out",
        "z": "5cc51beeda65e265",
        "g": "8c135555543e19ec",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "27ec476a6e4d108f"
        ],
        "x": 905,
        "y": 300,
        "wires": []
    },
    {
        "id": "af31c565bcf6ccd6",
        "type": "link out",
        "z": "5cc51beeda65e265",
        "g": "455587afd6b612e2",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "ee4d4dfb66289c43"
        ],
        "x": 915,
        "y": 420,
        "wires": []
    },
    {
        "id": "7417db2dafce0cf2",
        "type": "link in",
        "z": "93b537788dd24c1b",
        "name": "Zimbabwe ...",
        "links": [
            "b04f7c947ff65bf9"
        ],
        "x": 265,
        "y": 120,
        "wires": [
            [
                "33bce225cf9bb2b9"
            ]
        ]
    },
    {
        "id": "f0c6cfcbc89449fc",
        "type": "subflow:552764fe6e0b1a84",
        "z": "93b537788dd24c1b",
        "name": "Zimbabwe",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Zimbabwe\"",
                "type": "str"
            }
        ],
        "x": 730,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7ac6e1367c98d28b",
        "type": "http in",
        "z": "93b537788dd24c1b",
        "name": "Zimbabwe ...",
        "url": "/b9c2u2p",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 240,
        "wires": [
            [
                "33bce225cf9bb2b9"
            ]
        ]
    },
    {
        "id": "62c7625d9a0cb2a8",
        "type": "subflow:630454ba203bdeb2",
        "z": "93b537788dd24c1b",
        "name": "",
        "x": 500,
        "y": 160,
        "wires": [
            [
                "f0c6cfcbc89449fc"
            ]
        ]
    },
    {
        "id": "27ec476a6e4d108f",
        "type": "link in",
        "z": "6157c33bf9a6e985",
        "name": "Ai Tools",
        "links": [
            "b0162ac84e19adb7"
        ],
        "x": 195,
        "y": 160,
        "wires": [
            [
                "1ae71bd763ce2359"
            ]
        ]
    },
    {
        "id": "399a6caf9af03c7c",
        "type": "subflow:b23fac97ba53404f",
        "z": "6157c33bf9a6e985",
        "g": "5e312f027eab902b",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.deepseek.com\"",
                "type": "str"
            }
        ],
        "x": 1090,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ca5f946fc01e9d42",
        "type": "http in",
        "z": "6157c33bf9a6e985",
        "g": "5e312f027eab902b",
        "name": "Utility >> AI >> DeepSeek #Chinese",
        "url": "/f3y4i6f",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1020,
        "y": 280,
        "wires": [
            [
                "15835e0687dd64d8"
            ]
        ]
    },
    {
        "id": "15835e0687dd64d8",
        "type": "subflow:630454ba203bdeb2",
        "z": "6157c33bf9a6e985",
        "g": "5e312f027eab902b",
        "name": "",
        "x": 890,
        "y": 340,
        "wires": [
            [
                "399a6caf9af03c7c"
            ]
        ]
    },
    {
        "id": "9679086dd016502f",
        "type": "subflow:b23fac97ba53404f",
        "z": "6157c33bf9a6e985",
        "g": "91f45f1e0d2eea44",
        "name": "",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.chatgpt.com\"",
                "type": "str"
            }
        ],
        "x": 1070,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "bbf380a8bfe336cd",
        "type": "http in",
        "z": "6157c33bf9a6e985",
        "g": "91f45f1e0d2eea44",
        "name": "Utility >> AI >> ChatGPT",
        "url": "/j1u7v0v",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 990,
        "y": 120,
        "wires": [
            [
                "ee77cb8e03e4b2da"
            ]
        ]
    },
    {
        "id": "ee77cb8e03e4b2da",
        "type": "subflow:630454ba203bdeb2",
        "z": "6157c33bf9a6e985",
        "g": "91f45f1e0d2eea44",
        "name": "",
        "x": 890,
        "y": 180,
        "wires": [
            [
                "9679086dd016502f"
            ]
        ]
    },
    {
        "id": "94f606b9408a9788",
        "type": "switch",
        "z": "6157c33bf9a6e985",
        "g": "522d89bd3a697eaa",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 220,
        "wires": [
            [
                "ee77cb8e03e4b2da"
            ],
            [
                "15835e0687dd64d8"
            ]
        ]
    },
    {
        "id": "fd4a6c9b2acebfde",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "6157c33bf9a6e985",
        "g": "522d89bd3a697eaa",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"App?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"ChatGPT\", \"Deep Seek\"]",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 200,
        "wires": [
            [],
            [],
            [
                "94f606b9408a9788"
            ]
        ]
    },
    {
        "id": "d551b4acf4dcf2c8",
        "type": "http in",
        "z": "6157c33bf9a6e985",
        "name": ">> AI Tools >> ...",
        "url": "/m3e2x4x",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "1ae71bd763ce2359"
            ]
        ]
    },
    {
        "id": "458f1f778fe96631",
        "type": "subflow:630454ba203bdeb2",
        "z": "6157c33bf9a6e985",
        "name": "",
        "x": 320,
        "y": 200,
        "wires": [
            [
                "fd4a6c9b2acebfde"
            ]
        ]
    },
    {
        "id": "ee4d4dfb66289c43",
        "type": "link in",
        "z": "c3da96311434c492",
        "name": "Packages Repos",
        "links": [
            "af31c565bcf6ccd6"
        ],
        "x": 385,
        "y": 180,
        "wires": [
            [
                "719e47b7c2373dd2"
            ]
        ]
    },
    {
        "id": "719e47b7c2373dd2",
        "type": "subflow:630454ba203bdeb2",
        "z": "c3da96311434c492",
        "name": "",
        "x": 730,
        "y": 180,
        "wires": [
            [
                "06b634fbbb8787d2"
            ]
        ]
    },
    {
        "id": "11b5a8a4f98815b4",
        "type": "http in",
        "z": "c3da96311434c492",
        "name": "Packages Repos ...",
        "url": "/y5a6g4f",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 410,
        "y": 260,
        "wires": [
            [
                "719e47b7c2373dd2"
            ]
        ]
    },
    {
        "id": "06b634fbbb8787d2",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "c3da96311434c492",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"What Repo?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"npm #NodeJS #JavaScript\", \"nuget #.net #dotnet\"]",
                "type": "str"
            }
        ],
        "x": 890,
        "y": 180,
        "wires": [
            [],
            [],
            [
                "9a0cbd4cd6bbf7e0"
            ]
        ]
    },
    {
        "id": "9a0cbd4cd6bbf7e0",
        "type": "switch",
        "z": "c3da96311434c492",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 180,
        "wires": [
            [
                "0003a0be19f999e6"
            ],
            [
                "85f37a9b0924da24"
            ]
        ]
    },
    {
        "id": "0003a0be19f999e6",
        "type": "subflow:b23fac97ba53404f",
        "z": "c3da96311434c492",
        "name": "npmJs",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.npmjs.com\"",
                "type": "str"
            }
        ],
        "x": 1310,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "85f37a9b0924da24",
        "type": "subflow:b23fac97ba53404f",
        "z": "c3da96311434c492",
        "name": "nuget.org",
        "env": [
            {
                "name": "url",
                "value": "\"https://www.nuget.org\"",
                "type": "str"
            }
        ],
        "x": 1320,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b089f1bd790ec1e0",
        "type": "http in",
        "z": "c3da96311434c492",
        "name": "_> Open nuget.org  packages repo",
        "url": "/q0u3x1f",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 780,
        "y": 540,
        "wires": [
            [
                "2b2677b12c9ba838"
            ]
        ]
    },
    {
        "id": "2b2677b12c9ba838",
        "type": "subflow:630454ba203bdeb2",
        "z": "c3da96311434c492",
        "name": "",
        "x": 1010,
        "y": 540,
        "wires": [
            [
                "85f37a9b0924da24"
            ]
        ]
    },
    {
        "id": "477d516cd94dae92",
        "type": "http in",
        "z": "c3da96311434c492",
        "name": "_> Open npmJS packages repo",
        "url": "/y5a6g4f",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 770,
        "y": 460,
        "wires": [
            [
                "ef871f33fbd315ed"
            ]
        ]
    },
    {
        "id": "ef871f33fbd315ed",
        "type": "subflow:630454ba203bdeb2",
        "z": "c3da96311434c492",
        "name": "",
        "x": 990,
        "y": 460,
        "wires": [
            [
                "0003a0be19f999e6"
            ]
        ]
    }
]