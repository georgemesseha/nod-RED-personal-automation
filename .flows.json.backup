[
    {
        "id": "7a9bcfa6840e0f66",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d2cbc16db312fbed",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2a81a7a539926088",
        "type": "tab",
        "label": "Sahel",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b24567603cf835ad",
        "type": "tab",
        "label": "Gotcha",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9f851333696e4da5",
        "type": "tab",
        "label": "Workshops",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "66dc4606b2245ab2",
        "type": "tab",
        "label": "node-RED",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3f411aa3ba670cb2",
        "type": "subflow",
        "name": "Mcq",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "0f395ccfbe66a499"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 710,
                "y": 40,
                "wires": [
                    {
                        "id": "a89795192f231183",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1440,
                "y": 60,
                "wires": [
                    {
                        "id": "20a7673afc6ed2fd",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1020,
                "y": 300,
                "wires": [
                    {
                        "id": "af01eaae99bdbdde",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "question",
                "type": "str",
                "value": "string: Prompting user"
            },
            {
                "name": "options",
                "type": "str",
                "value": "string[]: The options available"
            },
            {
                "name": "out - answer",
                "type": "str",
                "value": "string: The selected item"
            }
        ],
        "meta": {
            "desc": "Start Mcq"
        },
        "color": "#E9967A",
        "inputLabels": [
            "options: [], question: \"\""
        ],
        "outputLabels": [
            "Failed",
            "Cancelled",
            "Option selected"
        ],
        "status": {
            "x": 240,
            "y": 40,
            "wires": [
                {
                    "id": "61db02665363232f",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "4178eda1bbbd7002",
        "type": "subflow",
        "name": "App",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 260,
                "wires": [
                    {
                        "id": "5ff56cb70dcde71d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 260,
                "wires": [
                    {
                        "id": "40dcda0be3cc1abd",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": "string"
            },
            {
                "name": "workingDir",
                "type": "str",
                "value": "string"
            },
            {
                "name": "detachSpawnedProcess",
                "type": "str",
                "value": "boolean"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "icon": "font-awesome/fa-terminal",
        "status": {
            "x": 740,
            "y": 60,
            "wires": [
                {
                    "id": "5bcf68ca5b6d18ea",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "552764fe6e0b1a84",
        "type": "subflow",
        "name": "Speak",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 180,
                "wires": [
                    {
                        "id": "8f02016211bd7db1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 180,
                "wires": [
                    {
                        "id": "d6146d6c9211a484",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "toSpeak",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "icon": "node-red/bridge.svg",
        "status": {
            "x": 460,
            "y": 80,
            "wires": [
                {
                    "id": "05313ae618fa54ce",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "66900ba2a8f4a83a",
        "type": "subflow",
        "name": "Sahell",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 160,
                "wires": [
                    {
                        "id": "80cfd8f678c5f588"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7725d64c5713a5a0",
        "type": "subflow",
        "name": "Run in terminal",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 220,
                "wires": [
                    {
                        "id": "14288d44e4764134"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 800,
                "y": 440,
                "wires": [
                    {
                        "id": "305cc53362b4c3be",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": "string"
            },
            {
                "name": "workingDirectory",
                "type": "str",
                "value": "string"
            },
            {
                "name": "detachSpawnedProcess",
                "type": "str",
                "value": "boolean"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 620,
            "y": 60,
            "wires": [
                {
                    "id": "d4af49bf82b54730",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "fd952472de19344b",
        "type": "subflow",
        "name": "belongsToGitRepo",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 220,
                "wires": [
                    {
                        "id": "c44dcb8ec83bb11a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 220,
                "wires": [
                    {
                        "id": "c44dcb8ec83bb11a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "workingDirectory",
                "type": "str",
                "value": "string"
            },
            {
                "name": "output",
                "type": "str",
                "value": "boolean"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 780,
            "y": 80,
            "wires": [
                {
                    "id": "b939dea23da041a3",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "67d0907b3004484d",
        "type": "subflow",
        "name": "Log",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 260,
                "wires": [
                    {
                        "id": "eadac2317ec8988a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 950,
                "y": 260,
                "wires": [
                    {
                        "id": "a37a3ae3665df4f0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "toLog"
        ],
        "outputLabels": [
            "void"
        ],
        "icon": "font-awesome/fa-pencil-square-o",
        "status": {
            "x": 400,
            "y": 160,
            "wires": [
                {
                    "id": "690b50199733f70c",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "0fc4eeeb2f2b1fb9",
        "type": "subflow",
        "name": "PlaySound_MouseClick",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 300,
                "y": 300,
                "wires": [
                    {
                        "id": "42b883da9df0572f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 300,
                "wires": [
                    {
                        "id": "42b883da9df0572f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "3b21b4f4bf47d43b",
        "type": "subflow",
        "name": "Prj - Sahel",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 120,
                "wires": [
                    {
                        "id": "51a5a5d4367190bb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 480,
                "wires": [
                    {
                        "id": "1976535bc8d1c38d",
                        "port": 0
                    },
                    {
                        "id": "b80fbb114eac869b",
                        "port": 0
                    },
                    {
                        "id": "268721640bba33e3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c4112ffe1214c7db",
        "type": "subflow",
        "name": "Stdout",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 220,
                "wires": [
                    {
                        "id": "f20fefea06b1e5a1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 180,
                "wires": [
                    {
                        "id": "8ca44f6712ee9d41",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1050,
                "y": 260,
                "wires": [
                    {
                        "id": "8ca44f6712ee9d41",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "command",
                "type": "str",
                "value": ""
            },
            {
                "name": "workingDirectory",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "command: \"\", workingDirectory: \"\""
        ],
        "outputLabels": [
            "exitCode <> 0",
            "exitCode = 0"
        ],
        "status": {
            "x": 740,
            "y": 60,
            "wires": [
                {
                    "id": "5d644f19a30478c3",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "630454ba203bdeb2",
        "type": "subflow",
        "name": "Spy",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 220,
                "wires": [
                    {
                        "id": "3421b92837959e7f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1140,
                "y": 220,
                "wires": [
                    {
                        "id": "900b20562dc99868",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "font-awesome/fa-user-secret"
    },
    {
        "id": "c96d6610ba199ebc",
        "type": "subflow",
        "name": "eval(env) => msg",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 240,
                "wires": [
                    {
                        "id": "41aeb3d70d9e1cda"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 300,
                "wires": [
                    {
                        "id": "829fb4a743420640",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 500,
            "y": 80,
            "wires": [
                {
                    "id": "3774797650d0b37b",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "bbea173bec06991e",
        "type": "subflow",
        "name": "Navigate to here",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 360,
                "y": 200,
                "wires": [
                    {
                        "id": "1dcc747d25575675"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 120,
                "wires": [
                    {
                        "id": "d6dd512304b44495",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "d4d3f1d585262a5e",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "Pick a project",
        "style": {
            "label": true
        },
        "nodes": [
            "8d80236191c2edcf",
            "8424fc7ac6890a33",
            "240cce09ccbbadb7",
            "34b69e6452869f0e"
        ],
        "x": 334,
        "y": 19,
        "w": 692,
        "h": 149.5
    },
    {
        "id": "46adcf9a15047f14",
        "type": "group",
        "z": "66900ba2a8f4a83a",
        "name": "Sahel: pick an action",
        "style": {
            "label": true
        },
        "nodes": [
            "80cfd8f678c5f588",
            "29c2a52829a460e0"
        ],
        "x": 254,
        "y": 111.5,
        "w": 352,
        "h": 97
    },
    {
        "id": "36a66f9784294584",
        "type": "group",
        "z": "66900ba2a8f4a83a",
        "name": "Manage configuration",
        "style": {
            "label": true,
            "fill": "#ff3f3f"
        },
        "nodes": [
            "9b46ab1d2752f15b",
            "f98cef9655b73c36",
            "e29790c7948ceb48",
            "fc1a122934e79424"
        ],
        "x": 314,
        "y": 231.5,
        "w": 712,
        "h": 97
    },
    {
        "id": "205b3f2b65e640ac",
        "type": "group",
        "z": "3b21b4f4bf47d43b",
        "name": "Sahel",
        "style": {
            "label": true,
            "fill": "#6f2fa0"
        },
        "nodes": [
            "51a5a5d4367190bb",
            "7dfc427dc8f64ac3",
            "8e1a987211bad503",
            "a8cd9bae7a0d9798",
            "22f34b8de298fa22",
            "233598e30fb59362",
            "c12bcca664e5d363"
        ],
        "x": 274,
        "y": 59,
        "w": 692,
        "h": 588
    },
    {
        "id": "895dc996bae1e925",
        "type": "group",
        "z": "2a81a7a539926088",
        "name": "Sahel",
        "style": {
            "label": true,
            "fill": "#6f2fa0"
        },
        "nodes": [
            "fb10373a483c72d6",
            "baa33a4799b6a1ad",
            "bcc5de1d48871a1f",
            "55ac162180440a1e",
            "1f0b8f059dc9909b",
            "56f0325908066f66",
            "5f2c6babf015cb08",
            "62833578a3bcc1b6",
            "8e8897bcbfed8f93"
        ],
        "x": 474,
        "y": 59,
        "w": 858,
        "h": 648
    },
    {
        "id": "a3b8de1e949dac34",
        "type": "group",
        "z": "b24567603cf835ad",
        "name": "Gotcha",
        "style": {
            "label": true,
            "fill": "#3f93cf"
        },
        "nodes": [
            "e8f86dc43a1d7dd4",
            "7cc7d74b3edcb61b",
            "4602c80b271db6a8"
        ],
        "x": 214,
        "y": 73,
        "w": 1184,
        "h": 780
    },
    {
        "id": "9c75164846d23142",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "Gotcha",
        "style": {
            "label": true
        },
        "nodes": [
            "17da5eb8464e8c90",
            "739b1d35da8cece5",
            "d14bcf084ed81bb0"
        ],
        "x": 804,
        "y": 399,
        "w": 212,
        "h": 162
    },
    {
        "id": "5c70157fe9fa1c7c",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "Sahel",
        "style": {
            "label": true
        },
        "nodes": [
            "df8972a80be17552",
            "1403a56ccb2d00db"
        ],
        "x": 754,
        "y": 179,
        "w": 152,
        "h": 122
    },
    {
        "id": "b0b8ce64042a4ec2",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "Workshops",
        "style": {
            "label": true
        },
        "nodes": [
            "7dd4db2275ba8983",
            "ada1d4d58a891b99"
        ],
        "x": 754,
        "y": 759,
        "w": 192,
        "h": 122
    },
    {
        "id": "8a90e1f4484ae776",
        "type": "group",
        "z": "9f851333696e4da5",
        "name": "Testing NodeJS on the fly script",
        "style": {
            "label": true
        },
        "nodes": [
            "5f495ffd68a2c043",
            "4323a5571b21359f",
            "58e42705b26499db"
        ],
        "x": 694,
        "y": 59,
        "w": 422,
        "h": 142
    },
    {
        "id": "743324308a5e3efc",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "node-RED",
        "style": {
            "label": true
        },
        "nodes": [
            "a2f42e665359af91"
        ],
        "x": 804,
        "y": 579,
        "w": 82,
        "h": 82
    },
    {
        "id": "4c3a5f679ccdc9de",
        "type": "group",
        "z": "66dc4606b2245ab2",
        "name": "Commit changes to node-RED repo",
        "style": {
            "stroke": "#3f3d4d",
            "fill": "#262533",
            "label": true,
            "color": "#ececec"
        },
        "nodes": [
            "a86cec7850552373",
            "f624215885e49d4d"
        ],
        "x": 814,
        "y": 159,
        "w": 312,
        "h": 82
    },
    {
        "id": "7a584cc5a457ef0c",
        "type": "group",
        "z": "d2cbc16db312fbed",
        "name": "Search all",
        "style": {
            "label": true
        },
        "nodes": [
            "2d975f7536c80674"
        ],
        "x": 1034,
        "y": 159,
        "w": 82,
        "h": 82
    },
    {
        "id": "b2d4114c04cb6f09",
        "type": "group",
        "z": "66dc4606b2245ab2",
        "name": "Check current remote repo",
        "style": {
            "label": true
        },
        "nodes": [
            "3cda33f00a8b50c1",
            "27b575852ed45707",
            "693f3b71b143a290"
        ],
        "x": 884,
        "y": 319,
        "w": 352,
        "h": 162
    },
    {
        "id": "8e1a987211bad503",
        "type": "group",
        "z": "3b21b4f4bf47d43b",
        "g": "205b3f2b65e640ac",
        "name": "Manage configuration",
        "style": {
            "label": true,
            "fill": "#3f93cf"
        },
        "nodes": [
            "ee2dbb0da11b89c8",
            "1976535bc8d1c38d"
        ],
        "x": 494,
        "y": 211.5,
        "w": 432,
        "h": 97
    },
    {
        "id": "a8cd9bae7a0d9798",
        "type": "group",
        "z": "3b21b4f4bf47d43b",
        "g": "205b3f2b65e640ac",
        "name": "Create delta branch",
        "style": {
            "label": true
        },
        "nodes": [
            "268721640bba33e3"
        ],
        "x": 494,
        "y": 439,
        "w": 232,
        "h": 82
    },
    {
        "id": "22f34b8de298fa22",
        "type": "group",
        "z": "3b21b4f4bf47d43b",
        "g": "205b3f2b65e640ac",
        "name": "Unexpected",
        "style": {
            "label": true,
            "fill": "#ff0000"
        },
        "nodes": [
            "81c0fd4bbd427cba"
        ],
        "x": 494,
        "y": 539,
        "w": 252,
        "h": 82
    },
    {
        "id": "233598e30fb59362",
        "type": "group",
        "z": "3b21b4f4bf47d43b",
        "g": "205b3f2b65e640ac",
        "name": "Open project in vscode",
        "style": {
            "label": true
        },
        "nodes": [
            "272f211e8ada725d",
            "b80fbb114eac869b"
        ],
        "x": 494,
        "y": 339,
        "w": 422,
        "h": 82
    },
    {
        "id": "bcc5de1d48871a1f",
        "type": "group",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "Manage configuration",
        "style": {
            "label": true,
            "fill": "#3f93cf"
        },
        "nodes": [
            "b257d92d6bd6c732",
            "99a3fd29f24b953f"
        ],
        "x": 734,
        "y": 159,
        "w": 312,
        "h": 109.5
    },
    {
        "id": "55ac162180440a1e",
        "type": "group",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "Create delta branch",
        "style": {
            "label": true
        },
        "nodes": [
            "4eca86ceefc5f369"
        ],
        "x": 694,
        "y": 479,
        "w": 232,
        "h": 82
    },
    {
        "id": "1f0b8f059dc9909b",
        "type": "group",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "Unexpected",
        "style": {
            "label": true,
            "fill": "#ff0000"
        },
        "nodes": [
            "14c1b0b52a6f12fc"
        ],
        "x": 694,
        "y": 599,
        "w": 252,
        "h": 82
    },
    {
        "id": "56f0325908066f66",
        "type": "group",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "Open project ",
        "style": {
            "label": true
        },
        "nodes": [
            "5782eda78f135e4a",
            "dff2244c20c47fac",
            "840335298b947951",
            "4f576fa242ddff11",
            "b552921cce0ffae7"
        ],
        "x": 734,
        "y": 279,
        "w": 572,
        "h": 162
    },
    {
        "id": "7cc7d74b3edcb61b",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "style": {
            "stroke": "#000000",
            "label": true
        },
        "nodes": [
            "c3c24425ea8ac0db",
            "74ef18237a435ad3",
            "83aeab0741db8810",
            "9e49a1ff1ff51f65",
            "8afb8df0eeea8641",
            "61cecc79ecae9c9c",
            "9ada3be8aad7cf16",
            "cad789a1334eb0a1",
            "7b6831fed3eb3583"
        ],
        "x": 428,
        "y": 99,
        "w": 944,
        "h": 728
    },
    {
        "id": "83aeab0741db8810",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "style": {
            "stroke": "#3f3d4d",
            "stroke-opacity": "1",
            "fill": "#262533",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#ececec"
        },
        "nodes": [
            "fce2ae6295dee262",
            "c28a96954b4b1b30"
        ],
        "x": 454,
        "y": 159,
        "w": 572,
        "h": 82
    },
    {
        "id": "9e49a1ff1ff51f65",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open in Rider",
        "style": {
            "stroke": "#3f3d4d",
            "fill": "#262533",
            "label": true,
            "color": "#ececec"
        },
        "nodes": [
            "12abe6b8dc1c9820",
            "5c48bc25721f3efb"
        ],
        "x": 994,
        "y": 319,
        "w": 352,
        "h": 122
    },
    {
        "id": "8afb8df0eeea8641",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open the project",
        "style": {
            "label": true
        },
        "nodes": [
            "d089aba26f52fe05",
            "ae8f25dcbf57990e"
        ],
        "x": 634,
        "y": 391.5,
        "w": 302,
        "h": 97
    },
    {
        "id": "61cecc79ecae9c9c",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open settings.js",
        "style": {
            "label": true
        },
        "nodes": [
            "863baa64dcc322dc",
            "28f8e6808b8b46af",
            "32f901e6698ef452"
        ],
        "x": 634,
        "y": 619,
        "w": 672,
        "h": 82
    },
    {
        "id": "9ada3be8aad7cf16",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Restart Nod-RED",
        "style": {
            "label": true
        },
        "nodes": [
            "48286ea2d25319f7",
            "c43686785b6d461b"
        ],
        "x": 634,
        "y": 719,
        "w": 302,
        "h": 82
    },
    {
        "id": "cad789a1334eb0a1",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "Open in terminal",
        "style": {
            "label": true
        },
        "nodes": [
            "34cc94d8b1496bc7",
            "4a12457e360b25fd"
        ],
        "x": 994,
        "y": 459,
        "w": 252,
        "h": 122
    },
    {
        "id": "7b6831fed3eb3583",
        "type": "group",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "node-RED",
        "style": {
            "label": true
        },
        "nodes": [
            "45336ffdcd3bce3e"
        ],
        "x": 634,
        "y": 279,
        "w": 82,
        "h": 82
    },
    {
        "id": "8e8897bcbfed8f93",
        "type": "junction",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "x": 680,
        "y": 280,
        "wires": [
            [
                "840335298b947951",
                "5782eda78f135e4a"
            ]
        ]
    },
    {
        "id": "e2f9cf02e7bd15cc",
        "type": "junction",
        "z": "d2cbc16db312fbed",
        "x": 740,
        "y": 380,
        "wires": [
            [
                "d14bcf084ed81bb0",
                "739b1d35da8cece5"
            ]
        ]
    },
    {
        "id": "b4f4b3fad37b05f0",
        "type": "junction",
        "z": "d2cbc16db312fbed",
        "x": 680,
        "y": 480,
        "wires": [
            [
                "ada1d4d58a891b99",
                "7dd4db2275ba8983"
            ]
        ]
    },
    {
        "id": "65d55b910b81a871",
        "type": "junction",
        "z": "66dc4606b2245ab2",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "dfa3a89525f09476",
                "3f8ed08e204ffd30"
            ]
        ]
    },
    {
        "id": "47f17cbee36a87af",
        "type": "junction",
        "z": "66dc4606b2245ab2",
        "x": 820,
        "y": 300,
        "wires": [
            [
                "3cda33f00a8b50c1",
                "27b575852ed45707"
            ]
        ]
    },
    {
        "id": "ccc07f140935b625",
        "type": "http request",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/mcq",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 100,
        "wires": [
            [
                "ebd18d02fd177378"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "af01eaae99bdbdde",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.warn(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\");\nnode.warn(msg.payload);\nconst strAnswer = msg.payload.answer + \": \" + msg.payload.options[msg.payload.answer];\nnode.status({ fill: \"green\", shape: \"ring\", text: strAnswer});\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "61db02665363232f",
        "type": "status",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "scope": [
            "af01eaae99bdbdde",
            "b63a4243c7b24f67",
            "0f395ccfbe66a499"
        ],
        "x": 100,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ebd18d02fd177378",
        "type": "switch",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 100,
        "wires": [
            [
                "b63a4243c7b24f67"
            ],
            [
                "7c3f059babc9fca1"
            ]
        ]
    },
    {
        "id": "20a7673afc6ed2fd",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3f411aa3ba670cb2",
        "name": "Declined",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Declined\"",
                "type": "str"
            }
        ],
        "x": 1220,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b63a4243c7b24f67",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"gray\", shape: \"ring\", text: \"declined\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 60,
        "wires": [
            [
                "20a7673afc6ed2fd"
            ]
        ]
    },
    {
        "id": "f3c8be8f663abd91",
        "type": "catch",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 380,
        "y": 40,
        "wires": [
            [
                "a89795192f231183"
            ]
        ]
    },
    {
        "id": "be7c7c04d2da7d2a",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "resolve input",
        "func": "// if(!msg.payload) msg.payload = {}\n\nmsg.payload = {\n    options : eval(env.get('options')),\n    question: eval(env.get('question'))\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 100,
        "wires": [
            [
                "ccc07f140935b625"
            ]
        ]
    },
    {
        "id": "8bab6895d30fa7d4",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3f411aa3ba670cb2",
        "name": "`${msg.payload.answer} selected`",
        "env": [
            {
                "name": "toSpeak",
                "value": "`${msg.payload.answer} selected`",
                "type": "str"
            }
        ],
        "x": 540,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "c8d68eed421f7bff",
        "type": "subflow:0fc4eeeb2f2b1fb9",
        "z": "3f411aa3ba670cb2",
        "name": "",
        "x": 830,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "0f395ccfbe66a499",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"blue\", shape: \"dot\", text: \"active\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 100,
        "wires": [
            [
                "be7c7c04d2da7d2a"
            ]
        ]
    },
    {
        "id": "7c3f059babc9fca1",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "update state",
        "func": "\nmsg.state = {\n    ... msg.state,\n    answer: msg.payload.answer\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 200,
        "wires": [
            [
                "af01eaae99bdbdde"
            ]
        ]
    },
    {
        "id": "a89795192f231183",
        "type": "function",
        "z": "3f411aa3ba670cb2",
        "name": "set status",
        "func": "node.status({ fill: \"red\", shape: \"dot\", text: \"Error\" });\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "bf8b03d7e2a96eea",
        "type": "http request",
        "z": "4178eda1bbbd7002",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/execBase64",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 260,
        "wires": [
            [
                "40dcda0be3cc1abd"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "a7ecc12d750180de",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set payload",
        "func": "const plainCommand = eval(env.get(\"command\"));\nconst base64Command = Buffer.from(plainCommand, 'utf16le').toString('base64');\n\nnode.warn(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\nnode.warn(base64Command);\n\n\nmsg.payload = {\n    command: base64Command,\n    workingDirectory: eval(env.get(\"workingDir\")),\n    detachSpawnedProcess: eval(env.get('detachSpawnedProcess'))\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 260,
        "wires": [
            [
                "bf8b03d7e2a96eea"
            ]
        ]
    },
    {
        "id": "5bcf68ca5b6d18ea",
        "type": "status",
        "z": "4178eda1bbbd7002",
        "name": "",
        "scope": null,
        "x": 390,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5ff56cb70dcde71d",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set status",
        "func": "node.status({fill:\"blue\",shape:\"dot\",text:\"Executing\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "a7ecc12d750180de"
            ]
        ]
    },
    {
        "id": "40dcda0be3cc1abd",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set status",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"Done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "108dd5729302b6a2",
        "type": "catch",
        "z": "4178eda1bbbd7002",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 380,
        "y": 140,
        "wires": [
            [
                "25bfdc21b1a3e63f"
            ]
        ]
    },
    {
        "id": "25bfdc21b1a3e63f",
        "type": "function",
        "z": "4178eda1bbbd7002",
        "name": "set status",
        "func": "node.status({fill:\"red\",shape:\"dot\",text:\"Error\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a80540014bb4644d",
        "type": "http request",
        "z": "552764fe6e0b1a84",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/speak",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 710,
        "y": 180,
        "wires": [
            [
                "d6146d6c9211a484"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "05313ae618fa54ce",
        "type": "status",
        "z": "552764fe6e0b1a84",
        "name": "",
        "scope": null,
        "x": 320,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3cdf863547072457",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "resolve input",
        "func": "msg.payload = {\n    toSpeak: eval(env.get('toSpeak'))\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 180,
        "wires": [
            [
                "a80540014bb4644d"
            ]
        ]
    },
    {
        "id": "d6146d6c9211a484",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "set status",
        "func": "node.status({ fill: \"green\", shape: \"ring\", text: \"Spoken\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8f02016211bd7db1",
        "type": "function",
        "z": "552764fe6e0b1a84",
        "name": "set status",
        "func": "node.status({ fill: \"yellow\", shape: \"ring\", text: \"Speaking\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 180,
        "wires": [
            [
                "3cdf863547072457"
            ]
        ]
    },
    {
        "id": "80cfd8f678c5f588",
        "type": "change",
        "z": "66900ba2a8f4a83a",
        "g": "46adcf9a15047f14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[\"Manage configuration\",\"Open project\", \"Create delta branch\"]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "question",
                "pt": "msg",
                "to": "Pick an action:",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "29c2a52829a460e0"
            ]
        ]
    },
    {
        "id": "29c2a52829a460e0",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "66900ba2a8f4a83a",
        "g": "46adcf9a15047f14",
        "name": "",
        "env": [
            {
                "name": "options",
                "value": "array of string values resembles the MCQ options",
                "type": "str"
            }
        ],
        "x": 530,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "12f9d30c8ef8d9e2",
        "type": "switch",
        "z": "66900ba2a8f4a83a",
        "name": "",
        "property": "answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Manage configuration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Open project",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Create delta branch",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 190,
        "y": 280,
        "wires": [
            [
                "9b46ab1d2752f15b"
            ],
            [
                "cc0fb9d167b0c25b"
            ],
            [
                "731c3bf96a90685a"
            ],
            [
                "e91ca3c661a6fd86"
            ]
        ]
    },
    {
        "id": "9b46ab1d2752f15b",
        "type": "change",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[\"Local machine configuration\",\"Deployed branch configuration\"]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "question",
                "pt": "msg",
                "to": "Which configuration:",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 280,
        "wires": [
            [
                "f98cef9655b73c36"
            ]
        ]
    },
    {
        "id": "f98cef9655b73c36",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "",
        "env": [
            {
                "name": "options",
                "value": "array of string values resembles the MCQ options",
                "type": "str"
            }
        ],
        "x": 590,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e29790c7948ceb48",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "",
        "x": 950,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fc1a122934e79424",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "g": "36a66f9784294584",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            [
                "e29790c7948ceb48"
            ]
        ]
    },
    {
        "id": "cc0fb9d167b0c25b",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 380,
        "wires": [
            [
                "4a33476e383f3c3c"
            ]
        ]
    },
    {
        "id": "4a33476e383f3c3c",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "name": "Open project",
        "x": 630,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "731c3bf96a90685a",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = msg.answer;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 440,
        "wires": [
            [
                "7c3ca5de45a9a2cb"
            ]
        ]
    },
    {
        "id": "7c3ca5de45a9a2cb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "name": "Create delta branch",
        "x": 650,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e91ca3c661a6fd86",
        "type": "function",
        "z": "66900ba2a8f4a83a",
        "name": "set msg.toSpeak",
        "func": "msg.toSpeak = \"unrecognized action\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 500,
        "wires": [
            [
                "5b834e82bef1f135"
            ]
        ]
    },
    {
        "id": "5b834e82bef1f135",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66900ba2a8f4a83a",
        "name": "Unrecognized action",
        "x": 650,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "fa81138c3d4a4454",
        "type": "http request",
        "z": "7725d64c5713a5a0",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/exec",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 440,
        "wires": [
            [
                "305cc53362b4c3be"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "7691eb48d8550e58",
        "type": "function",
        "z": "7725d64c5713a5a0",
        "name": "set payload",
        "func": "const expCommand = env.get('command');\nconst expWorkingDirectory = env.get('workingDirectory');\nconst detachSpawnedProcess = env.get('detachSpawnedProcess')\n\nmsg.payload.command = eval(expCommand);\nmsg.payload.workingDirectory = eval(expWorkingDirectory);\nmsg.payload.detachSpawnedProcess = eval(detachSpawnedProcess);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 220,
        "wires": [
            [
                "fa81138c3d4a4454"
            ]
        ]
    },
    {
        "id": "14288d44e4764134",
        "type": "function",
        "z": "7725d64c5713a5a0",
        "name": "set status",
        "func": "node.status({fill: \"blue\", shape: \"dot\", text:\"running\"})\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "7691eb48d8550e58"
            ]
        ]
    },
    {
        "id": "305cc53362b4c3be",
        "type": "function",
        "z": "7725d64c5713a5a0",
        "name": "function 7",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"Done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d4af49bf82b54730",
        "type": "status",
        "z": "7725d64c5713a5a0",
        "name": "",
        "scope": null,
        "x": 310,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1fbaae95e77ae315",
        "type": "subflow:c4112ffe1214c7db",
        "z": "fd952472de19344b",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "`git -C ${eval(env.get(\"workingDirectory\"))} rev-parse --is-inside-work-tree`",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "msg.payload.workingDirectory",
                "type": "str"
            }
        ],
        "x": 830,
        "y": 220,
        "wires": [
            [],
            [
                "0bcbf9cb961dbafa"
            ]
        ]
    },
    {
        "id": "d732e8bed0d68acb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fd952472de19344b",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "msg.payload.stdout",
                "type": "str"
            }
        ],
        "x": 1170,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "4dc0551d20dacf53",
        "type": "function",
        "z": "fd952472de19344b",
        "name": "function 5",
        "func": "throw \"an intended exception\"\nnode.status({fill:\"blue\",shape:\"dot\",text:\"Running\"});\nmsg.payload.workingDirectory = eval(env.get('workingDirectory'))\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "2c18de2cdb381053"
            ]
        ]
    },
    {
        "id": "b939dea23da041a3",
        "type": "status",
        "z": "fd952472de19344b",
        "name": "",
        "scope": null,
        "x": 520,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "0bcbf9cb961dbafa",
        "type": "function",
        "z": "fd952472de19344b",
        "name": "function 10",
        "func": "node.status({fill:\"green\",shape:\"ring\",text: \"done\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 220,
        "wires": [
            [
                "d732e8bed0d68acb"
            ]
        ]
    },
    {
        "id": "51dd07d7eda2b7a5",
        "type": "template",
        "z": "fd952472de19344b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 300,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1dddaba7a09f598c",
        "type": "catch",
        "z": "fd952472de19344b",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 520,
        "y": 140,
        "wires": [
            [
                "83bcc23514c1a879"
            ]
        ]
    },
    {
        "id": "1c1b462109047b27",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fd952472de19344b",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "msg.error",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c44dcb8ec83bb11a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fd952472de19344b",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "'got here from belongs to git repo'",
                "type": "str"
            }
        ],
        "x": 230,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2c18de2cdb381053",
        "type": "subflow:552764fe6e0b1a84",
        "z": "fd952472de19344b",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "'got there'",
                "type": "str"
            }
        ],
        "x": 690,
        "y": 220,
        "wires": [
            [
                "1fbaae95e77ae315"
            ]
        ]
    },
    {
        "id": "83bcc23514c1a879",
        "type": "function",
        "z": "fd952472de19344b",
        "d": true,
        "name": "function 11",
        "func": "node.error(msg.error, msg)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 140,
        "wires": [
            [
                "1c1b462109047b27"
            ]
        ]
    },
    {
        "id": "eadac2317ec8988a",
        "type": "function",
        "z": "67d0907b3004484d",
        "name": "set status \"logging\"",
        "func": "node.status({fill:\"yellow\",shape:\"dot\",text:\"logging\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 260,
        "wires": [
            [
                "fa0f59c319d74ca7"
            ]
        ]
    },
    {
        "id": "fa0f59c319d74ca7",
        "type": "http request",
        "z": "67d0907b3004484d",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/log",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 260,
        "wires": [
            [
                "a37a3ae3665df4f0"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "690b50199733f70c",
        "type": "status",
        "z": "67d0907b3004484d",
        "name": "",
        "scope": null,
        "x": 260,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a37a3ae3665df4f0",
        "type": "function",
        "z": "67d0907b3004484d",
        "name": "set status \"logged\"",
        "func": "node.status({fill:\"green\",shape:\"ring\",text:\"logged\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "42b883da9df0572f",
        "type": "http request",
        "z": "0fc4eeeb2f2b1fb9",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/playClick",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 300,
        "wires": [
            []
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "0492d8c92761fae3",
        "type": "http in",
        "z": "0fc4eeeb2f2b1fb9",
        "name": "",
        "url": "/playClick",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 440,
        "wires": [
            [
                "42b883da9df0572f"
            ]
        ]
    },
    {
        "id": "51a5a5d4367190bb",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "3b21b4f4bf47d43b",
        "g": "205b3f2b65e640ac",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Pick an action:\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Manage configuration\",\"Open project\", \"Create delta branch\"]",
                "type": "str"
            }
        ],
        "x": 590,
        "y": 120,
        "wires": [
            [],
            [
                "7dfc427dc8f64ac3"
            ],
            []
        ]
    },
    {
        "id": "7dfc427dc8f64ac3",
        "type": "switch",
        "z": "3b21b4f4bf47d43b",
        "g": "205b3f2b65e640ac",
        "name": "",
        "property": "answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "ee2dbb0da11b89c8"
            ],
            [
                "272f211e8ada725d"
            ],
            [
                "268721640bba33e3"
            ],
            [
                "81c0fd4bbd427cba"
            ]
        ]
    },
    {
        "id": "ee2dbb0da11b89c8",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "3b21b4f4bf47d43b",
        "g": "8e1a987211bad503",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Which configuration?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Local machine configuration\",\"Deployed branch configuration\"]",
                "type": "str"
            }
        ],
        "x": 570,
        "y": 260,
        "wires": [
            [],
            [
                "1976535bc8d1c38d"
            ],
            []
        ]
    },
    {
        "id": "1976535bc8d1c38d",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3b21b4f4bf47d43b",
        "g": "8e1a987211bad503",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "msg.answer",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "268721640bba33e3",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3b21b4f4bf47d43b",
        "g": "a8cd9bae7a0d9798",
        "name": "Create delta branch",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Create delta branch\"",
                "type": "str"
            }
        ],
        "x": 610,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "81c0fd4bbd427cba",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3b21b4f4bf47d43b",
        "g": "22f34b8de298fa22",
        "name": "Unrecognized action",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Unrecognized action\"",
                "type": "str"
            }
        ],
        "x": 620,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "272f211e8ada725d",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3b21b4f4bf47d43b",
        "g": "233598e30fb59362",
        "name": "Open the project",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Open the project\"",
                "type": "str"
            }
        ],
        "x": 610,
        "y": 380,
        "wires": [
            [
                "b80fbb114eac869b"
            ]
        ]
    },
    {
        "id": "b80fbb114eac869b",
        "type": "subflow:7725d64c5713a5a0",
        "z": "3b21b4f4bf47d43b",
        "g": "233598e30fb59362",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"rider .\"",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "\"D:/Projects/Sahel\"",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "c12bcca664e5d363",
        "type": "subflow:552764fe6e0b1a84",
        "z": "3b21b4f4bf47d43b",
        "g": "205b3f2b65e640ac",
        "name": "error 123654",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"error 123654\"",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "3c5b96377cc97890",
        "type": "http in",
        "z": "3b21b4f4bf47d43b",
        "name": "/sahel",
        "url": "/sahel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "51a5a5d4367190bb"
            ]
        ]
    },
    {
        "id": "f20fefea06b1e5a1",
        "type": "function",
        "z": "c4112ffe1214c7db",
        "name": "resolve input",
        "func": "node.status({ fill: \"yellow\", shape: \"dot\", text: \"running ...\" });\n\nmsg.payload.command = eval(env.get('command'));\nmsg.payload.workingDirectory = eval(env.get('workingDirectory'));\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "65159ca6a253de16"
            ]
        ]
    },
    {
        "id": "65159ca6a253de16",
        "type": "http request",
        "z": "c4112ffe1214c7db",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://localhost:5101/stdout",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 220,
        "wires": [
            [
                "8ca44f6712ee9d41"
            ]
        ],
        "info": "Invokes Gotcha's /exec endpoint"
    },
    {
        "id": "5d644f19a30478c3",
        "type": "status",
        "z": "c4112ffe1214c7db",
        "name": "",
        "scope": null,
        "x": 510,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8ca44f6712ee9d41",
        "type": "switch",
        "z": "c4112ffe1214c7db",
        "name": "",
        "property": "payload.exitCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6b48a278f99eb602",
        "type": "function",
        "z": "630454ba203bdeb2",
        "name": "set payload",
        "func": "msg.payload = {\n    ... msg.payload,\n    spyNodeId: node.id,\n}\n\nmsg.payload.spyNodeId = node.id;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 220,
        "wires": [
            [
                "69f791a222ca020e"
            ]
        ]
    },
    {
        "id": "69f791a222ca020e",
        "type": "http request",
        "z": "630454ba203bdeb2",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:5101/onSpyNode",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 220,
        "wires": [
            [
                "900b20562dc99868"
            ]
        ]
    },
    {
        "id": "cb847b77e3ec4f9b",
        "type": "subflow:552764fe6e0b1a84",
        "z": "630454ba203bdeb2",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Spy launched\"",
                "type": "str"
            }
        ],
        "x": 490,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "900b20562dc99868",
        "type": "function",
        "z": "630454ba203bdeb2",
        "name": "Set status",
        "func": "node.status({ fill: \"green\", shape: \"ring\", text: \"Done\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "3421b92837959e7f",
        "type": "function",
        "z": "630454ba203bdeb2",
        "name": "Set status",
        "func": "node.status({ fill: \"blue\", shape: \"dot\", text: \"reporting\" });\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 220,
        "wires": [
            [
                "6b48a278f99eb602"
            ]
        ]
    },
    {
        "id": "41aeb3d70d9e1cda",
        "type": "function",
        "z": "c96d6610ba199ebc",
        "name": "populate",
        "func": "const keysStr = env.get('argNames');\nconst keys = keysStr.split(',');\n\n\nfor(let key of keys)\n{\n    key = key.trim();\n    const valueExpr = env.get(key)\n    if(!valueExpr) continue;\n\n\n    const value = eval(valueExpr);\n    msg.payload[key] = value;\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 240,
        "wires": [
            [
                "829fb4a743420640"
            ]
        ]
    },
    {
        "id": "3774797650d0b37b",
        "type": "status",
        "z": "c96d6610ba199ebc",
        "name": "",
        "scope": null,
        "x": 260,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "829fb4a743420640",
        "type": "switch",
        "z": "c96d6610ba199ebc",
        "name": "",
        "property": "exit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "6dbcaee77b64b5ac"
            ],
            []
        ]
    },
    {
        "id": "01acfafb58984259",
        "type": "subflow:552764fe6e0b1a84",
        "z": "c96d6610ba199ebc",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"arg names were not provided to eval env to message var\"",
                "type": "str"
            }
        ],
        "x": 950,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6dbcaee77b64b5ac",
        "type": "function",
        "z": "c96d6610ba199ebc",
        "name": "set error status",
        "func": "node.status({fill:\"red\",shape:\"dot\",text:\"No envVars provided\"});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 160,
        "wires": [
            [
                "01acfafb58984259"
            ]
        ]
    },
    {
        "id": "1dcc747d25575675",
        "type": "function",
        "z": "bbea173bec06991e",
        "name": "function 12",
        "func": "throw \"fake exception\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d6dd512304b44495",
        "type": "catch",
        "z": "bbea173bec06991e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d666b9177808847a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "bbea173bec06991e",
        "name": "\"Caught\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Caught\"",
                "type": "str"
            }
        ],
        "x": 690,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d8a78a1b75d62031",
        "type": "inject",
        "z": "7a9bcfa6840e0f66",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "c19700b03c89a5b3"
            ]
        ]
    },
    {
        "id": "7488c913521da322",
        "type": "subflow:bbea173bec06991e",
        "z": "7a9bcfa6840e0f66",
        "name": "",
        "x": 760,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "19689395211b1485",
        "type": "subflow:552764fe6e0b1a84",
        "z": "7a9bcfa6840e0f66",
        "name": "'Got here'",
        "env": [
            {
                "name": "toSpeak",
                "value": "'Got here'",
                "type": "str"
            }
        ],
        "x": 580,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c19700b03c89a5b3",
        "type": "subflow:630454ba203bdeb2",
        "z": "7a9bcfa6840e0f66",
        "name": "",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "19689395211b1485"
            ]
        ],
        "icon": "font-awesome/fa-user"
    },
    {
        "id": "ccc22ff9a5668b2b",
        "type": "http in",
        "z": "d2cbc16db312fbed",
        "name": "",
        "url": "/mainFlow",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "fe4a3025b25f3f40"
            ]
        ]
    },
    {
        "id": "8d80236191c2edcf",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "d2cbc16db312fbed",
        "g": "d4d3f1d585262a5e",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"What project?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Sahell\",\"Zimbabwe\", \"Gotcha\", \"node-RED\", \"Workshops\"]",
                "type": "str"
            }
        ],
        "x": 410,
        "y": 120,
        "wires": [
            [
                "240cce09ccbbadb7"
            ],
            [
                "8424fc7ac6890a33"
            ],
            [
                "7fdfa55deef58d0a"
            ]
        ]
    },
    {
        "id": "8424fc7ac6890a33",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "d4d3f1d585262a5e",
        "name": "\"Cancelled\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Cancelled\"",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7fdfa55deef58d0a",
        "type": "switch",
        "z": "d2cbc16db312fbed",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 530,
        "y": 300,
        "wires": [
            [
                "1403a56ccb2d00db",
                "df8972a80be17552"
            ],
            [
                "bbc7012b1a1f40f4"
            ],
            [
                "e2f9cf02e7bd15cc"
            ],
            [
                "a2f42e665359af91"
            ],
            [
                "b4f4b3fad37b05f0"
            ],
            [
                "20df3cf63b563892"
            ]
        ]
    },
    {
        "id": "bbc7012b1a1f40f4",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "name": "Zimbabwe",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Zimbabwe\"",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "20df3cf63b563892",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "name": "Unrecognized project",
        "env": [
            {
                "name": "toSpeak",
                "value": "`Unrecognized project ${}`",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "4e48aa2d54120cbb",
        "type": "inject",
        "z": "d2cbc16db312fbed",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1500,
        "wires": [
            [
                "1d618ebee4d8b9dd"
            ]
        ]
    },
    {
        "id": "cb1338a5e96334e7",
        "type": "subflow:fd952472de19344b",
        "z": "d2cbc16db312fbed",
        "name": "",
        "x": 710,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "1d618ebee4d8b9dd",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 1",
        "func": "msg.workingDirectory = \"D:\\\\\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1500,
        "wires": [
            [
                "cb1338a5e96334e7"
            ]
        ]
    },
    {
        "id": "297e21fdfb154df6",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "name": "",
        "x": 1110,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "dae44881d546956a",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 2",
        "func": "msg.toSpeak = \"Yes\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1440,
        "wires": [
            [
                "297e21fdfb154df6"
            ]
        ]
    },
    {
        "id": "9d613fe7a7f636c3",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 3",
        "func": "msg.toSpeak = \"No\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1500,
        "wires": [
            [
                "297e21fdfb154df6"
            ]
        ]
    },
    {
        "id": "eeded0a09a7108f7",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "name": "function 4",
        "func": "msg.toSpeak = \"Failure\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1560,
        "wires": [
            [
                "297e21fdfb154df6"
            ]
        ]
    },
    {
        "id": "240cce09ccbbadb7",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "d4d3f1d585262a5e",
        "name": "\"Failed to pick a project\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Failed to pick a project\"",
                "type": "str"
            }
        ],
        "x": 670,
        "y": 60,
        "wires": [
            [
                "34b69e6452869f0e"
            ]
        ]
    },
    {
        "id": "df8972a80be17552",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "5c70157fe9fa1c7c",
        "name": "Sahell",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Sahell\"",
                "type": "str"
            }
        ],
        "x": 830,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "1403a56ccb2d00db",
        "type": "link out",
        "z": "d2cbc16db312fbed",
        "g": "5c70157fe9fa1c7c",
        "name": "Sahel",
        "mode": "link",
        "links": [
            "7ecc575c5114f21d"
        ],
        "x": 795,
        "y": 260,
        "wires": []
    },
    {
        "id": "b696e3e8ab7f02f7",
        "type": "inject",
        "z": "d2cbc16db312fbed",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "8d80236191c2edcf"
            ]
        ]
    },
    {
        "id": "17da5eb8464e8c90",
        "type": "link out",
        "z": "d2cbc16db312fbed",
        "g": "9c75164846d23142",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "2403a67454e8f82b"
        ],
        "x": 845,
        "y": 480,
        "wires": []
    },
    {
        "id": "d14bcf084ed81bb0",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "9c75164846d23142",
        "name": "Gotcha",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Gotcha\"",
                "type": "str"
            }
        ],
        "x": 890,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "fe4a3025b25f3f40",
        "type": "subflow:630454ba203bdeb2",
        "z": "d2cbc16db312fbed",
        "name": "",
        "env": [],
        "x": 190,
        "y": 157,
        "wires": [
            [
                "8d80236191c2edcf"
            ]
        ]
    },
    {
        "id": "739b1d35da8cece5",
        "type": "link call",
        "z": "d2cbc16db312fbed",
        "g": "9c75164846d23142",
        "name": "",
        "links": [
            "2403a67454e8f82b"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 910,
        "y": 520,
        "wires": [
            [
                "5fb02e82610b70bf"
            ]
        ]
    },
    {
        "id": "5666a6327824c84b",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "'back from gotcha'",
                "type": "str"
            }
        ],
        "x": 1250,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "5fb02e82610b70bf",
        "type": "subflow:630454ba203bdeb2",
        "z": "d2cbc16db312fbed",
        "name": "",
        "env": [],
        "x": 1110,
        "y": 480,
        "wires": [
            [
                "5666a6327824c84b"
            ]
        ]
    },
    {
        "id": "34b69e6452869f0e",
        "type": "function",
        "z": "d2cbc16db312fbed",
        "g": "d4d3f1d585262a5e",
        "name": "set node.error",
        "func": "node.error(msg.error)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7dd4db2275ba8983",
        "type": "link out",
        "z": "d2cbc16db312fbed",
        "g": "b0b8ce64042a4ec2",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "1696b17680f8224a"
        ],
        "x": 795,
        "y": 800,
        "wires": []
    },
    {
        "id": "ada1d4d58a891b99",
        "type": "subflow:552764fe6e0b1a84",
        "z": "d2cbc16db312fbed",
        "g": "b0b8ce64042a4ec2",
        "name": "Workshops",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Workshops\"",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "a2f42e665359af91",
        "type": "link out",
        "z": "d2cbc16db312fbed",
        "g": "743324308a5e3efc",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "dad249fb2d2d0ea7"
        ],
        "x": 845,
        "y": 620,
        "wires": []
    },
    {
        "id": "2d975f7536c80674",
        "type": "link out",
        "z": "d2cbc16db312fbed",
        "g": "7a584cc5a457ef0c",
        "name": "Search all",
        "mode": "link",
        "links": [],
        "x": 1075,
        "y": 200,
        "wires": []
    },
    {
        "id": "3521f71b18b24be5",
        "type": "http in",
        "z": "2a81a7a539926088",
        "name": "/sahel2",
        "url": "/sahel2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "18d0dc827c9a7e16"
            ]
        ]
    },
    {
        "id": "fb10373a483c72d6",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Pick an action:\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Manage configuration\",\"Open project\", \"Create delta branch\"]",
                "type": "str"
            }
        ],
        "x": 610,
        "y": 120,
        "wires": [
            [
                "5f2c6babf015cb08"
            ],
            [],
            [
                "baa33a4799b6a1ad"
            ]
        ]
    },
    {
        "id": "baa33a4799b6a1ad",
        "type": "switch",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 550,
        "y": 260,
        "wires": [
            [
                "b257d92d6bd6c732"
            ],
            [
                "8e8897bcbfed8f93"
            ],
            [
                "4eca86ceefc5f369"
            ],
            [
                "14c1b0b52a6f12fc"
            ]
        ]
    },
    {
        "id": "b257d92d6bd6c732",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "2a81a7a539926088",
        "g": "bcc5de1d48871a1f",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Which configuration?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Local machine configuration\",\"Deployed branch configuration\"]",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 220,
        "wires": [
            [],
            [],
            [
                "99a3fd29f24b953f"
            ]
        ]
    },
    {
        "id": "99a3fd29f24b953f",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "bcc5de1d48871a1f",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "msg.payload.options[msg.payload.answer]",
                "type": "str"
            }
        ],
        "x": 970,
        "y": 200,
        "wires": [
            [
                "62833578a3bcc1b6"
            ]
        ]
    },
    {
        "id": "4eca86ceefc5f369",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "55ac162180440a1e",
        "name": "Create delta branch",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Create delta branch\"",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "14c1b0b52a6f12fc",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "1f0b8f059dc9909b",
        "name": "Unrecognized action",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Unrecognized action\"",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "5782eda78f135e4a",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "56f0325908066f66",
        "name": "Open the project",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Open the project\"",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "dff2244c20c47fac",
        "type": "subflow:7725d64c5713a5a0",
        "z": "2a81a7a539926088",
        "g": "56f0325908066f66",
        "name": "Open in Rider",
        "env": [
            {
                "name": "command",
                "value": "\"rider .\"",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "\"D:/Projects/Sahel\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 1180,
        "y": 340,
        "wires": [
            [
                "2775c2d1adea0e84"
            ]
        ]
    },
    {
        "id": "5f2c6babf015cb08",
        "type": "subflow:552764fe6e0b1a84",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "error 123654",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"error 123654\"",
                "type": "str"
            }
        ],
        "x": 830,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7ecc575c5114f21d",
        "type": "link in",
        "z": "2a81a7a539926088",
        "name": "Sahel",
        "links": [
            "1403a56ccb2d00db"
        ],
        "x": 205,
        "y": 120,
        "wires": [
            [
                "18d0dc827c9a7e16"
            ]
        ]
    },
    {
        "id": "840335298b947951",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "2a81a7a539926088",
        "g": "56f0325908066f66",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Editor?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['Rider', 'VSCode']",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 380,
        "wires": [
            [],
            [],
            [
                "4f576fa242ddff11"
            ]
        ]
    },
    {
        "id": "4f576fa242ddff11",
        "type": "switch",
        "z": "2a81a7a539926088",
        "g": "56f0325908066f66",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 380,
        "wires": [
            [
                "dff2244c20c47fac"
            ],
            [
                "b552921cce0ffae7"
            ]
        ]
    },
    {
        "id": "b552921cce0ffae7",
        "type": "subflow:7725d64c5713a5a0",
        "z": "2a81a7a539926088",
        "g": "56f0325908066f66",
        "name": "Open in VSCode",
        "env": [
            {
                "name": "command",
                "value": "\"code .\"",
                "type": "str"
            },
            {
                "name": "workingDirectory",
                "value": "\"D:/Projects/Sahel\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "\"true\"",
                "type": "str"
            }
        ],
        "x": 1190,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "2775c2d1adea0e84",
        "type": "link out",
        "z": "2a81a7a539926088",
        "name": "link out 1",
        "mode": "return",
        "links": [],
        "x": 1375,
        "y": 340,
        "wires": []
    },
    {
        "id": "18d0dc827c9a7e16",
        "type": "subflow:630454ba203bdeb2",
        "z": "2a81a7a539926088",
        "name": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "fb10373a483c72d6"
            ]
        ]
    },
    {
        "id": "62833578a3bcc1b6",
        "type": "link out",
        "z": "2a81a7a539926088",
        "g": "895dc996bae1e925",
        "name": "link out 4",
        "mode": "return",
        "links": [],
        "x": 1085,
        "y": 200,
        "wires": []
    },
    {
        "id": "e8f86dc43a1d7dd4",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Pick an action\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['node-RED', \"Open Project\", \"Edit node-RED settings.js\", \"Restart Node-RED\"]",
                "type": "str"
            }
        ],
        "x": 330,
        "y": 220,
        "wires": [
            [],
            [],
            [
                "74ef18237a435ad3"
            ]
        ]
    },
    {
        "id": "c3c24425ea8ac0db",
        "type": "subflow:fd952472de19344b",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "",
        "env": [
            {
                "name": "workingDirectory",
                "value": "`%userprofile%/.node-red`",
                "type": "str"
            }
        ],
        "x": 1170,
        "y": 140,
        "wires": [
            [
                "10a66b918bad3694"
            ]
        ]
    },
    {
        "id": "74ef18237a435ad3",
        "type": "switch",
        "z": "b24567603cf835ad",
        "g": "7cc7d74b3edcb61b",
        "name": "",
        "property": "payload.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "45336ffdcd3bce3e"
            ],
            [
                "d089aba26f52fe05"
            ],
            [
                "863baa64dcc322dc"
            ],
            [
                "48286ea2d25319f7"
            ],
            []
        ]
    },
    {
        "id": "fce2ae6295dee262",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "83aeab0741db8810",
        "name": "",
        "x": 950,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c28a96954b4b1b30",
        "type": "function",
        "z": "b24567603cf835ad",
        "g": "83aeab0741db8810",
        "name": "false: It's not a git repository. Terminating execution",
        "func": "msg.toSpeak = \"It's not a git repository. Terminating execution\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 200,
        "wires": [
            [
                "fce2ae6295dee262"
            ]
        ]
    },
    {
        "id": "2403a67454e8f82b",
        "type": "link in",
        "z": "b24567603cf835ad",
        "name": "Gotcha Project",
        "links": [
            "17da5eb8464e8c90"
        ],
        "x": 165,
        "y": 180,
        "wires": [
            [
                "4602c80b271db6a8"
            ]
        ]
    },
    {
        "id": "55217ce81fd9672f",
        "type": "catch",
        "z": "b24567603cf835ad",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 260,
        "y": 40,
        "wires": [
            [
                "cf493a7919cfd261"
            ]
        ]
    },
    {
        "id": "cf493a7919cfd261",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Error encountered\"",
                "type": "str"
            }
        ],
        "x": 430,
        "y": 40,
        "wires": [
            [
                "5e2707c59a34725a"
            ]
        ]
    },
    {
        "id": "4602c80b271db6a8",
        "type": "subflow:630454ba203bdeb2",
        "z": "b24567603cf835ad",
        "g": "a3b8de1e949dac34",
        "name": "",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "e8f86dc43a1d7dd4"
            ]
        ]
    },
    {
        "id": "10a66b918bad3694",
        "type": "link out",
        "z": "b24567603cf835ad",
        "name": "link out 3",
        "mode": "return",
        "links": [],
        "x": 1465,
        "y": 300,
        "wires": []
    },
    {
        "id": "004543fe8fe3119f",
        "type": "inject",
        "z": "b24567603cf835ad",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "4602c80b271db6a8"
            ]
        ]
    },
    {
        "id": "5e2707c59a34725a",
        "type": "function",
        "z": "b24567603cf835ad",
        "name": "re-throw",
        "func": "throw msg.error\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "12abe6b8dc1c9820",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "9e49a1ff1ff51f65",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"rider .\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/gwv.Gotcha\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "5c48bc25721f3efb"
            ]
        ]
    },
    {
        "id": "d089aba26f52fe05",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "b24567603cf835ad",
        "g": "8afb8df0eeea8641",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Open in ...?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['Rider', 'Terminal']",
                "type": "str"
            }
        ],
        "x": 710,
        "y": 440,
        "wires": [
            [],
            [],
            [
                "ae8f25dcbf57990e"
            ]
        ]
    },
    {
        "id": "34cc94d8b1496bc7",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "cad789a1334eb0a1",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "\"dir\"",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"D:/Projects/gwv.Gotcha\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1070,
        "y": 500,
        "wires": [
            [
                "4a12457e360b25fd"
            ]
        ]
    },
    {
        "id": "ae8f25dcbf57990e",
        "type": "switch",
        "z": "b24567603cf835ad",
        "g": "8afb8df0eeea8641",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 860,
        "y": 440,
        "wires": [
            [
                "12abe6b8dc1c9820"
            ],
            [
                "34cc94d8b1496bc7"
            ]
        ]
    },
    {
        "id": "5c48bc25721f3efb",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "9e49a1ff1ff51f65",
        "name": "\"Rider window is being activated\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Rider window is being activated\"",
                "type": "str"
            }
        ],
        "x": 1180,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "863baa64dcc322dc",
        "type": "function",
        "z": "b24567603cf835ad",
        "g": "61cecc79ecae9c9c",
        "name": "set state",
        "func": "msg.state = {\n    workingDir: `%userprofile%/.node-red/`,\n    command: `code \"settings.js\"`\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 660,
        "wires": [
            [
                "28f8e6808b8b46af"
            ]
        ]
    },
    {
        "id": "28f8e6808b8b46af",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "61cecc79ecae9c9c",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 660,
        "wires": [
            [
                "32f901e6698ef452"
            ]
        ]
    },
    {
        "id": "32f901e6698ef452",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "61cecc79ecae9c9c",
        "name": "\"setting.js is being opened in vscode\"",
        "x": 1130,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "48286ea2d25319f7",
        "type": "function",
        "z": "b24567603cf835ad",
        "g": "9ada3be8aad7cf16",
        "name": "set state",
        "func": "msg.state = {\n  command: `Get-CimInstance Win32_Process -Filter \"name = 'node.exe'\" | Where-Object { $_.CommandLine -like '*node-red*' } | ForEach-Object { Stop-Process -Id $_.ProcessId -Force }; & \"C:/nvm4w/nodejs/node-red.ps1\"`\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 760,
        "wires": [
            [
                "c43686785b6d461b"
            ]
        ]
    },
    {
        "id": "c43686785b6d461b",
        "type": "subflow:4178eda1bbbd7002",
        "z": "b24567603cf835ad",
        "g": "9ada3be8aad7cf16",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "\"C:/\"",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 860,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4a12457e360b25fd",
        "type": "subflow:552764fe6e0b1a84",
        "z": "b24567603cf835ad",
        "g": "cad789a1334eb0a1",
        "name": "\"Open in terminal\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Open in terminal\"",
                "type": "str"
            }
        ],
        "x": 1130,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "45336ffdcd3bce3e",
        "type": "link out",
        "z": "b24567603cf835ad",
        "g": "7b6831fed3eb3583",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "dad249fb2d2d0ea7"
        ],
        "x": 675,
        "y": 320,
        "wires": []
    },
    {
        "id": "1696b17680f8224a",
        "type": "link in",
        "z": "9f851333696e4da5",
        "name": "Run instant NodeJS test",
        "links": [
            "7dd4db2275ba8983"
        ],
        "x": 185,
        "y": 100,
        "wires": [
            [
                "1ea3a6fa11b88069"
            ]
        ]
    },
    {
        "id": "5f495ffd68a2c043",
        "type": "function",
        "z": "9f851333696e4da5",
        "g": "8a90e1f4484ae776",
        "name": "ensure dir",
        "func": "try\n{\n    const path = 'D://Workshops/Instant-NodeJS-Tests';\n\n    if (!fs.existsSync(path)) {\n        fs.mkdirSync(path, { recursive: true }); // recursive ensures nested directories\n        node.warn(`Directory created: ${path}`);\n    } else {\n        node.warn(`Directory already exists: ${path}`);\n    }\n\n    msg.state = {\n        workingDir: 'D://Workshops/Instant-NodeJS-Tests',\n        command: 'code .'\n    }\n}\ncatch(e)\n{\n    node.error(e, msg);\n    node.status({fill:\"red\",shape:\"dot\",text:\"error\"});\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 780,
        "y": 100,
        "wires": [
            [
                "4323a5571b21359f",
                "58e42705b26499db"
            ]
        ]
    },
    {
        "id": "4323a5571b21359f",
        "type": "subflow:4178eda1bbbd7002",
        "z": "9f851333696e4da5",
        "g": "8a90e1f4484ae776",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "true",
                "type": "str"
            }
        ],
        "x": 930,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1ea3a6fa11b88069",
        "type": "subflow:630454ba203bdeb2",
        "z": "9f851333696e4da5",
        "name": "",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "4146813cd90c1922"
            ]
        ]
    },
    {
        "id": "4146813cd90c1922",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "9f851333696e4da5",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "'Workshop Category?'",
                "type": "str"
            },
            {
                "name": "options",
                "value": "['Testing NodeJS on the fly script']",
                "type": "str"
            }
        ],
        "x": 470,
        "y": 100,
        "wires": [
            [],
            [],
            [
                "16f53d476dac380c"
            ]
        ]
    },
    {
        "id": "16f53d476dac380c",
        "type": "switch",
        "z": "9f851333696e4da5",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 100,
        "wires": [
            [
                "5f495ffd68a2c043"
            ]
        ]
    },
    {
        "id": "58e42705b26499db",
        "type": "subflow:552764fe6e0b1a84",
        "z": "9f851333696e4da5",
        "g": "8a90e1f4484ae776",
        "name": "\"Expect a VSCode window\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Expect a VSCode window\"",
                "type": "str"
            }
        ],
        "x": 970,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "dad249fb2d2d0ea7",
        "type": "link in",
        "z": "66dc4606b2245ab2",
        "name": "node-RED",
        "links": [
            "a2f42e665359af91",
            "45336ffdcd3bce3e"
        ],
        "x": 175,
        "y": 100,
        "wires": [
            [
                "15e623c8433b1f76"
            ]
        ]
    },
    {
        "id": "3f8ed08e204ffd30",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66dc4606b2245ab2",
        "name": "\"Entered node red\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Entered node red\"",
                "type": "str"
            }
        ],
        "x": 490,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a1889c78832fa7a0",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66dc4606b2245ab2",
        "name": "",
        "env": [
            {
                "name": "toSpeak",
                "value": "'Completed'",
                "type": "str"
            }
        ],
        "x": 1250,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a86cec7850552373",
        "type": "subflow:4178eda1bbbd7002",
        "z": "66dc4606b2245ab2",
        "g": "4c3a5f679ccdc9de",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1050,
        "y": 200,
        "wires": [
            [
                "a1889c78832fa7a0"
            ]
        ]
    },
    {
        "id": "f624215885e49d4d",
        "type": "function",
        "z": "66dc4606b2245ab2",
        "g": "4c3a5f679ccdc9de",
        "name": "set state",
        "func": "const setRemoteOrigin = \"git remote set-url  origin 'https://github.com/georgemesseha/nod-RED-personal-automation.git'\";\n\nmsg.state = {\n    command: `git commit -am '${new Date().toLocaleString()}'; ${setRemoteOrigin};  git push;`,\n    workingDir: \"%userprofile%/.node-red\",\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 200,
        "wires": [
            [
                "a86cec7850552373"
            ]
        ]
    },
    {
        "id": "dfa3a89525f09476",
        "type": "subflow:3f411aa3ba670cb2",
        "z": "66dc4606b2245ab2",
        "name": "",
        "env": [
            {
                "name": "question",
                "value": "\"Action?\"",
                "type": "str"
            },
            {
                "name": "options",
                "value": "[\"Commit changes to node-RED repo\", \"Check current remote repo\"]",
                "type": "str"
            }
        ],
        "x": 450,
        "y": 180,
        "wires": [
            [],
            [],
            [
                "84e32871ecd9c7f3"
            ]
        ]
    },
    {
        "id": "84e32871ecd9c7f3",
        "type": "switch",
        "z": "66dc4606b2245ab2",
        "name": "",
        "property": "state.answer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "f624215885e49d4d"
            ],
            [
                "47f17cbee36a87af"
            ]
        ]
    },
    {
        "id": "15e623c8433b1f76",
        "type": "subflow:630454ba203bdeb2",
        "z": "66dc4606b2245ab2",
        "name": "",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "65d55b910b81a871"
            ]
        ]
    },
    {
        "id": "3cda33f00a8b50c1",
        "type": "subflow:552764fe6e0b1a84",
        "z": "66dc4606b2245ab2",
        "g": "b2d4114c04cb6f09",
        "name": "\"Check current remote repo\"",
        "env": [
            {
                "name": "toSpeak",
                "value": "\"Check current remote repo\"",
                "type": "str"
            }
        ],
        "x": 1040,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "27b575852ed45707",
        "type": "function",
        "z": "66dc4606b2245ab2",
        "g": "b2d4114c04cb6f09",
        "name": "set command",
        "func": "msg.state = {\n    ... msg.state,\n    command: \"git remote -v\",\n    workingDir: \"%userprofile%/.node-red\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 440,
        "wires": [
            [
                "693f3b71b143a290"
            ]
        ]
    },
    {
        "id": "693f3b71b143a290",
        "type": "subflow:4178eda1bbbd7002",
        "z": "66dc4606b2245ab2",
        "g": "b2d4114c04cb6f09",
        "name": "",
        "env": [
            {
                "name": "command",
                "value": "msg.state.command",
                "type": "str"
            },
            {
                "name": "workingDir",
                "value": "msg.state.workingDir",
                "type": "str"
            },
            {
                "name": "detachSpawnedProcess",
                "value": "false",
                "type": "str"
            }
        ],
        "x": 1160,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d5af89a97d36fb31",
        "type": "inject",
        "z": "66dc4606b2245ab2",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 600,
        "y": 400,
        "wires": [
            [
                "47f17cbee36a87af"
            ]
        ]
    }
]